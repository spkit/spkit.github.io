Search.setIndex({"docnames": ["auto_examples/electroencephalogram/index", "auto_examples/electroencephalogram/plot_sp_ATAR_algorithm_tuning", "auto_examples/electroencephalogram/plot_sp_EDF_FILE", "auto_examples/electroencephalogram/plot_sp_ICA_eeg_example", "auto_examples/electroencephalogram/plot_sp_eeg_artifact_removal_ATAR_algorithm", "auto_examples/electroencephalogram/plot_sp_eeg_artifact_removal_ICA", "auto_examples/electroencephalogram/plot_sp_eeg_artifact_removal_ICA_ATAR", "auto_examples/electroencephalogram/plot_sp_eeg_rhythmic_features", "auto_examples/electroencephalogram/plot_sp_eeg_topomaps", "auto_examples/electroencephalogram/sg_execution_times", "auto_examples/index", "auto_examples/information_theory/index", "auto_examples/information_theory/plot_it_dispersion_entropy_eeg_emb2", "auto_examples/information_theory/plot_it_dispersion_entropy_top_patterns", "auto_examples/information_theory/plot_it_entropy_discreet_example", "auto_examples/information_theory/plot_it_entropy_eeg_multi_channel", "auto_examples/information_theory/plot_it_entropy_real_valued_example", "auto_examples/information_theory/plot_it_sample_approx_entropy_comp", "auto_examples/information_theory/sg_execution_times", "auto_examples/machine_learning/index", "auto_examples/machine_learning/plot_ml_decision_tree_catogorical_features", "auto_examples/machine_learning/plot_ml_decision_tree_classification", "auto_examples/machine_learning/plot_ml_decision_tree_shrinking_capability_cls", "auto_examples/machine_learning/plot_ml_decision_tree_shrinking_capability_reg", "auto_examples/machine_learning/plot_ml_decision_tree_visualisation", "auto_examples/machine_learning/plot_ml_logistic_regression_examples", "auto_examples/machine_learning/plot_ml_naive_bayes_examples", "auto_examples/machine_learning/sg_execution_times", "auto_examples/multielectrode-array/index", "auto_examples/multielectrode-array/plot_mea_minimal_setting_example", "auto_examples/multielectrode-array/plot_mea_stepwise_example", "auto_examples/multielectrode-array/sg_execution_times", "auto_examples/release_highlights/index", "auto_examples/release_highlights/plot_release_highlights_0_0_9_6", "auto_examples/release_highlights/plot_release_highlights_0_0_9_7", "auto_examples/release_highlights/sg_execution_times", "auto_examples/sg_execution_times", "auto_examples/signal_processing/index", "auto_examples/signal_processing/plot_sp_RFB_for_period_estimation_demo_examples", "auto_examples/signal_processing/plot_sp_RFB_for_period_estimation_from_signal", "auto_examples/signal_processing/plot_sp_RFB_for_period_estimation_with_sparse_penalty", "auto_examples/signal_processing/plot_sp_analysis_sythesis_models", "auto_examples/signal_processing/plot_sp_fractional_fourier_transform", "auto_examples/signal_processing/plot_sp_sinusodal_model_analysis_synthesis", "auto_examples/signal_processing/plot_sp_sinusodal_model_example_sound", "auto_examples/signal_processing/sg_execution_times", "auto_examples/statistics/index", "auto_examples/statistics/plot_stats_group_boxplotes", "auto_examples/statistics/plot_stats_testing_2groups_demo", "auto_examples/statistics/sg_execution_times", "auto_examples/wavelet_analysis/index", "auto_examples/wavelet_analysis/plot_sp_scalogram_cwt_example", "auto_examples/wavelet_analysis/plot_sp_wavelet_filtering_example", "auto_examples/wavelet_analysis/sg_execution_times", "dev/contributing", "dev/index", "dev/versions", "empty_test", "getting_started", "install", "main_root", "min_dependency_substitutions", "min_dependency_table", "modules/biomedical_signals", "modules/bsp_ecg", "modules/bsp_eeg", "modules/bsp_egm", "modules/bsp_mea", "modules/classes", "modules/data", "modules/data2", "modules/data_samples", "modules/data_simulation", "modules/egm copy", "modules/generated/spkit.A_law", "modules/generated/spkit.Create_Dictionary", "modules/generated/spkit.ICA", "modules/generated/spkit.Mu_law", "modules/generated/spkit.OutLiers", "modules/generated/spkit.PCA", "modules/generated/spkit.PeriodStrength", "modules/generated/spkit.RFB", "modules/generated/spkit.RFB_example_1", "modules/generated/spkit.RFB_example_2", "modules/generated/spkit.RFB_prange", "modules/generated/spkit.SVD", "modules/generated/spkit.TD_Embed", "modules/generated/spkit.TWM_algo", "modules/generated/spkit.TWM_f0", "modules/generated/spkit.WPA_plot", "modules/generated/spkit.WPA_temporal", "modules/generated/spkit.Wavelet_decompositions", "modules/generated/spkit.add_noise", "modules/generated/spkit.agg_angles", "modules/generated/spkit.bin_width", "modules/generated/spkit.blackman_lobe", "modules/generated/spkit.cdf_mapping", "modules/generated/spkit.clean_phase", "modules/generated/spkit.conv1d_fb", "modules/generated/spkit.conv1d_fft", "modules/generated/spkit.conv1d_nan", "modules/generated/spkit.conv2d_nan", "modules/generated/spkit.create_multidim_space_signal", "modules/generated/spkit.create_signal_1d", "modules/generated/spkit.create_signal_2d", "modules/generated/spkit.cwt.GaborWave", "modules/generated/spkit.cwt.GaussWave", "modules/generated/spkit.cwt.MorlateWave", "modules/generated/spkit.cwt.PoissonWave", "modules/generated/spkit.cwt.ScalogramCWT", "modules/generated/spkit.cwt.ShannonWave", "modules/generated/spkit.cwt.WavePSD", "modules/generated/spkit.cwt.cMaxicanHatWave", "modules/generated/spkit.cwt.compare_cwt_example", "modules/generated/spkit.data.create_dataset", "modules/generated/spkit.data.ecg_sample", "modules/generated/spkit.data.ecg_sample_12leads", "modules/generated/spkit.data.eda_sample", "modules/generated/spkit.data.eeg_sample_14ch", "modules/generated/spkit.data.eeg_sample_1ch", "modules/generated/spkit.data.eeg_sample_artifact", "modules/generated/spkit.data.egm_sample", "modules/generated/spkit.data.gaussian", "modules/generated/spkit.data.gsr_sample", "modules/generated/spkit.data.linear", "modules/generated/spkit.data.linear_data", "modules/generated/spkit.data.mclass_gauss", "modules/generated/spkit.data.moons", "modules/generated/spkit.data.optical_sample", "modules/generated/spkit.data.ppg_sample", "modules/generated/spkit.data.primitive_polynomials", "modules/generated/spkit.data.sinusoidal", "modules/generated/spkit.data.spiral", "modules/generated/spkit.denorm_kernel", "modules/generated/spkit.dft_analysis", "modules/generated/spkit.dft_synthesis", "modules/generated/spkit.direction_flow_map", "modules/generated/spkit.dispersion_entropy", "modules/generated/spkit.dispersion_entropy_multiscale_refined", "modules/generated/spkit.dominent_freq", "modules/generated/spkit.dominent_freq_win", "modules/generated/spkit.eeg.ATAR", "modules/generated/spkit.eeg.ATAR_1Ch", "modules/generated/spkit.eeg.ATAR_mCh", "modules/generated/spkit.eeg.Gen_SSFI", "modules/generated/spkit.eeg.ICA_filtering", "modules/generated/spkit.eeg.RhythmicDecomposition", "modules/generated/spkit.eeg.TopoMap", "modules/generated/spkit.eeg.TopoMap_Zi", "modules/generated/spkit.eeg.display_topo_RGB", "modules/generated/spkit.eeg.rhythmic_powers", "modules/generated/spkit.eeg.rhythmic_powers_win", "modules/generated/spkit.eeg.s1005_get_epos2d", "modules/generated/spkit.eeg.s1010_get_epos2d", "modules/generated/spkit.eeg.s1020_get_epos2d", "modules/generated/spkit.eeg.showTOPO", "modules/generated/spkit.elbow_knee_point", "modules/generated/spkit.entropy", "modules/generated/spkit.entropy_approx", "modules/generated/spkit.entropy_cond", "modules/generated/spkit.entropy_cross", "modules/generated/spkit.entropy_diff_cond", "modules/generated/spkit.entropy_diff_cond_self", "modules/generated/spkit.entropy_diff_joint", "modules/generated/spkit.entropy_diff_joint_cond", "modules/generated/spkit.entropy_differential", "modules/generated/spkit.entropy_granger_causality", "modules/generated/spkit.entropy_joint", "modules/generated/spkit.entropy_kld", "modules/generated/spkit.entropy_permutation", "modules/generated/spkit.entropy_sample", "modules/generated/spkit.entropy_spectral", "modules/generated/spkit.entropy_svd", "modules/generated/spkit.f0_detection", "modules/generated/spkit.ffrft", "modules/generated/spkit.fill_nans_1d", "modules/generated/spkit.fill_nans_2d", "modules/generated/spkit.filterDC", "modules/generated/spkit.filterDC_sGolay", "modules/generated/spkit.filter_X", "modules/generated/spkit.filter_powerline", "modules/generated/spkit.filter_smooth_gauss", "modules/generated/spkit.filter_smooth_mollifier", "modules/generated/spkit.filter_smooth_sGolay", "modules/generated/spkit.filter_with_kernel", "modules/generated/spkit.filtering_pipeline", "modules/generated/spkit.frft", "modules/generated/spkit.friedrichs_mollifier_kernel", "modules/generated/spkit.gaussian_kernel", "modules/generated/spkit.geometry.Inter2DPlane", "modules/generated/spkit.geometry.TriAng", "modules/generated/spkit.geometry.area_tri", "modules/generated/spkit.geometry.car2spar", "modules/generated/spkit.geometry.dir_vectors", "modules/generated/spkit.geometry.divide_space", "modules/generated/spkit.geometry.getTriFaces", "modules/generated/spkit.geometry.getTriFaces_V2", "modules/generated/spkit.geometry.get_PCA", "modules/generated/spkit.geometry.get_adjacency_matrix_depth", "modules/generated/spkit.geometry.get_adjacency_matrix_dist", "modules/generated/spkit.geometry.get_adjacency_matrix_kNN", "modules/generated/spkit.geometry.get_center", "modules/generated/spkit.geometry.get_circle", "modules/generated/spkit.geometry.get_circular_grid", "modules/generated/spkit.geometry.get_ellipsoid", "modules/generated/spkit.geometry.get_neibours", "modules/generated/spkit.geometry.get_optimal_projection", "modules/generated/spkit.geometry.get_plane", "modules/generated/spkit.geometry.get_sphare", "modules/generated/spkit.geometry.get_square", "modules/generated/spkit.geometry.get_square_grid", "modules/generated/spkit.geometry.lin_inter", "modules/generated/spkit.geometry.node2C_to_adjacency_matrix", "modules/generated/spkit.geometry.opt_project", "modules/generated/spkit.geometry.plot_proj", "modules/generated/spkit.geometry.rotation_matrix", "modules/generated/spkit.geometry.spar2car", "modules/generated/spkit.geometry.surface_plot_mayavi", "modules/generated/spkit.geometry.surface_reconstruction", "modules/generated/spkit.getQuickStats", "modules/generated/spkit.getStats", "modules/generated/spkit.get_activation_time", "modules/generated/spkit.get_repolarisation_time", "modules/generated/spkit.graph_filter_adj", "modules/generated/spkit.graph_filter_dist", "modules/generated/spkit.hist_plot", "modules/generated/spkit.iffrft", "modules/generated/spkit.ifrft", "modules/generated/spkit.io.read_bdf", "modules/generated/spkit.io.read_hdf", "modules/generated/spkit.io.read_surf", "modules/generated/spkit.io.read_surf_file", "modules/generated/spkit.io.read_vtk", "modules/generated/spkit.io.write_vtk", "modules/generated/spkit.is_power2", "modules/generated/spkit.low_resolution", "modules/generated/spkit.mea.activation_repol_time_loc", "modules/generated/spkit.mea.activation_time_loc", "modules/generated/spkit.mea.align_cycles", "modules/generated/spkit.mea.analyse_mea_file", "modules/generated/spkit.mea.arrange_mea_grid", "modules/generated/spkit.mea.compute_cv", "modules/generated/spkit.mea.egm_features", "modules/generated/spkit.mea.extract_egm", "modules/generated/spkit.mea.find_bad_channels_idx", "modules/generated/spkit.mea.get_stim_loc", "modules/generated/spkit.mea.mat_1_show", "modules/generated/spkit.mea.mat_list_show", "modules/generated/spkit.mea.mea_feature_map", "modules/generated/spkit.mea.plot_mea_grid", "modules/generated/spkit.mea.unarrange_mea_grid", "modules/generated/spkit.mean_minSE", "modules/generated/spkit.minMSE", "modules/generated/spkit.ml.ClassificationTree", "modules/generated/spkit.ml.DecisionTree", "modules/generated/spkit.ml.LogisticRegression", "modules/generated/spkit.ml.NaiveBayes", "modules/generated/spkit.ml.RegressionTree", "modules/generated/spkit.mutual_info", "modules/generated/spkit.mutual_info_diff", "modules/generated/spkit.mutual_info_diff_self", "modules/generated/spkit.partial_transfer_entropy", "modules/generated/spkit.peak_detection", "modules/generated/spkit.peak_interp", "modules/generated/spkit.periodogram", "modules/generated/spkit.phase_map", "modules/generated/spkit.phase_map_reconstruction", "modules/generated/spkit.plotJointEntropyXY", "modules/generated/spkit.quantize_FD", "modules/generated/spkit.quantize_signal", "modules/generated/spkit.ramanujan_filter", "modules/generated/spkit.ramanujan_filter_prange", "modules/generated/spkit.regularised_period_estimation", "modules/generated/spkit.show_compass", "modules/generated/spkit.show_farmulas", "modules/generated/spkit.signal_delayed_space", "modules/generated/spkit.signal_diff", "modules/generated/spkit.simplify_signal", "modules/generated/spkit.sinc_dirichlet", "modules/generated/spkit.sinc_interp", "modules/generated/spkit.sineModel_analysis", "modules/generated/spkit.sineModel_synthesis", "modules/generated/spkit.sine_spectrum", "modules/generated/spkit.sine_tracking", "modules/generated/spkit.sinetracks_cleaning", "modules/generated/spkit.spatial_filter_adj", "modules/generated/spkit.spatial_filter_dist", "modules/generated/spkit.stats.get_stats", "modules/generated/spkit.stats.outliers", "modules/generated/spkit.stats.plot_groups_boxes", "modules/generated/spkit.stats.quick_stats", "modules/generated/spkit.stats.test_2groups", "modules/generated/spkit.stats.test_groups", "modules/generated/spkit.stft_analysis", "modules/generated/spkit.stft_synthesis", "modules/generated/spkit.total_variation", "modules/generated/spkit.total_variation_win", "modules/generated/spkit.transfer_entropy", "modules/generated/spkit.transfer_entropy_cond", "modules/generated/spkit.utils.ProgBar", "modules/generated/spkit.utils.ProgBar_JL", "modules/generated/spkit.utils.bcolors", "modules/generated/spkit.utils.pretty_print", "modules/generated/spkit.utils.txcolors", "modules/generated/spkit.utils.view_hierarchical_order", "modules/generated/spkit.wavelet_decomposed_signals", "modules/generated/spkit.wavelet_filtering", "modules/generated/spkit.wavelet_filtering_win", "modules/generated/spkit.wpa_coeff", "modules/generated/spkit.wpa_coeff_win", "modules/information_theory", "modules/ioutils", "modules/it_apps", "modules/it_disperssion_differential", "modules/it_entropy", "modules/machine_learning", "modules/ml_decision_trees", "modules/ml_logistic_regression", "modules/ml_naive_bayes", "modules/signal_processing", "modules/sp_cwt", "modules/sp_dft", "modules/sp_differentiation", "modules/sp_dwt", "modules/sp_filtering_drift", "modules/sp_filtering_graph", "modules/sp_filtering_kernel", "modules/sp_filtering_pipe", "modules/sp_filtering_smooth", "modules/sp_filtering_spatial", "modules/sp_filtering_spectral", "modules/sp_frft", "modules/sp_mapping", "modules/sp_more", "modules/sp_ramanujan", "modules/sp_simplify", "modules/sp_sinusoidal", "modules/sp_stft", "modules/spsignal_analysis", "modules/spsignal_filtering", "modules/spwavelet_analysis", "modules/statisticsutils", "modules/statsfun", "modules/utils", "related_projects", "sg_execution_times", "tune_toc", "tutorials/index", "tutorials/signal_processing/index", "user_guide", "whats_new", "whats_new/_contributors", "whats_new/index", "whats_new/v0.0.9.6", "whats_new/v0.0.9.7"], "filenames": ["auto_examples/electroencephalogram/index.rst", "auto_examples/electroencephalogram/plot_sp_ATAR_algorithm_tuning.rst", "auto_examples/electroencephalogram/plot_sp_EDF_FILE.rst", "auto_examples/electroencephalogram/plot_sp_ICA_eeg_example.rst", "auto_examples/electroencephalogram/plot_sp_eeg_artifact_removal_ATAR_algorithm.rst", "auto_examples/electroencephalogram/plot_sp_eeg_artifact_removal_ICA.rst", "auto_examples/electroencephalogram/plot_sp_eeg_artifact_removal_ICA_ATAR.rst", "auto_examples/electroencephalogram/plot_sp_eeg_rhythmic_features.rst", "auto_examples/electroencephalogram/plot_sp_eeg_topomaps.rst", "auto_examples/electroencephalogram/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/information_theory/index.rst", "auto_examples/information_theory/plot_it_dispersion_entropy_eeg_emb2.rst", "auto_examples/information_theory/plot_it_dispersion_entropy_top_patterns.rst", "auto_examples/information_theory/plot_it_entropy_discreet_example.rst", "auto_examples/information_theory/plot_it_entropy_eeg_multi_channel.rst", "auto_examples/information_theory/plot_it_entropy_real_valued_example.rst", "auto_examples/information_theory/plot_it_sample_approx_entropy_comp.rst", "auto_examples/information_theory/sg_execution_times.rst", "auto_examples/machine_learning/index.rst", "auto_examples/machine_learning/plot_ml_decision_tree_catogorical_features.rst", "auto_examples/machine_learning/plot_ml_decision_tree_classification.rst", "auto_examples/machine_learning/plot_ml_decision_tree_shrinking_capability_cls.rst", "auto_examples/machine_learning/plot_ml_decision_tree_shrinking_capability_reg.rst", "auto_examples/machine_learning/plot_ml_decision_tree_visualisation.rst", "auto_examples/machine_learning/plot_ml_logistic_regression_examples.rst", "auto_examples/machine_learning/plot_ml_naive_bayes_examples.rst", "auto_examples/machine_learning/sg_execution_times.rst", "auto_examples/multielectrode-array/index.rst", "auto_examples/multielectrode-array/plot_mea_minimal_setting_example.rst", "auto_examples/multielectrode-array/plot_mea_stepwise_example.rst", "auto_examples/multielectrode-array/sg_execution_times.rst", "auto_examples/release_highlights/index.rst", "auto_examples/release_highlights/plot_release_highlights_0_0_9_6.rst", "auto_examples/release_highlights/plot_release_highlights_0_0_9_7.rst", "auto_examples/release_highlights/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "auto_examples/signal_processing/index.rst", "auto_examples/signal_processing/plot_sp_RFB_for_period_estimation_demo_examples.rst", "auto_examples/signal_processing/plot_sp_RFB_for_period_estimation_from_signal.rst", "auto_examples/signal_processing/plot_sp_RFB_for_period_estimation_with_sparse_penalty.rst", "auto_examples/signal_processing/plot_sp_analysis_sythesis_models.rst", "auto_examples/signal_processing/plot_sp_fractional_fourier_transform.rst", "auto_examples/signal_processing/plot_sp_sinusodal_model_analysis_synthesis.rst", "auto_examples/signal_processing/plot_sp_sinusodal_model_example_sound.rst", "auto_examples/signal_processing/sg_execution_times.rst", "auto_examples/statistics/index.rst", "auto_examples/statistics/plot_stats_group_boxplotes.rst", "auto_examples/statistics/plot_stats_testing_2groups_demo.rst", "auto_examples/statistics/sg_execution_times.rst", "auto_examples/wavelet_analysis/index.rst", "auto_examples/wavelet_analysis/plot_sp_scalogram_cwt_example.rst", "auto_examples/wavelet_analysis/plot_sp_wavelet_filtering_example.rst", "auto_examples/wavelet_analysis/sg_execution_times.rst", "dev/contributing.rst", "dev/index.rst", "dev/versions.rst", "empty_test.rst", "getting_started.rst", "install.rst", "main_root.rst", "min_dependency_substitutions.rst", "min_dependency_table.rst", "modules/biomedical_signals.rst", "modules/bsp_ecg.rst", "modules/bsp_eeg.rst", "modules/bsp_egm.rst", "modules/bsp_mea.rst", "modules/classes.rst", "modules/data.rst", "modules/data2.rst", "modules/data_samples.rst", "modules/data_simulation.rst", "modules/egm copy.rst", "modules/generated/spkit.A_law.rst", "modules/generated/spkit.Create_Dictionary.rst", "modules/generated/spkit.ICA.rst", "modules/generated/spkit.Mu_law.rst", "modules/generated/spkit.OutLiers.rst", "modules/generated/spkit.PCA.rst", "modules/generated/spkit.PeriodStrength.rst", "modules/generated/spkit.RFB.rst", "modules/generated/spkit.RFB_example_1.rst", "modules/generated/spkit.RFB_example_2.rst", "modules/generated/spkit.RFB_prange.rst", "modules/generated/spkit.SVD.rst", "modules/generated/spkit.TD_Embed.rst", "modules/generated/spkit.TWM_algo.rst", "modules/generated/spkit.TWM_f0.rst", "modules/generated/spkit.WPA_plot.rst", "modules/generated/spkit.WPA_temporal.rst", "modules/generated/spkit.Wavelet_decompositions.rst", "modules/generated/spkit.add_noise.rst", "modules/generated/spkit.agg_angles.rst", "modules/generated/spkit.bin_width.rst", "modules/generated/spkit.blackman_lobe.rst", "modules/generated/spkit.cdf_mapping.rst", "modules/generated/spkit.clean_phase.rst", "modules/generated/spkit.conv1d_fb.rst", "modules/generated/spkit.conv1d_fft.rst", "modules/generated/spkit.conv1d_nan.rst", "modules/generated/spkit.conv2d_nan.rst", "modules/generated/spkit.create_multidim_space_signal.rst", "modules/generated/spkit.create_signal_1d.rst", "modules/generated/spkit.create_signal_2d.rst", "modules/generated/spkit.cwt.GaborWave.rst", "modules/generated/spkit.cwt.GaussWave.rst", "modules/generated/spkit.cwt.MorlateWave.rst", "modules/generated/spkit.cwt.PoissonWave.rst", "modules/generated/spkit.cwt.ScalogramCWT.rst", "modules/generated/spkit.cwt.ShannonWave.rst", "modules/generated/spkit.cwt.WavePSD.rst", "modules/generated/spkit.cwt.cMaxicanHatWave.rst", "modules/generated/spkit.cwt.compare_cwt_example.rst", "modules/generated/spkit.data.create_dataset.rst", "modules/generated/spkit.data.ecg_sample.rst", "modules/generated/spkit.data.ecg_sample_12leads.rst", "modules/generated/spkit.data.eda_sample.rst", "modules/generated/spkit.data.eeg_sample_14ch.rst", "modules/generated/spkit.data.eeg_sample_1ch.rst", "modules/generated/spkit.data.eeg_sample_artifact.rst", "modules/generated/spkit.data.egm_sample.rst", "modules/generated/spkit.data.gaussian.rst", "modules/generated/spkit.data.gsr_sample.rst", "modules/generated/spkit.data.linear.rst", "modules/generated/spkit.data.linear_data.rst", "modules/generated/spkit.data.mclass_gauss.rst", "modules/generated/spkit.data.moons.rst", "modules/generated/spkit.data.optical_sample.rst", "modules/generated/spkit.data.ppg_sample.rst", "modules/generated/spkit.data.primitive_polynomials.rst", "modules/generated/spkit.data.sinusoidal.rst", "modules/generated/spkit.data.spiral.rst", "modules/generated/spkit.denorm_kernel.rst", "modules/generated/spkit.dft_analysis.rst", "modules/generated/spkit.dft_synthesis.rst", "modules/generated/spkit.direction_flow_map.rst", "modules/generated/spkit.dispersion_entropy.rst", "modules/generated/spkit.dispersion_entropy_multiscale_refined.rst", "modules/generated/spkit.dominent_freq.rst", "modules/generated/spkit.dominent_freq_win.rst", "modules/generated/spkit.eeg.ATAR.rst", "modules/generated/spkit.eeg.ATAR_1Ch.rst", "modules/generated/spkit.eeg.ATAR_mCh.rst", "modules/generated/spkit.eeg.Gen_SSFI.rst", "modules/generated/spkit.eeg.ICA_filtering.rst", "modules/generated/spkit.eeg.RhythmicDecomposition.rst", "modules/generated/spkit.eeg.TopoMap.rst", "modules/generated/spkit.eeg.TopoMap_Zi.rst", "modules/generated/spkit.eeg.display_topo_RGB.rst", "modules/generated/spkit.eeg.rhythmic_powers.rst", "modules/generated/spkit.eeg.rhythmic_powers_win.rst", "modules/generated/spkit.eeg.s1005_get_epos2d.rst", "modules/generated/spkit.eeg.s1010_get_epos2d.rst", "modules/generated/spkit.eeg.s1020_get_epos2d.rst", "modules/generated/spkit.eeg.showTOPO.rst", "modules/generated/spkit.elbow_knee_point.rst", "modules/generated/spkit.entropy.rst", "modules/generated/spkit.entropy_approx.rst", "modules/generated/spkit.entropy_cond.rst", "modules/generated/spkit.entropy_cross.rst", "modules/generated/spkit.entropy_diff_cond.rst", "modules/generated/spkit.entropy_diff_cond_self.rst", "modules/generated/spkit.entropy_diff_joint.rst", "modules/generated/spkit.entropy_diff_joint_cond.rst", "modules/generated/spkit.entropy_differential.rst", "modules/generated/spkit.entropy_granger_causality.rst", "modules/generated/spkit.entropy_joint.rst", "modules/generated/spkit.entropy_kld.rst", "modules/generated/spkit.entropy_permutation.rst", "modules/generated/spkit.entropy_sample.rst", "modules/generated/spkit.entropy_spectral.rst", "modules/generated/spkit.entropy_svd.rst", "modules/generated/spkit.f0_detection.rst", "modules/generated/spkit.ffrft.rst", "modules/generated/spkit.fill_nans_1d.rst", "modules/generated/spkit.fill_nans_2d.rst", "modules/generated/spkit.filterDC.rst", "modules/generated/spkit.filterDC_sGolay.rst", "modules/generated/spkit.filter_X.rst", "modules/generated/spkit.filter_powerline.rst", "modules/generated/spkit.filter_smooth_gauss.rst", "modules/generated/spkit.filter_smooth_mollifier.rst", "modules/generated/spkit.filter_smooth_sGolay.rst", "modules/generated/spkit.filter_with_kernel.rst", "modules/generated/spkit.filtering_pipeline.rst", "modules/generated/spkit.frft.rst", "modules/generated/spkit.friedrichs_mollifier_kernel.rst", "modules/generated/spkit.gaussian_kernel.rst", "modules/generated/spkit.geometry.Inter2DPlane.rst", "modules/generated/spkit.geometry.TriAng.rst", "modules/generated/spkit.geometry.area_tri.rst", "modules/generated/spkit.geometry.car2spar.rst", "modules/generated/spkit.geometry.dir_vectors.rst", "modules/generated/spkit.geometry.divide_space.rst", "modules/generated/spkit.geometry.getTriFaces.rst", "modules/generated/spkit.geometry.getTriFaces_V2.rst", "modules/generated/spkit.geometry.get_PCA.rst", "modules/generated/spkit.geometry.get_adjacency_matrix_depth.rst", "modules/generated/spkit.geometry.get_adjacency_matrix_dist.rst", "modules/generated/spkit.geometry.get_adjacency_matrix_kNN.rst", "modules/generated/spkit.geometry.get_center.rst", "modules/generated/spkit.geometry.get_circle.rst", "modules/generated/spkit.geometry.get_circular_grid.rst", "modules/generated/spkit.geometry.get_ellipsoid.rst", "modules/generated/spkit.geometry.get_neibours.rst", "modules/generated/spkit.geometry.get_optimal_projection.rst", "modules/generated/spkit.geometry.get_plane.rst", "modules/generated/spkit.geometry.get_sphare.rst", "modules/generated/spkit.geometry.get_square.rst", "modules/generated/spkit.geometry.get_square_grid.rst", "modules/generated/spkit.geometry.lin_inter.rst", "modules/generated/spkit.geometry.node2C_to_adjacency_matrix.rst", "modules/generated/spkit.geometry.opt_project.rst", "modules/generated/spkit.geometry.plot_proj.rst", "modules/generated/spkit.geometry.rotation_matrix.rst", "modules/generated/spkit.geometry.spar2car.rst", "modules/generated/spkit.geometry.surface_plot_mayavi.rst", "modules/generated/spkit.geometry.surface_reconstruction.rst", "modules/generated/spkit.getQuickStats.rst", "modules/generated/spkit.getStats.rst", "modules/generated/spkit.get_activation_time.rst", "modules/generated/spkit.get_repolarisation_time.rst", "modules/generated/spkit.graph_filter_adj.rst", "modules/generated/spkit.graph_filter_dist.rst", "modules/generated/spkit.hist_plot.rst", "modules/generated/spkit.iffrft.rst", "modules/generated/spkit.ifrft.rst", "modules/generated/spkit.io.read_bdf.rst", "modules/generated/spkit.io.read_hdf.rst", "modules/generated/spkit.io.read_surf.rst", "modules/generated/spkit.io.read_surf_file.rst", "modules/generated/spkit.io.read_vtk.rst", "modules/generated/spkit.io.write_vtk.rst", "modules/generated/spkit.is_power2.rst", "modules/generated/spkit.low_resolution.rst", "modules/generated/spkit.mea.activation_repol_time_loc.rst", "modules/generated/spkit.mea.activation_time_loc.rst", "modules/generated/spkit.mea.align_cycles.rst", "modules/generated/spkit.mea.analyse_mea_file.rst", "modules/generated/spkit.mea.arrange_mea_grid.rst", "modules/generated/spkit.mea.compute_cv.rst", "modules/generated/spkit.mea.egm_features.rst", "modules/generated/spkit.mea.extract_egm.rst", "modules/generated/spkit.mea.find_bad_channels_idx.rst", "modules/generated/spkit.mea.get_stim_loc.rst", "modules/generated/spkit.mea.mat_1_show.rst", "modules/generated/spkit.mea.mat_list_show.rst", "modules/generated/spkit.mea.mea_feature_map.rst", "modules/generated/spkit.mea.plot_mea_grid.rst", "modules/generated/spkit.mea.unarrange_mea_grid.rst", "modules/generated/spkit.mean_minSE.rst", "modules/generated/spkit.minMSE.rst", "modules/generated/spkit.ml.ClassificationTree.rst", "modules/generated/spkit.ml.DecisionTree.rst", "modules/generated/spkit.ml.LogisticRegression.rst", "modules/generated/spkit.ml.NaiveBayes.rst", "modules/generated/spkit.ml.RegressionTree.rst", "modules/generated/spkit.mutual_info.rst", "modules/generated/spkit.mutual_info_diff.rst", "modules/generated/spkit.mutual_info_diff_self.rst", "modules/generated/spkit.partial_transfer_entropy.rst", "modules/generated/spkit.peak_detection.rst", "modules/generated/spkit.peak_interp.rst", "modules/generated/spkit.periodogram.rst", "modules/generated/spkit.phase_map.rst", "modules/generated/spkit.phase_map_reconstruction.rst", "modules/generated/spkit.plotJointEntropyXY.rst", "modules/generated/spkit.quantize_FD.rst", "modules/generated/spkit.quantize_signal.rst", "modules/generated/spkit.ramanujan_filter.rst", "modules/generated/spkit.ramanujan_filter_prange.rst", "modules/generated/spkit.regularised_period_estimation.rst", "modules/generated/spkit.show_compass.rst", "modules/generated/spkit.show_farmulas.rst", "modules/generated/spkit.signal_delayed_space.rst", "modules/generated/spkit.signal_diff.rst", "modules/generated/spkit.simplify_signal.rst", "modules/generated/spkit.sinc_dirichlet.rst", "modules/generated/spkit.sinc_interp.rst", "modules/generated/spkit.sineModel_analysis.rst", "modules/generated/spkit.sineModel_synthesis.rst", "modules/generated/spkit.sine_spectrum.rst", "modules/generated/spkit.sine_tracking.rst", "modules/generated/spkit.sinetracks_cleaning.rst", "modules/generated/spkit.spatial_filter_adj.rst", "modules/generated/spkit.spatial_filter_dist.rst", "modules/generated/spkit.stats.get_stats.rst", "modules/generated/spkit.stats.outliers.rst", "modules/generated/spkit.stats.plot_groups_boxes.rst", "modules/generated/spkit.stats.quick_stats.rst", "modules/generated/spkit.stats.test_2groups.rst", "modules/generated/spkit.stats.test_groups.rst", "modules/generated/spkit.stft_analysis.rst", "modules/generated/spkit.stft_synthesis.rst", "modules/generated/spkit.total_variation.rst", "modules/generated/spkit.total_variation_win.rst", "modules/generated/spkit.transfer_entropy.rst", "modules/generated/spkit.transfer_entropy_cond.rst", "modules/generated/spkit.utils.ProgBar.rst", "modules/generated/spkit.utils.ProgBar_JL.rst", "modules/generated/spkit.utils.bcolors.rst", "modules/generated/spkit.utils.pretty_print.rst", "modules/generated/spkit.utils.txcolors.rst", "modules/generated/spkit.utils.view_hierarchical_order.rst", "modules/generated/spkit.wavelet_decomposed_signals.rst", "modules/generated/spkit.wavelet_filtering.rst", "modules/generated/spkit.wavelet_filtering_win.rst", "modules/generated/spkit.wpa_coeff.rst", "modules/generated/spkit.wpa_coeff_win.rst", "modules/information_theory.rst", "modules/ioutils.rst", "modules/it_apps.rst", "modules/it_disperssion_differential.rst", "modules/it_entropy.rst", "modules/machine_learning.rst", "modules/ml_decision_trees.rst", "modules/ml_logistic_regression.rst", "modules/ml_naive_bayes.rst", "modules/signal_processing.rst", "modules/sp_cwt.rst", "modules/sp_dft.rst", "modules/sp_differentiation.rst", "modules/sp_dwt.rst", "modules/sp_filtering_drift.rst", "modules/sp_filtering_graph.rst", "modules/sp_filtering_kernel.rst", "modules/sp_filtering_pipe.rst", "modules/sp_filtering_smooth.rst", "modules/sp_filtering_spatial.rst", "modules/sp_filtering_spectral.rst", "modules/sp_frft.rst", "modules/sp_mapping.rst", "modules/sp_more.rst", "modules/sp_ramanujan.rst", "modules/sp_simplify.rst", "modules/sp_sinusoidal.rst", "modules/sp_stft.rst", "modules/spsignal_analysis.rst", "modules/spsignal_filtering.rst", "modules/spwavelet_analysis.rst", "modules/statisticsutils.rst", "modules/statsfun.rst", "modules/utils.rst", "related_projects.rst", "sg_execution_times.rst", "tune_toc.rst", "tutorials/index.rst", "tutorials/signal_processing/index.rst", "user_guide.rst", "whats_new.rst", "whats_new/_contributors.rst", "whats_new/index.rst", "whats_new/v0.0.9.6.rst", "whats_new/v0.0.9.7.rst"], "titles": ["Electroencephalography (EEG)", "ATAR: Automatic and Tunable Artifact Removal Algorithm", "EEG Data from EDF File", "Independed Principle Component analysis", "EEG Artifact removal using ATAR", "EEG Artifact removal using ICA", "EEG Artifact: ATAR and ICA", "EEG Computing Rhythmic Features - PhyAAt - Semanticity", "EEG Topographic Map", "Computation times", "Examples", "Information Theory", "Dispersion Entropy with Embedding dim", "Dispersion Entropy with top patterns", "Entropy  -  Discreet Source", "Entropy  -  EEG Signal - Multi-Channel", "Entropy  -  Real-Valued Source", "Sample and Approximate Entropy: Comparison", "Computation times", "Machine Learning", "Decision Trees without converting Catogorical Features", "Classification Trees: Depth &amp; Decision boundaries", "Decision Trees with shrinking capability - Classification example", "Decision Trees with shrinking capability - Regression example", "Decision Trees with visualisations while buiding tree", "Logistic Regression -  Visualisation", "Naive Bayes classifier -  Visualisation", "Computation times", "Multi-Electrode-Array (MEA)", "MEA: Minimal Setting: Example", "MEA: Step-wise Analysis: Example", "Computation times", "Release Highlights", "Release Highlights for spkit 0.0.9.6", "Release Highlights for spkit 0.0.9.7", "Computation times", "Computation times", "Signal Processing", "Ramanujan Filter Banks -  Demos", "Ramanujan Filter Banks Example", "Ramanujan Dictionary  - with sparse penalty", "Analysis and Synthesis Models", "Fractional Fourier Transform: FRFT", "Sinusoidal Model:  Analysis and Synthesis", "Sinusoidal Model : Synthesis : Audio", "Computation times", "Statistics", "Auditory Attention: Plot Group Data", "Testing two groups", "Computation times", "Wavelet Analysis", "Scalogram CWT", "Wavelet Filtering", "Computation times", "Contributing", "Development", "Versions", "Empty Page", "Getting Started", "<span class=\"section-number\">1. </span>Installing spkit", "Table Of Contents", "&lt;no title&gt;", "&lt;no title&gt;", "<span class=\"section-number\">5. </span>Biomedical Signal Processing", "<span class=\"section-number\">5.2. </span>ECG: Electrocardiography", "<span class=\"section-number\">5.1. </span>EEG: Electroencephalography", "<span class=\"section-number\">5.3. </span>EGM: Electrogram", "<span class=\"section-number\">5.4. </span>MEA: Multi-Electrode Array Processing", "API Reference", "<span class=\"section-number\">8. </span>Data Samples", "Data2 Samples", "<span class=\"section-number\">8.1. </span>Real-world-Samples", "<span class=\"section-number\">8.2. </span>Simulation", "Electrogram", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.A_law", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.create_dictionary", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.ICA", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.Mu_law", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.OutLiers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.PCA", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.PeriodStrength", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.RFB", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.RFB_example_1", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.RFB_example_2", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.RFB_prange", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.SVD", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.TD_Embed", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.TWM_algo", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.TWM_f0", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.wpa_plot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.WPA_temporal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.Wavelet_decompositions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.add_noise", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.agg_angles", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.bin_width", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.blackman_lobe", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.cdf_mapping", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.clean_phase", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.conv1d_fb", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.conv1d_fft", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.conv1d_nan", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.conv2d_nan", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.create_multidim_space_signal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.create_signal_1d", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.create_signal_2d", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.GaborWave", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.GaussWave", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.MorlateWave", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.PoissonWave", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.ScalogramCWT", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.ShannonWave", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.WavePSD", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.cMaxicanHatWave", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.compare_cwt_example", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.create_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.ecg_sample", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.ecg_sample_12leads", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.eda_sample", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.eeg_sample_14ch", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.eeg_sample_1ch", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.eeg_sample_artifact", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.egm_sample", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.gaussian", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.gsr_sample", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.linear", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.linear_data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.mclass_gauss", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.moons", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.optical_sample", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.ppg_sample", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.primitive_polynomials", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.sinusoidal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.spiral", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.denorm_kernel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.dft_analysis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.dft_synthesis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.direction_flow_map", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.dispersion_entropy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.dispersion_entropy_multiscale_refined", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.dominent_freq", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.dominent_freq_win", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.ATAR", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.ATAR_1Ch", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.ATAR_mCh", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.gen_ssfi", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.ICA_filtering", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.RhythmicDecomposition", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.topomap", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.TopoMap_Zi", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.display_topo_RGB", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.rhythmic_powers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.rhythmic_powers_win", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.s1005_get_epos2d", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.s1010_get_epos2d", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.s1020_get_epos2d", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.showTOPO", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.elbow_knee_point", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_approx", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_cond", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_cross", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_diff_cond", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_diff_cond_self", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_diff_joint", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_diff_joint_cond", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_differential", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_granger_causality", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_joint", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_kld", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_permutation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_sample", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_spectral", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_svd", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.f0_detection", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.ffrft", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.fill_nans_1d", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.fill_nans_2d", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filterDC", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filterDC_sGolay", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filter_X", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filter_powerline", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filter_smooth_gauss", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filter_smooth_mollifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filter_smooth_sGolay", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filter_with_kernel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filtering_pipeline", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.frft", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.friedrichs_mollifier_kernel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.gaussian_kernel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.Inter2DPlane", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.TriAng", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.area_tri", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.car2spar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.dir_vectors", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.divide_space", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.getTriFaces", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.getTriFaces_V2", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_PCA", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_adjacency_matrix_depth", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_adjacency_matrix_dist", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_adjacency_matrix_kNN", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_center", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_circle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_circular_grid", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_ellipsoid", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_neibours", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_optimal_projection", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_plane", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_sphare", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_square", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_square_grid", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.lin_inter", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.node2C_to_adjacency_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.opt_project", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.plot_proj", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.rotation_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.spar2car", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.surface_plot_mayavi", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.surface_reconstruction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.getQuickStats", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.getStats", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.get_activation_time", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.get_repolarisation_time", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.graph_filter_adj", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.graph_filter_dist", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.hist_plot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.iffrft", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.ifrft", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.io</span></code>.read_bdf", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.io</span></code>.read_hdf", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.io</span></code>.read_surf", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.io</span></code>.read_surf_file", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.io</span></code>.read_vtk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.io</span></code>.write_vtk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.is_power2", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.low_resolution", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.activation_repol_time_loc", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.activation_time_loc", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.align_cycles", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.analyse_mea_file", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.arrange_mea_grid", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.compute_cv", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.egm_features", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.extract_egm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.find_bad_channels_idx", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.get_stim_loc", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.mat_1_show", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.mat_list_show", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.mea_feature_map", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.plot_mea_grid", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.unarrange_mea_grid", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.mean_minSE", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.minMSE", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.ml</span></code>.ClassificationTree", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.ml</span></code>.DecisionTree", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.ml</span></code>.LogisticRegression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.ml</span></code>.NaiveBayes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.ml</span></code>.RegressionTree", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.mutual_info", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.mutual_info_diff", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.mutual_info_diff_self", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.partial_transfer_entropy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.peak_detection", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.peak_interp", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.periodogram", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.phase_map", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.phase_map_reconstruction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.plotJointEntropyXY", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.quantize_FD", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.quantize_signal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.ramanujan_filter", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.ramanujan_filter_prange", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.regularised_period_estimation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.show_compass", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.show_farmulas", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.signal_delayed_space", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.signal_diff", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.simplify_signal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.sinc_dirichlet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.sinc_interp", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.sineModel_analysis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.sineModel_synthesis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.sine_spectrum", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.sine_tracking", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.sinetracks_cleaning", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.spatial_filter_adj", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.spatial_filter_dist", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.stats</span></code>.get_stats", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.stats</span></code>.outliers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.stats</span></code>.plot_groups_boxes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.stats</span></code>.quick_stats", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.stats</span></code>.test_2groups", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.stats</span></code>.test_groups", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.stft_analysis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.stft_synthesis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.total_variation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.total_variation_win", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.transfer_entropy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.transfer_entropy_cond", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.utils</span></code>.ProgBar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.utils</span></code>.ProgBar_JL", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.utils</span></code>.bcolors", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.utils</span></code>.pretty_print", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.utils</span></code>.txcolors", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.utils</span></code>.view_hierarchical_order", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.wavelet_decomposed_signals", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.wavelet_filtering", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.wavelet_filtering_win", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.wpa_coeff", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.wpa_coeff_win", "<span class=\"section-number\">1. </span>Information Theory", "<span class=\"section-number\">7.2. </span>IO Read/Write", "<span class=\"section-number\">1.3. </span>Applications", "<span class=\"section-number\">1.2. </span>Dispersion and Differential Entropy", "<span class=\"section-number\">1.1. </span>Entropy", "<span class=\"section-number\">6. </span>Machine Learning", "<span class=\"section-number\">6.3. </span>Decision Trees", "<span class=\"section-number\">6.1. </span>Logistic Regression", "<span class=\"section-number\">6.2. </span>Naive Bayes", "Signal Processing", "<span class=\"section-number\">3.1. </span>Continues Wavelet Transform", "<span class=\"section-number\">4.1. </span>Discrete Fourier Transfer", "<span class=\"section-number\">4.6. </span>Differentiation", "<span class=\"section-number\">3.2. </span>Discreet Wavelet Transform", "<span class=\"section-number\">2.1. </span>Drift Removing", "<span class=\"section-number\">2.7. </span>Graph Filtering", "<span class=\"section-number\">2.4. </span>Kernel Filtering", "<span class=\"section-number\">2.5. </span>Filtering Pipeline", "<span class=\"section-number\">2.2. </span>Smoothing", "<span class=\"section-number\">2.6. </span>Spatial Filtering (3D)", "<span class=\"section-number\">2.3. </span>Spectral Filtering", "<span class=\"section-number\">4.3. </span>Fractional Fourier Transform", "<span class=\"section-number\">4.8. </span>Signal Temporal Mapping", "Continues Wavelet Transform", "<span class=\"section-number\">4.5. </span>Ramanujan Methods", "<span class=\"section-number\">4.7. </span>Simplifying a complex signal", "<span class=\"section-number\">4.4. </span>Sinusoidal Model", "<span class=\"section-number\">4.2. </span>Short-Time Fourier Transform", "<span class=\"section-number\">4. </span>Signal Analysis", "<span class=\"section-number\">2. </span>Signal Filtering", "<span class=\"section-number\">3. </span>Wavelet Analysis", "<span class=\"section-number\">7. </span>Statistics/Utilities", "<span class=\"section-number\">7.1. </span>Statistics", "<span class=\"section-number\">7.3. </span>Utilities", "Empty Page", "Computation times", "&lt;no title&gt;", "Tutorials", "Signal Processing", "User guide: contents", "Release History", "&lt;no title&gt;", "Version 0.0.9.7", "Version 0.0.9.6", "Version 0.0.9.7"], "terms": {"click": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354], "more": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354], "detail": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 53, 60, 62, 68, 74, 75, 77, 78, 81, 84, 85, 86, 89, 90, 91, 93, 95, 96, 97, 98, 99, 102, 105, 106, 107, 108, 110, 112, 115, 117, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 142, 143, 144, 146, 156, 161, 162, 163, 164, 165, 166, 169, 171, 172, 173, 174, 177, 180, 181, 182, 183, 184, 185, 187, 188, 199, 200, 204, 220, 221, 222, 223, 224, 226, 230, 232, 233, 235, 250, 251, 252, 259, 260, 261, 262, 263, 264, 265, 266, 269, 273, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 290, 292, 295, 296, 297, 298, 299, 301, 303, 304, 307, 308, 309, 320, 345, 347], "signal": [0, 1, 11, 12, 13, 16, 18, 29, 30, 41, 42, 51, 52, 58, 60, 65, 67, 69, 74, 75, 76, 77, 80, 81, 82, 83, 84, 86, 89, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 221, 222, 226, 227, 228, 229, 235, 236, 237, 238, 239, 242, 243, 244, 245, 249, 251, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 275, 276, 277, 279, 280, 281, 293, 294, 295, 296, 297, 298, 305, 306, 307, 308, 309, 313, 314, 324, 328, 340, 345, 349, 352, 353, 354], "process": [0, 1, 20, 24, 52, 58, 60, 75, 80, 81, 84, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 133, 141, 143, 145, 185, 221, 236, 237, 269, 270, 271, 272, 276, 313, 314, 323, 324, 349, 352, 354], "atar": [0, 2, 3, 5, 7, 8, 9, 10, 12, 52, 120, 142, 143, 145, 345, 352, 353, 354], "automat": [0, 4, 5, 6, 9, 10, 12, 52, 65, 141, 142, 143, 145, 345, 352, 353, 354], "tunabl": [0, 4, 5, 6, 9, 10, 12, 52, 65, 141, 142, 143, 345, 352, 353, 354], "artifact": [0, 2, 3, 7, 9, 10, 12, 15, 29, 30, 34, 38, 52, 63, 120, 141, 142, 143, 145, 176, 227, 239, 266, 324, 345, 347, 349, 352, 353, 354], "remov": [0, 2, 3, 7, 9, 10, 12, 15, 29, 30, 34, 38, 52, 63, 80, 81, 84, 97, 120, 141, 142, 143, 145, 176, 177, 178, 180, 183, 185, 227, 235, 239, 243, 266, 276, 288, 306, 307, 323, 330, 332, 339, 345, 347, 349, 352, 353, 354], "algorithm": [0, 4, 5, 6, 9, 10, 12, 33, 37, 52, 74, 76, 77, 87, 88, 141, 142, 143, 145, 156, 173, 323, 332, 345, 352, 353, 354], "us": [0, 2, 3, 7, 9, 10, 12, 15, 16, 20, 22, 23, 24, 26, 29, 30, 33, 34, 38, 40, 51, 52, 54, 59, 65, 67, 75, 77, 78, 80, 81, 84, 89, 93, 98, 99, 105, 106, 107, 108, 110, 111, 112, 117, 120, 123, 124, 133, 139, 140, 142, 143, 144, 146, 156, 162, 165, 166, 171, 173, 177, 181, 182, 183, 184, 185, 187, 194, 207, 217, 221, 222, 223, 224, 226, 233, 254, 263, 264, 265, 266, 268, 269, 274, 276, 279, 282, 285, 286, 288, 292, 297, 304, 307, 313, 314, 323, 324, 328, 332, 338, 339, 345, 349, 352, 353, 354], "ica": [0, 1, 2, 4, 7, 8, 9, 10, 12, 15, 29, 30, 34, 38, 120, 141, 142, 143, 145, 345, 352, 353, 354], "comput": [0, 1, 2, 3, 4, 5, 8, 10, 12, 13, 14, 15, 16, 17, 26, 29, 47, 48, 52, 63, 76, 79, 80, 94, 95, 100, 101, 108, 109, 134, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 150, 151, 156, 157, 159, 160, 165, 167, 168, 169, 182, 187, 191, 193, 221, 222, 223, 224, 225, 236, 237, 238, 239, 241, 242, 243, 244, 245, 249, 251, 253, 254, 255, 256, 257, 258, 264, 265, 266, 269, 272, 276, 278, 285, 286, 288, 289, 293, 305, 306, 307, 313, 314, 323, 349, 352, 353, 354], "rhythmic": [0, 2, 5, 9, 10, 13, 17, 47, 48, 151, 289, 345], "featur": [0, 2, 5, 8, 9, 10, 13, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 29, 32, 34, 47, 48, 52, 63, 76, 144, 182, 187, 239, 240, 242, 246, 247, 248, 250, 253, 254, 255, 256, 257, 273, 289, 328, 345, 349, 350, 351, 352, 353, 354], "phyaat": [0, 2, 5, 8, 9, 10, 13, 17, 47, 48, 59, 65, 71, 117, 118, 119, 120, 123, 129, 289, 345], "semant": [0, 2, 5, 8, 9, 10, 13, 17, 47, 48, 65, 289, 345], "topograph": [0, 2, 9, 10, 141, 147, 148, 149, 151, 154, 155, 345], "map": [0, 2, 9, 10, 63, 74, 76, 77, 96, 109, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 136, 137, 138, 141, 142, 143, 147, 148, 149, 151, 154, 155, 179, 235, 239, 241, 265, 266, 269, 313, 338, 345, 349], "independ": [0, 4, 6, 9, 10, 76, 141, 142, 143, 345], "principl": [0, 4, 6, 9, 10, 76, 79, 276, 345, 347], "compon": [0, 4, 5, 6, 9, 10, 65, 76, 79, 91, 139, 140, 145, 171, 177, 178, 305, 314, 324, 345], "analysi": [0, 4, 6, 8, 9, 13, 14, 16, 17, 22, 23, 28, 29, 31, 33, 34, 37, 42, 44, 45, 51, 58, 60, 63, 76, 79, 105, 106, 107, 108, 110, 112, 134, 135, 136, 139, 140, 173, 186, 227, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 277, 280, 281, 282, 293, 294, 345, 349], "go": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 253, 254], "end": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 89, 103, 185, 242, 299, 300, 309], "download": [1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 44, 47, 48, 51, 52, 56, 154, 236, 237, 238, 239, 242, 243, 244, 245, 249], "full": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 67, 68, 85, 147, 181, 182, 184, 228, 229, 230, 232, 236, 237, 239], "code": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 75, 80, 81, 84, 105, 106, 107, 108, 110, 112, 239, 270, 271, 272, 274, 278, 353], "run": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 59, 76, 177, 291, 292, 323], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 59, 67, 68, 100, 101, 111, 136, 137, 138, 139, 140, 145, 147, 156, 176, 182, 187, 222, 223, 224, 239, 242, 244, 245, 254, 256, 276, 285, 286, 288, 313, 314, 328, 347, 348, 350, 353], "your": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 59, 145, 239, 313], "browser": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52], "via": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 71, 239, 353], "jupyterlit": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52], "binder": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 347], "The": [1, 12, 13, 21, 48, 52, 74, 75, 76, 77, 105, 106, 139, 156, 169, 223, 224, 239, 254, 256, 285, 286, 313, 314, 320, 323, 324, 332, 353], "i": [1, 2, 3, 4, 5, 7, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 29, 30, 33, 34, 39, 48, 52, 58, 59, 63, 65, 71, 74, 75, 76, 77, 78, 80, 81, 84, 89, 92, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 122, 123, 124, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 185, 187, 193, 199, 200, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 264, 266, 269, 270, 271, 272, 273, 274, 276, 277, 285, 286, 288, 289, 291, 292, 293, 297, 298, 299, 300, 304, 305, 306, 307, 309, 320, 323, 324, 328, 330, 332, 347, 349, 352, 353, 354], "base": [1, 5, 6, 29, 30, 65, 91, 94, 141, 142, 143, 145, 150, 151, 156, 157, 159, 160, 166, 167, 168, 169, 171, 172, 198, 199, 200, 221, 222, 237, 239, 242, 244, 253, 256, 257, 258, 261, 269, 274, 293, 297, 298, 305, 313, 352, 353, 354], "packet": [1, 89, 90, 141, 142, 143, 305, 306, 307, 308, 309], "decompos": [1, 4, 43, 52, 65, 76, 91, 141, 142, 143, 146, 150, 151, 280, 305, 306, 319, 340, 349, 352, 353, 354], "wpd": [1, 34, 52, 91, 141, 142, 143, 305, 306, 307, 323], "descript": 1, "can": [1, 20, 21, 22, 23, 34, 52, 54, 59, 94, 114, 136, 137, 138, 139, 147, 173, 176, 182, 185, 187, 221, 222, 223, 224, 239, 242, 245, 246, 248, 253, 254, 256, 257, 269, 273, 285, 286, 289, 293, 304, 314, 323, 328, 353], "found": [1, 12, 29, 30, 88, 137, 138, 173, 313], "here": [1, 20, 34, 59, 65, 67, 68, 158, 170, 239, 313, 314, 323, 347], "eeg": [1, 9, 11, 12, 13, 16, 17, 18, 29, 30, 34, 38, 47, 48, 51, 52, 58, 60, 63, 69, 76, 109, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 159, 160, 167, 168, 179, 228, 258, 262, 263, 289, 302, 345, 347, 349, 352, 354], "from": [0, 1, 3, 5, 6, 7, 8, 9, 10, 13, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 40, 41, 44, 45, 49, 51, 53, 56, 59, 67, 71, 75, 76, 80, 81, 84, 85, 88, 96, 97, 100, 103, 109, 111, 114, 122, 124, 126, 127, 130, 131, 132, 135, 139, 147, 150, 154, 166, 167, 171, 173, 177, 178, 179, 183, 185, 194, 200, 212, 222, 228, 229, 236, 237, 239, 242, 243, 245, 248, 253, 254, 255, 256, 257, 261, 262, 263, 269, 270, 271, 272, 277, 280, 281, 282, 283, 288, 294, 297, 298, 302, 305, 314, 320, 324, 332, 345, 347, 352, 353, 354], "articl": [1, 5, 52, 65, 139, 140, 145, 221, 222, 323, 352, 353, 354], "1": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 29, 34, 39, 40, 42, 43, 44, 47, 51, 52, 56, 59, 61, 62, 63, 65, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 198, 199, 200, 202, 203, 204, 208, 209, 210, 217, 220, 221, 222, 223, 224, 226, 227, 228, 229, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 314, 321, 323, 328, 330, 331, 332, 336, 337, 339, 347, 349, 350], "figur": [1, 3, 4, 5, 6, 7, 8, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 30, 34, 39, 40, 41, 42, 43, 47, 51, 63, 71, 74, 76, 77, 81, 84, 85, 86, 89, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 171, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 221, 222, 226, 227, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 253, 255, 256, 257, 262, 263, 264, 265, 266, 269, 270, 271, 275, 276, 277, 279, 288, 289, 293, 296, 305, 306, 307, 308, 309, 313, 314, 320, 332, 349], "show": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 30, 34, 39, 40, 41, 42, 43, 44, 47, 51, 52, 59, 71, 74, 76, 77, 81, 82, 83, 84, 85, 86, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 171, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 199, 200, 217, 221, 222, 223, 224, 225, 226, 227, 235, 236, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 285, 286, 288, 289, 290, 291, 293, 294, 296, 299, 300, 302, 304, 305, 306, 307, 308, 309, 313, 314, 320, 323, 332], "block": [1, 52, 239, 323], "diagram": [1, 52, 242, 267, 323], "oper": [1, 4, 57, 59, 65, 76, 103, 141, 142, 143, 176, 185, 223, 224, 250, 285, 286, 344], "mode": [1, 24, 34, 52, 65, 89, 90, 98, 99, 100, 101, 120, 133, 141, 142, 143, 150, 151, 178, 181, 182, 183, 184, 241, 244, 255, 306, 307, 308, 309, 323], "filter": [1, 2, 7, 10, 12, 13, 14, 16, 33, 37, 40, 45, 47, 50, 51, 53, 60, 63, 81, 82, 83, 84, 92, 119, 120, 133, 145, 150, 151, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 221, 222, 223, 224, 236, 237, 239, 243, 270, 271, 276, 285, 286, 305, 306, 307, 313, 319, 320, 340, 345, 349, 352, 353, 354], "given": [1, 12, 13, 79, 80, 84, 109, 137, 138, 141, 142, 143, 147, 148, 152, 153, 154, 155, 157, 161, 162, 173, 182, 184, 187, 188, 190, 193, 195, 196, 220, 221, 222, 223, 224, 229, 236, 237, 239, 241, 242, 243, 245, 248, 250, 253, 254, 256, 257, 259, 260, 261, 269, 271, 272, 274, 281, 282, 285, 286, 287, 298, 313, 328], "multichannel": [1, 139, 140, 239, 266], "x": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 30, 34, 39, 40, 41, 42, 43, 44, 47, 51, 52, 71, 72, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 194, 197, 199, 200, 201, 204, 206, 207, 213, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 305, 306, 307, 308, 309, 320, 321, 323, 324, 328, 330, 331, 332, 336, 337, 349], "n": [1, 12, 14, 16, 17, 21, 25, 34, 36, 39, 40, 41, 43, 44, 48, 52, 59, 72, 74, 76, 77, 79, 81, 84, 86, 89, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 114, 115, 116, 117, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 157, 160, 165, 168, 169, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 193, 194, 198, 199, 200, 202, 203, 204, 205, 207, 209, 210, 217, 223, 224, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 263, 264, 265, 266, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 290, 293, 295, 299, 300, 302, 305, 306, 307, 308, 309, 313, 314, 321, 323, 324, 332, 336], "nch": [1, 2, 76, 146, 150, 151, 228, 229, 236, 237, 238, 243, 244, 245, 249], "wise": [1, 8, 10, 13, 28, 29, 31, 63, 89, 90, 136, 140, 151, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 296, 302, 307, 309, 345, 349], "reconstruct": [1, 3, 4, 41, 43, 52, 65, 135, 141, 142, 143, 174, 226, 227, 266, 277, 305, 306, 307, 323], "overal": 1, "add": [1, 4, 65, 92, 141, 142, 143, 147, 222, 223, 224, 285, 286, 307, 314], "method": [1, 3, 4, 5, 7, 30, 40, 52, 65, 75, 76, 78, 79, 80, 93, 94, 98, 99, 100, 108, 109, 111, 137, 138, 139, 140, 141, 142, 143, 145, 146, 150, 151, 157, 159, 160, 167, 168, 171, 176, 179, 186, 189, 190, 221, 222, 225, 226, 227, 228, 236, 237, 238, 239, 241, 245, 253, 254, 255, 256, 257, 258, 264, 269, 272, 276, 288, 295, 296, 306, 307, 314, 320, 323, 332, 338, 349, 352, 353, 354], "defualt": [1, 103, 104, 141, 142, 143, 291, 305], "size": [1, 7, 39, 48, 78, 89, 94, 100, 101, 103, 104, 105, 106, 109, 111, 114, 122, 133, 134, 135, 136, 140, 141, 142, 143, 145, 147, 151, 152, 153, 154, 173, 175, 176, 178, 179, 180, 183, 187, 221, 222, 223, 224, 236, 237, 238, 239, 240, 242, 243, 245, 247, 248, 249, 256, 269, 273, 278, 281, 282, 284, 285, 286, 291, 293, 294, 305, 306, 307, 309], "128": [1, 2, 3, 4, 5, 6, 7, 8, 29, 41, 76, 89, 90, 106, 109, 113, 117, 123, 129, 141, 142, 143, 144, 145, 146, 150, 151, 179, 189, 264, 278, 306, 307, 309, 313, 320, 324, 330, 337], "sampl": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 18, 21, 24, 29, 30, 34, 39, 40, 44, 48, 52, 60, 74, 75, 76, 77, 79, 81, 84, 89, 96, 97, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 134, 137, 138, 139, 140, 145, 146, 150, 151, 157, 158, 162, 165, 169, 170, 171, 172, 173, 178, 180, 181, 183, 184, 185, 187, 188, 221, 222, 228, 229, 235, 236, 237, 238, 239, 242, 243, 244, 245, 249, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 269, 270, 271, 275, 276, 277, 278, 280, 281, 282, 289, 292, 293, 294, 295, 296, 300, 305, 308, 309, 320, 323, 328, 332, 345, 349, 352, 353, 354], "For": [1, 4, 5, 34, 52, 59, 65, 76, 100, 101, 109, 111, 137, 138, 140, 141, 142, 143, 145, 147, 150, 151, 169, 176, 221, 236, 237, 239, 245, 253, 254, 255, 257, 276, 287, 314, 323, 347, 349, 353], "each": [1, 7, 15, 21, 22, 23, 30, 39, 52, 67, 68, 80, 81, 84, 89, 90, 104, 105, 106, 109, 110, 111, 114, 122, 124, 126, 127, 130, 131, 132, 136, 140, 141, 142, 143, 144, 146, 147, 150, 151, 156, 161, 162, 163, 164, 166, 173, 176, 228, 229, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 253, 254, 255, 256, 257, 259, 260, 261, 270, 271, 272, 289, 297, 298, 302, 305, 306, 307, 308, 309, 314, 323], "coeffici": [1, 52, 89, 177, 207, 255, 305, 306, 307, 308, 309, 323], "There": [1, 30, 52, 59, 67, 147, 222, 239, 279, 289, 323], "manili": 1, "one": [1, 20, 29, 52, 59, 63, 74, 77, 78, 80, 94, 114, 136, 139, 141, 142, 143, 147, 171, 175, 176, 179, 221, 222, 236, 237, 242, 243, 244, 245, 246, 247, 248, 253, 254, 257, 269, 272, 273, 276, 283, 289, 291, 292, 299, 300, 313, 323, 332, 349], "paramet": [1, 5, 22, 23, 26, 51, 65, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 198, 199, 200, 204, 207, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 313], "differ": [1, 4, 5, 21, 24, 34, 59, 67, 91, 94, 100, 101, 108, 109, 111, 113, 114, 133, 135, 137, 138, 139, 146, 150, 157, 158, 159, 160, 167, 168, 170, 236, 239, 242, 246, 258, 291, 293, 299, 300, 305, 314, 352, 353, 354], "list": [1, 13, 29, 30, 34, 47, 59, 81, 83, 84, 93, 109, 111, 116, 118, 122, 124, 127, 129, 130, 131, 132, 136, 138, 141, 142, 143, 145, 146, 147, 150, 151, 152, 153, 154, 159, 160, 167, 168, 176, 179, 185, 198, 199, 200, 222, 228, 229, 236, 237, 238, 239, 240, 242, 243, 244, 247, 248, 249, 253, 254, 255, 256, 257, 258, 270, 271, 287, 288, 289, 292, 302, 306, 307, 313, 343], "simplifi": [1, 20, 277, 320, 338, 349], "mean": [1, 2, 3, 7, 8, 13, 17, 21, 22, 23, 24, 25, 26, 30, 34, 48, 72, 74, 76, 77, 78, 80, 81, 84, 85, 93, 96, 114, 122, 146, 147, 150, 151, 158, 159, 160, 161, 163, 164, 166, 168, 170, 177, 178, 181, 182, 183, 184, 185, 187, 188, 193, 199, 200, 223, 224, 239, 241, 242, 245, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 264, 269, 270, 271, 272, 273, 276, 285, 286, 287, 289, 290, 291, 292, 297, 298, 313, 314, 328, 332], "main": [1, 2, 10, 32, 41, 43, 44, 95, 106, 173, 242, 253, 256, 257, 262, 263, 278, 280, 281, 282, 352, 353, 354], "highher": 1, "valu": [1, 4, 10, 11, 14, 15, 18, 20, 24, 26, 30, 48, 52, 65, 74, 76, 77, 81, 82, 83, 84, 85, 89, 93, 94, 95, 97, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112, 136, 139, 140, 141, 142, 143, 144, 145, 147, 148, 157, 158, 159, 160, 165, 167, 168, 170, 172, 174, 175, 176, 178, 179, 182, 183, 185, 187, 220, 223, 224, 225, 229, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 253, 254, 255, 257, 258, 263, 270, 271, 273, 274, 276, 277, 282, 285, 286, 287, 289, 290, 291, 292, 306, 307, 309, 313, 323, 332, 345, 349, 353], "By": [1, 54, 239, 253, 254, 257], "default": [1, 4, 51, 52, 65, 67, 76, 77, 78, 82, 83, 84, 86, 88, 89, 92, 93, 95, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 122, 124, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 172, 173, 175, 176, 177, 179, 180, 181, 182, 185, 187, 221, 222, 223, 224, 226, 228, 229, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 257, 258, 259, 260, 261, 266, 269, 271, 273, 275, 277, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 314, 323, 352, 353, 354], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 56, 59, 61, 62, 65, 71, 72, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 196, 199, 200, 204, 206, 207, 208, 215, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 302, 304, 305, 306, 307, 308, 309, 313, 314, 320, 323, 324, 330, 331, 332, 336, 345, 350], "postiv": [1, 242], "float": [1, 7, 41, 47, 52, 76, 97, 100, 103, 104, 105, 106, 109, 111, 112, 114, 124, 136, 137, 141, 142, 143, 145, 157, 158, 170, 176, 181, 182, 187, 188, 199, 223, 224, 228, 238, 239, 242, 244, 245, 253, 254, 255, 266, 273, 285, 286, 295, 299, 300, 306, 307, 323], "optmod": [1, 4, 6, 7, 8, 141, 142, 143], "which": [1, 2, 12, 13, 22, 23, 33, 34, 43, 58, 59, 67, 136, 137, 138, 147, 157, 158, 170, 176, 177, 179, 182, 187, 193, 221, 222, 228, 229, 236, 237, 239, 242, 243, 244, 245, 253, 254, 257, 273, 276, 277, 288, 289, 304, 313, 314, 320, 328, 347, 349, 353], "decid": [1, 22, 23, 157, 159, 160, 167, 168, 258], "hoe": 1, "rather": [1, 136, 182, 187, 314, 328, 353], "than": [1, 12, 13, 34, 52, 74, 76, 77, 81, 84, 100, 101, 135, 136, 139, 140, 144, 150, 151, 158, 170, 185, 194, 238, 239, 242, 243, 244, 270, 271, 280, 314, 323, 332, 353], "pressum": 1, "suppress": [1, 177], "softli": 1, "linatten": [1, 4, 6, 141, 142, 143], "depend": [1, 16, 52, 59, 62, 114, 139, 158, 170, 184, 221, 222, 238, 239, 243, 313, 314, 323, 324], "how": [1, 7, 20, 21, 100, 101, 239, 273, 347], "far": [1, 25, 255], "final": [1, 22, 29, 30, 48, 58, 76, 138, 176, 229, 239, 245, 255, 291, 292, 299, 300], "most": [1, 20, 58, 59, 68, 80, 81, 84, 320, 349], "common": [1, 52, 109, 111, 314, 323, 324], "requir": [1, 2, 59, 94, 239, 293], "addit": [1, 59, 76, 150, 151, 352, 353, 354], "associ": [1, 106, 314, 320], "ar": [1, 5, 7, 29, 30, 33, 34, 43, 52, 54, 59, 65, 67, 68, 74, 77, 81, 84, 89, 100, 101, 103, 104, 106, 108, 109, 111, 114, 127, 136, 139, 140, 141, 142, 143, 144, 145, 147, 151, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 176, 182, 187, 194, 223, 224, 228, 229, 239, 242, 243, 244, 245, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 269, 270, 271, 274, 277, 279, 285, 286, 288, 289, 291, 292, 297, 298, 305, 306, 307, 308, 309, 313, 314, 320, 323, 324, 328, 332, 347, 349, 350, 352, 353, 354], "bf": [1, 141, 142, 143], "2": [1, 2, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 29, 31, 33, 35, 39, 40, 42, 43, 44, 47, 49, 51, 53, 56, 59, 62, 63, 65, 72, 76, 78, 80, 81, 83, 84, 86, 89, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 193, 199, 200, 204, 217, 221, 222, 223, 224, 226, 227, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 307, 308, 309, 313, 314, 323, 328, 331, 332, 347, 349, 350], "gf": [1, 141, 142, 143], "8": [1, 2, 4, 5, 6, 7, 8, 9, 12, 14, 15, 17, 20, 22, 23, 24, 26, 29, 33, 34, 38, 39, 40, 41, 52, 56, 59, 62, 63, 65, 81, 84, 85, 89, 93, 95, 100, 106, 116, 136, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 167, 171, 176, 179, 239, 240, 241, 242, 243, 246, 247, 249, 250, 269, 270, 271, 273, 276, 288, 302, 305, 306, 307, 313, 314, 320, 332, 349, 350], "wv": [1, 4, 7, 8, 34, 52, 89, 90, 91, 141, 142, 143, 305, 306, 307, 308, 309, 323], "db3": [1, 4, 7, 8, 34, 89, 90, 91, 141, 142, 143, 305, 306, 307, 308, 309, 323], "funtion": [1, 100, 101, 108, 109, 111, 269], "could": [1, 22, 23, 109, 110, 111, 112, 137, 138, 147, 223, 224, 245, 285, 286, 324], "ani": [1, 5, 20, 22, 23, 59, 65, 100, 101, 134, 136, 139, 140, 145, 150, 151, 157, 158, 170, 176, 179, 185, 222, 223, 224, 238, 239, 241, 242, 256, 285, 286, 291, 292, 293, 313], "db38": [1, 141, 142, 143, 306, 307], "sym2": [1, 141, 142, 143, 306, 307], "sym20": [1, 141, 142, 143, 306, 307], "coif1": [1, 141, 142, 143, 306, 307], "coif17": [1, 141, 142, 143, 306, 307], "bior1": [1, 141, 142, 143, 306, 307], "bior6": [1, 141, 142, 143, 306, 307], "rbio1": [1, 141, 142, 143, 306, 307], "rbio6": [1, 141, 142, 143, 306, 307], "dmei": [1, 141, 142, 143, 306, 307], "25": [1, 2, 7, 24, 29, 30, 107, 109, 141, 142, 143, 173, 239, 240, 241, 244, 246, 247, 248, 249, 250, 263, 302, 306, 307, 320], "75": [1, 4, 5, 6, 7, 24, 26, 29, 30, 109, 110, 141, 142, 143, 239, 240, 242, 248, 250, 306, 307], "below": [1, 52, 67, 78, 100, 154, 239, 242, 276, 306, 307, 320, 323], "affect": [1, 20, 21, 134, 141, 142, 143, 156, 293], "segment": [1, 7, 144, 146, 150, 151, 236, 237], "three": [1, 5, 26, 43, 52, 65, 116, 128, 144, 145, 269, 292, 314, 323, 332], "refer": [1, 34, 52, 58, 74, 75, 76, 77, 78, 80, 81, 84, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 104, 105, 106, 107, 108, 110, 112, 113, 117, 118, 119, 120, 123, 129, 134, 135, 137, 139, 140, 141, 143, 144, 145, 146, 150, 154, 156, 158, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 177, 178, 179, 180, 181, 182, 185, 186, 187, 220, 221, 222, 226, 227, 236, 237, 251, 252, 259, 260, 261, 264, 265, 269, 270, 271, 272, 273, 275, 276, 277, 278, 282, 283, 284, 289, 291, 295, 296, 297, 298, 305, 306, 307, 308, 309, 313, 349], "bajaj": [1, 141, 143, 144], "nikesh": [1, 141, 143], "et": [1, 141, 143], "al": [1, 141, 143, 203], "decomposit": [1, 76, 80, 85, 89, 90, 134, 135, 141, 142, 143, 145, 172, 272, 277, 280, 281, 293, 294, 305, 306, 307, 308, 309, 314, 323, 352, 353, 354], "applic": [1, 52, 141, 143, 253, 254, 310, 314, 323, 324, 349], "predict": [1, 20, 21, 22, 23, 24, 25, 26, 141, 143, 253, 254, 255, 256, 257, 259, 260, 274], "model": [1, 10, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 33, 34, 37, 42, 45, 47, 51, 79, 134, 135, 141, 143, 186, 227, 253, 255, 256, 257, 277, 280, 281, 293, 294, 319, 321, 337, 338, 345, 349, 352, 353, 354], "dure": [1, 76, 141, 143, 222, 236, 237, 314, 353], "auditori": [1, 7, 8, 10, 25, 30, 38, 40, 44, 46, 48, 49, 141, 143, 289, 345], "task": [1, 141, 143], "biomed": [1, 60, 139, 141, 143, 349], "55": [1, 2, 29, 30, 141, 143, 239, 240, 248, 250], "2020": [1, 56, 141, 143, 352, 353, 354], "101624": [1, 141, 143], "spkit": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 32, 35, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 56, 58, 65, 67, 71, 72, 311, 313, 314, 320, 321, 323, 324, 328, 330, 332, 342, 343, 345, 349, 350, 352, 354], "atar_1ch": [1, 141, 143, 145], "atar_mch": [1, 141, 142, 145], "singl": [1, 4, 65, 100, 119, 136, 139, 140, 141, 142, 143, 145, 177, 178, 179, 181, 182, 183, 184, 185, 223, 224, 236, 237, 242, 243, 246, 249, 277, 285, 286, 324], "channel": [1, 2, 3, 4, 5, 6, 8, 10, 11, 16, 18, 29, 34, 51, 63, 65, 76, 79, 100, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 159, 160, 167, 168, 177, 178, 179, 180, 181, 182, 183, 184, 185, 228, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 258, 265, 266, 273, 313, 324, 345, 349], "input": [1, 20, 42, 44, 67, 76, 92, 99, 100, 101, 102, 109, 111, 113, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 156, 157, 169, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 221, 222, 226, 227, 236, 237, 239, 242, 264, 268, 269, 275, 276, 277, 279, 280, 281, 294, 352, 353, 354], "shape": [1, 2, 3, 4, 5, 6, 8, 12, 13, 15, 20, 22, 23, 24, 25, 26, 29, 30, 34, 39, 40, 41, 43, 44, 51, 71, 74, 76, 77, 80, 81, 84, 85, 86, 92, 96, 100, 101, 102, 109, 111, 114, 116, 118, 120, 122, 124, 126, 127, 128, 131, 132, 134, 135, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 169, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 193, 199, 200, 204, 223, 224, 229, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 253, 255, 256, 257, 262, 263, 265, 266, 270, 271, 272, 275, 280, 281, 282, 284, 285, 286, 289, 293, 294, 308, 313, 320, 321, 336, 337, 352, 353, 354], "where": [1, 3, 4, 7, 13, 30, 52, 59, 65, 68, 76, 105, 106, 107, 108, 109, 110, 111, 112, 136, 141, 142, 143, 144, 150, 151, 156, 157, 161, 162, 163, 164, 166, 173, 176, 177, 229, 236, 237, 238, 242, 245, 259, 260, 261, 288, 289, 293, 295, 297, 298, 306, 307, 313, 320, 323, 324], "ch": [1, 15, 29, 30, 34, 52, 71, 109, 116, 119, 134, 135, 139, 140, 144, 145, 147, 150, 151, 152, 153, 154, 177, 178, 179, 180, 181, 182, 183, 184, 185, 238, 239, 245, 265, 266], "joblib": [1, 59, 62, 141, 143, 352, 353, 354], "parallel": [1, 141, 143], "multi": [1, 4, 11, 16, 18, 51, 58, 60, 63, 86, 92, 102, 126, 137, 141, 143, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 177, 178, 179, 180, 181, 182, 183, 184, 185, 236, 237, 238, 239, 244, 245, 255, 258, 259, 260, 261, 265, 266, 275, 297, 298, 324, 345, 349, 352, 353, 354], "some": [1, 52, 58, 59, 133, 136, 221, 222, 227, 239, 249, 276, 305, 323, 324, 330], "o": [1, 2, 13, 21, 29, 30, 43, 86, 114, 122, 124, 126, 127, 131, 132, 236, 237, 238, 239, 242, 243, 244, 245, 249, 262, 263, 288, 289, 313], "rais": [1, 239, 353], "an": [1, 2, 14, 15, 25, 34, 43, 65, 67, 74, 76, 77, 94, 109, 110, 111, 112, 129, 159, 160, 167, 168, 173, 176, 221, 236, 237, 247, 253, 254, 258, 293, 314, 320, 330, 332, 347], "error": [1, 3, 77, 87, 88, 94, 173, 239, 251, 252, 313, 352, 353, 354], "brokenprocesspool": 1, "case": [1, 5, 20, 59, 65, 109, 133, 137, 138, 145, 147, 176, 221, 223, 224, 238, 239, 243, 273, 277, 285, 286, 314, 324], "atar_mch_noparallel": 1, "same": [1, 16, 24, 34, 43, 74, 77, 78, 92, 98, 99, 100, 101, 103, 104, 105, 106, 109, 111, 113, 118, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 147, 157, 158, 169, 170, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 223, 224, 229, 236, 237, 239, 242, 243, 247, 248, 249, 256, 269, 273, 276, 281, 282, 284, 285, 286, 289, 293, 294, 305, 306, 307, 313, 314, 320, 353], "except": [1, 5, 65, 100, 101, 136, 145, 176, 235, 332], "altern": [1, 74, 77, 136, 137, 138, 222, 313, 332], "loop": [1, 41], "gener": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 83, 94, 103, 104, 106, 107, 109, 110, 111, 112, 122, 124, 126, 127, 131, 132, 136, 144, 147, 158, 170, 182, 187, 188, 228, 229, 232, 278, 282, 289, 314, 328], "call": [1, 158, 170, 239, 314], "pass": [1, 29, 30, 48, 52, 76, 100, 101, 114, 120, 136, 139, 140, 141, 142, 143, 147, 176, 185, 194, 207, 223, 224, 228, 229, 239, 244, 248, 249, 285, 286, 291, 292, 323], "els": [1, 21, 30, 74, 77, 88, 103, 108, 109, 110, 111, 112, 134, 135, 136, 141, 142, 143, 144, 147, 156, 165, 225, 229, 236, 237, 239, 242, 243, 255, 265, 269, 273, 276, 305, 306, 307, 320, 332], "use_joblib": [1, 7, 140, 141, 143, 146, 150, 179], "agrument": 1, "try": [1, 58, 221, 222, 239, 245, 301, 303], "individu": [1, 247, 306, 307], "we": [1, 6, 7, 17, 20, 21, 22, 23, 24, 29, 30, 33, 34, 41, 43, 52, 68, 133, 194, 313, 314, 323, 347, 349, 353], "recom": 1, "import": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 59, 67, 71, 72, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 199, 200, 204, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 313, 314, 320, 321, 323, 324, 328, 330, 332, 352, 353, 354], "librari": [1, 2, 4, 5, 20, 24, 25, 26, 33, 34, 51, 54, 58, 59, 67, 178, 183, 233, 324, 350], "numpi": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 59, 62, 71, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 199, 200, 204, 220, 221, 222, 223, 224, 225, 226, 227, 229, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 313, 314, 320, 321, 323, 324, 328, 330, 332], "np": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 71, 72, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 199, 200, 204, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 313, 314, 320, 321, 323, 324, 328, 330, 331, 332, 337], "matplotlib": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 59, 62, 71, 74, 76, 77, 81, 82, 83, 84, 85, 86, 89, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 161, 163, 164, 165, 166, 167, 171, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 199, 200, 204, 221, 222, 223, 224, 225, 226, 227, 229, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 285, 286, 288, 289, 291, 293, 294, 295, 296, 297, 298, 305, 306, 307, 308, 309, 313, 314, 320, 321, 323, 324, 328, 330, 332], "pyplot": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 71, 74, 76, 77, 81, 82, 83, 84, 85, 86, 89, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 161, 163, 164, 165, 166, 167, 171, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 199, 200, 204, 221, 222, 223, 224, 225, 226, 227, 229, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 285, 286, 288, 289, 291, 293, 294, 295, 296, 297, 298, 305, 306, 307, 308, 309, 313, 314, 320, 321, 323, 324, 328, 330, 332], "plt": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 71, 74, 76, 77, 81, 82, 83, 84, 85, 86, 89, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 161, 163, 164, 165, 166, 167, 171, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 199, 200, 204, 221, 222, 223, 224, 225, 226, 227, 229, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 285, 286, 288, 289, 291, 293, 294, 295, 296, 297, 298, 305, 306, 307, 308, 309, 313, 314, 320, 321, 323, 324, 328, 330, 332], "warn": [1, 2, 4, 5, 6, 114, 137, 138, 147, 150, 151], "filterwarn": [1, 2, 4, 5, 6], "ignor": [1, 2, 4, 5, 6, 100, 101, 147, 152, 153, 154, 251, 273, 277], "sp": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 21, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 67, 71, 72, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 199, 200, 204, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 313, 314, 320, 321, 323, 324, 328, 330, 331, 332, 336, 337], "print": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 34, 38, 39, 40, 41, 42, 43, 48, 51, 81, 84, 85, 93, 94, 100, 109, 114, 130, 133, 137, 138, 139, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 250, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 270, 271, 287, 291, 292, 295, 297, 298, 301, 302, 303, 304, 313, 314, 320, 321, 336, 337, 343, 352, 353, 354], "version": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 16, 20, 21, 22, 23, 24, 25, 26, 29, 30, 38, 40, 41, 42, 43, 51, 55, 59, 62, 75, 80, 81, 84, 94, 109, 111, 122, 124, 126, 127, 131, 132, 145, 146, 152, 153, 154, 239, 254, 270, 271, 272, 314, 320, 350], "__version__": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 16, 20, 21, 22, 23, 24, 25, 26, 29, 30, 38, 40, 41, 42, 43, 51, 52, 59, 239, 320], "data": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 21, 22, 23, 24, 25, 26, 29, 30, 34, 38, 40, 41, 43, 44, 46, 48, 49, 51, 52, 60, 65, 74, 76, 77, 85, 86, 89, 94, 96, 97, 102, 109, 113, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 178, 179, 181, 183, 184, 185, 187, 188, 221, 222, 225, 228, 229, 235, 239, 253, 254, 256, 257, 259, 260, 261, 262, 263, 265, 266, 269, 275, 276, 277, 289, 293, 294, 295, 296, 297, 298, 302, 305, 308, 309, 313, 314, 321, 323, 328, 331, 332, 337, 345, 349, 352, 354], "f": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 29, 30, 34, 40, 41, 43, 44, 51, 52, 65, 71, 74, 76, 77, 81, 84, 85, 86, 89, 92, 96, 97, 98, 99, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 198, 217, 221, 222, 225, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 245, 249, 250, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 275, 276, 277, 279, 280, 281, 282, 293, 294, 295, 296, 297, 298, 305, 306, 308, 309, 313, 320, 321, 323, 324, 328, 330, 331, 332, 336, 337, 349], "ch_name": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 34, 41, 65, 71, 76, 85, 86, 118, 120, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 159, 160, 161, 163, 164, 166, 167, 168, 225, 259, 260, 261, 262, 263, 297, 298, 302, 313, 314, 321, 331, 337], "eeg_sample_14ch": [1, 3, 4, 5, 6, 8, 12, 13, 15, 34, 41, 71, 76, 85, 86, 115, 116, 117, 119, 120, 121, 123, 128, 129, 141, 142, 143, 144, 145, 146, 147, 150, 151, 159, 160, 161, 163, 164, 166, 167, 168, 225, 259, 260, 261, 262, 263, 297, 298, 313, 314, 321, 331, 337], "filterdc_sgolai": [1, 34, 76, 85, 89, 97, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 177, 185, 221, 222, 265, 266, 277, 293, 294, 305, 308, 309, 323, 324, 352, 353, 354], "window_length": [1, 34, 76, 85, 89, 97, 98, 99, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 178, 181, 182, 183, 184, 187, 188, 221, 222, 265, 266, 277, 293, 294, 305, 308, 309, 323, 324, 328], "3": [1, 2, 4, 5, 6, 7, 12, 13, 14, 15, 17, 21, 22, 23, 24, 25, 29, 33, 34, 38, 39, 43, 44, 47, 51, 56, 59, 61, 62, 63, 65, 71, 72, 74, 76, 77, 81, 83, 84, 85, 86, 89, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 154, 158, 162, 165, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 198, 204, 207, 208, 215, 221, 222, 223, 224, 233, 235, 236, 237, 238, 239, 240, 242, 243, 245, 250, 253, 255, 256, 257, 265, 269, 270, 271, 275, 276, 277, 280, 281, 284, 285, 286, 287, 289, 290, 293, 294, 296, 302, 304, 305, 307, 308, 309, 313, 314, 323, 324, 328, 332, 347, 349, 350], "highpass": [1, 2, 3, 4, 5, 6, 7, 8, 179, 324, 339, 349], "xf": [1, 2, 3, 4, 5, 6, 8, 40, 42, 52, 76, 85, 174, 179, 180, 186, 226, 227, 313, 324, 330], "filter_x": [1, 2, 3, 4, 5, 6, 8, 12, 13, 150, 151, 181, 182, 183, 184, 185, 306, 313, 324, 330, 352, 353, 354], "copi": [1, 2, 3, 4, 5, 6, 7, 8, 30, 34, 41, 43, 44, 52, 74, 77, 98, 99, 100, 101, 145, 161, 163, 164, 166, 176, 177, 178, 179, 181, 182, 183, 184, 187, 188, 235, 242, 259, 260, 261, 269, 276, 279, 280, 281, 297, 298, 306, 307, 313, 324, 328, 331, 332], "band": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 144, 146, 150, 151, 179, 313, 324, 330], "btype": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 179, 313, 324, 330], "ftype": [1, 2, 3, 4, 5, 6, 8, 150, 151, 179, 199, 200, 223, 224, 285, 286, 324, 330], "so": [1, 2, 3, 4, 5, 6, 7, 8, 16, 22, 23, 141, 142, 143, 150, 151, 179, 221, 223, 224, 236, 237, 239, 242, 243, 244, 285, 286, 313, 314, 324], "t": [1, 2, 3, 4, 5, 6, 7, 12, 13, 15, 17, 24, 30, 34, 39, 40, 41, 42, 43, 44, 48, 51, 52, 71, 74, 76, 77, 81, 84, 85, 86, 89, 92, 94, 96, 97, 98, 99, 100, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 153, 154, 156, 157, 158, 159, 160, 165, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 221, 222, 226, 227, 235, 236, 237, 238, 245, 251, 252, 256, 258, 262, 263, 265, 266, 269, 270, 271, 275, 276, 277, 278, 279, 280, 281, 288, 291, 293, 294, 302, 305, 307, 308, 309, 313, 314, 320, 321, 323, 324, 328, 331, 332, 337, 347], "arang": [1, 2, 3, 4, 5, 6, 7, 12, 13, 15, 17, 22, 23, 30, 34, 39, 40, 41, 43, 44, 51, 52, 71, 74, 76, 77, 81, 85, 86, 89, 95, 96, 97, 98, 99, 100, 102, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 156, 165, 171, 173, 178, 179, 181, 182, 183, 184, 185, 187, 188, 221, 222, 235, 238, 245, 253, 256, 257, 262, 263, 265, 266, 269, 270, 275, 276, 277, 278, 279, 280, 281, 288, 293, 294, 305, 307, 308, 309, 313, 314, 320, 321, 323, 324, 328, 331, 332, 337], "figsiz": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 30, 34, 39, 40, 41, 42, 43, 44, 47, 51, 71, 74, 76, 77, 81, 84, 85, 86, 89, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 171, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 199, 200, 204, 221, 222, 223, 224, 226, 227, 235, 236, 237, 238, 239, 242, 243, 245, 247, 248, 249, 253, 255, 256, 257, 262, 263, 264, 265, 266, 269, 270, 271, 273, 275, 276, 277, 279, 280, 281, 285, 286, 288, 289, 291, 293, 294, 296, 305, 306, 307, 308, 309, 313, 314, 320, 332], "12": [1, 2, 3, 4, 5, 6, 13, 15, 16, 17, 22, 23, 24, 25, 26, 29, 33, 34, 38, 39, 40, 62, 63, 65, 74, 76, 77, 81, 84, 95, 98, 99, 101, 104, 106, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 136, 141, 142, 143, 145, 152, 153, 176, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 236, 237, 239, 240, 248, 249, 250, 253, 255, 269, 270, 271, 288, 302, 307, 313, 320, 332, 349], "plot": [1, 5, 8, 10, 12, 13, 15, 17, 21, 22, 23, 24, 25, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 51, 63, 71, 74, 76, 77, 81, 84, 85, 86, 89, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 153, 154, 156, 171, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 194, 195, 196, 206, 213, 214, 217, 221, 222, 225, 226, 227, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 262, 263, 264, 265, 266, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 288, 289, 291, 293, 294, 296, 305, 306, 307, 308, 309, 313, 314, 332, 342, 345, 349], "7": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 33, 35, 38, 39, 40, 41, 42, 43, 45, 47, 51, 56, 62, 63, 74, 76, 77, 83, 100, 101, 103, 104, 116, 118, 122, 124, 126, 127, 131, 132, 138, 140, 145, 146, 152, 153, 154, 175, 176, 178, 181, 188, 199, 200, 223, 224, 236, 239, 240, 242, 243, 246, 247, 249, 250, 253, 256, 257, 262, 263, 276, 285, 286, 302, 305, 313, 314, 328, 345, 349, 350], "200": [1, 3, 4, 5, 15, 21, 39, 40, 72, 76, 92, 94, 98, 99, 100, 114, 141, 142, 143, 145, 158, 169, 170, 172, 239, 314], "xlim": [1, 3, 4, 5, 6, 8, 12, 13, 15, 17, 21, 22, 23, 30, 34, 39, 40, 41, 42, 43, 71, 74, 76, 77, 81, 84, 86, 92, 97, 98, 99, 100, 102, 105, 106, 107, 108, 110, 112, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 171, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 226, 227, 235, 245, 249, 262, 263, 264, 265, 266, 269, 270, 271, 275, 276, 277, 278, 307, 308, 309, 313, 314, 320, 332], "xlabel": [1, 3, 4, 5, 7, 8, 12, 13, 14, 15, 16, 17, 21, 30, 39, 40, 41, 42, 43, 47, 51, 71, 74, 77, 81, 84, 86, 96, 97, 102, 105, 106, 107, 108, 110, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 171, 174, 178, 179, 181, 182, 183, 184, 186, 187, 188, 221, 222, 225, 226, 227, 235, 238, 264, 265, 266, 269, 270, 271, 275, 276, 279, 289, 307, 308, 309, 313, 314, 320, 332], "time": [1, 2, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 63, 65, 71, 74, 77, 81, 84, 86, 96, 97, 98, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 151, 169, 171, 173, 174, 178, 179, 181, 182, 183, 184, 186, 187, 188, 221, 222, 226, 227, 235, 236, 237, 238, 239, 241, 242, 243, 244, 246, 249, 255, 265, 266, 269, 270, 271, 275, 276, 277, 279, 280, 281, 288, 293, 294, 295, 299, 300, 302, 307, 308, 309, 319, 320, 323, 332, 338, 349, 352, 353, 354], "ytick": [1, 3, 4, 5, 6, 13, 15, 21, 30, 39, 71, 76, 84, 92, 97, 116, 118, 120, 141, 143, 144, 145, 179, 182, 235, 265, 271, 276], "grid": [1, 4, 5, 8, 12, 13, 15, 17, 25, 30, 34, 41, 43, 44, 67, 71, 74, 77, 92, 96, 97, 98, 99, 100, 103, 104, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 136, 139, 140, 141, 142, 143, 144, 145, 147, 151, 156, 171, 173, 178, 181, 182, 183, 184, 185, 187, 188, 203, 207, 209, 210, 235, 238, 239, 240, 241, 245, 247, 248, 249, 250, 255, 262, 263, 264, 265, 266, 269, 276, 278, 280, 281, 293, 294, 307, 308, 309, 313, 314, 320, 332], "titl": [1, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 21, 30, 34, 40, 41, 43, 47, 48, 74, 76, 77, 85, 96, 97, 100, 101, 104, 114, 122, 124, 126, 127, 131, 132, 136, 139, 140, 141, 142, 143, 144, 145, 151, 152, 153, 154, 176, 181, 182, 183, 184, 187, 188, 199, 200, 221, 222, 223, 224, 237, 238, 242, 245, 246, 247, 248, 249, 253, 254, 257, 262, 263, 265, 266, 273, 276, 277, 285, 286, 288, 289, 291, 292, 299, 300], "14": [1, 2, 3, 4, 5, 6, 7, 8, 15, 17, 23, 24, 26, 29, 30, 33, 34, 38, 39, 40, 62, 65, 75, 76, 80, 85, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 141, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 239, 240, 248, 250, 272, 302], "9": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 32, 35, 38, 39, 40, 41, 42, 43, 51, 56, 61, 62, 63, 82, 83, 94, 100, 101, 103, 104, 106, 116, 118, 122, 124, 126, 127, 131, 132, 133, 141, 142, 143, 145, 146, 147, 152, 153, 154, 157, 174, 175, 176, 178, 186, 226, 227, 240, 242, 249, 250, 255, 258, 292, 302, 305, 313, 314, 320, 345, 349, 350], "math": [1, 3, 52, 162, 274, 313], "xr": [1, 4, 5, 6, 8, 34, 41, 43, 44, 141, 142, 143, 145, 277, 280, 281, 305, 306, 307, 323, 336], "verbos": [1, 4, 5, 6, 7, 12, 13, 21, 24, 30, 52, 87, 88, 89, 90, 140, 141, 142, 143, 144, 145, 150, 151, 159, 160, 168, 179, 185, 186, 193, 196, 200, 222, 224, 227, 228, 229, 236, 237, 238, 239, 241, 242, 243, 244, 245, 249, 253, 254, 255, 257, 258, 261, 266, 274, 306, 307, 309, 313], "correct": [1, 4, 5, 7, 65, 136, 141, 142, 143, 178, 183, 229, 239, 243], "2048": [1, 3, 4, 5, 6, 12, 13, 15, 41, 51, 137, 138, 139], "r_": [1, 39, 81, 84, 270, 271], "01": [1, 21, 24, 25, 26, 27, 35, 40, 41, 43, 44, 74, 77, 88, 94, 136, 169, 172, 173, 199, 200, 204, 223, 224, 255, 277, 280, 281, 283, 285, 286, 308, 309, 314, 336], "02": [1, 21, 24, 26, 27, 35, 45, 221, 222], "round": [1, 14, 16, 34, 52, 100, 101, 171, 176, 240, 246, 247, 250, 263, 291, 292, 314, 323], "b": [1, 21, 25, 114, 124, 156, 177, 247, 255, 289, 293], "15": [1, 2, 3, 4, 5, 6, 7, 8, 17, 21, 22, 23, 24, 25, 29, 30, 33, 38, 39, 41, 51, 56, 62, 76, 81, 83, 85, 89, 114, 141, 142, 143, 187, 199, 200, 204, 223, 224, 239, 240, 245, 248, 249, 250, 270, 285, 286, 292, 302, 313, 320, 352, 353, 354], "subplot": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 16, 17, 21, 25, 30, 34, 39, 40, 41, 42, 43, 44, 47, 74, 76, 77, 81, 84, 85, 86, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 128, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 171, 173, 174, 176, 184, 185, 186, 187, 188, 199, 200, 204, 223, 224, 226, 227, 236, 245, 246, 255, 265, 266, 270, 271, 275, 276, 277, 280, 281, 285, 286, 288, 289, 293, 294, 296, 308, 309, 313, 314, 320], "121": [1, 3, 4, 5, 12, 13, 16, 17, 22, 27, 29, 30, 34, 106, 139, 152, 153, 154, 171, 288, 314, 320], "r": [1, 2, 3, 4, 7, 8, 17, 21, 25, 34, 40, 41, 42, 43, 47, 63, 65, 74, 77, 85, 94, 97, 100, 101, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 158, 170, 171, 172, 173, 174, 176, 181, 182, 186, 187, 199, 200, 202, 208, 209, 210, 221, 222, 223, 224, 226, 227, 258, 265, 266, 285, 286, 289, 306, 307, 314, 328, 349], "122": [1, 3, 4, 5, 12, 13, 16, 17, 30, 34, 106, 139, 152, 153, 154, 171, 288, 314, 320], "db8": 1, "db32": 1, "10": [1, 2, 3, 4, 5, 7, 8, 12, 13, 14, 17, 20, 21, 22, 23, 24, 26, 29, 33, 38, 41, 42, 43, 44, 47, 48, 51, 63, 71, 76, 81, 82, 83, 84, 86, 89, 92, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 118, 120, 128, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 154, 156, 157, 159, 160, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 182, 184, 186, 187, 188, 196, 199, 200, 203, 204, 210, 221, 222, 223, 224, 226, 227, 235, 239, 240, 241, 245, 247, 250, 255, 256, 257, 258, 265, 266, 270, 271, 273, 275, 276, 277, 279, 280, 281, 285, 286, 289, 291, 293, 294, 296, 302, 305, 306, 308, 309, 313, 314, 320, 336, 349, 352, 353, 354], "lowest": 1, "help": [1, 136, 157, 159, 167, 236, 237, 245, 307, 313], "prevent": 1, "entir": [1, 76, 145, 239, 243], "zero": [1, 15, 26, 39, 40, 52, 77, 81, 84, 85, 137, 138, 141, 142, 143, 157, 159, 160, 167, 168, 175, 176, 177, 226, 227, 239, 241, 258, 270, 271, 279, 306, 307, 313, 323], "out": [1, 39, 52, 58, 68, 94, 177, 178, 179, 239, 266, 306, 307, 323, 324], "due": [1, 20, 51, 221, 222, 236, 237, 242, 352, 353, 354], "present": [1, 88, 161, 162, 164, 166, 259, 260, 261, 297, 298], "high": [1, 12, 13, 22, 23, 74, 77, 97, 115, 120, 141, 142, 143, 158, 170, 242, 313, 332], "magnitut": 1, "largest": [1, 80, 81, 84, 223, 224, 270, 271, 272, 285, 286], "term": [1, 314], "decai": 1, "curv": [1, 22, 23, 156, 183, 188, 253, 254, 255, 257], "increas": [1, 239, 280, 283], "k2": [1, 4, 7, 8, 94, 141, 142, 143], "make": [1, 89, 137, 138, 147, 152, 153, 154, 157, 159, 160, 167, 168, 176, 181, 182, 184, 223, 224, 238, 239, 243, 258, 285, 286, 309, 313], "less": [1, 12, 13, 81, 84, 94, 145, 158, 169, 170, 172, 239, 244, 269, 270, 271, 314], "k1": [1, 4, 7, 8, 94, 141, 142, 143], "50": [1, 2, 12, 23, 24, 29, 30, 33, 38, 40, 75, 80, 86, 114, 120, 156, 179, 180, 185, 199, 200, 204, 222, 223, 224, 239, 249, 272, 277, 278, 279, 285, 286, 289, 293, 299, 300, 302, 307], "inter": [1, 147, 176, 239, 241], "quartil": [1, 288], "incres": [1, 161, 162, 164, 166, 259, 260, 261, 297, 298], "85": [1, 17, 29, 30, 109, 147, 148, 239, 240, 248, 250], "70": [1, 24, 33, 38, 141, 142, 143, 262, 263], "300": [1, 25, 30, 71, 118, 239, 255], "all": [1, 5, 10, 12, 13, 29, 30, 52, 59, 65, 67, 76, 81, 84, 109, 111, 115, 116, 117, 121, 123, 128, 129, 130, 136, 137, 138, 139, 140, 145, 146, 150, 151, 152, 153, 154, 157, 173, 185, 228, 236, 237, 238, 239, 242, 243, 244, 245, 247, 248, 249, 256, 270, 271, 273, 288, 291, 292, 305, 306, 307, 313, 323, 345, 347, 349, 350, 353], "thr_method": [1, 4, 7, 8, 141, 142, 143], "none": [1, 3, 13, 21, 24, 30, 34, 40, 41, 43, 44, 48, 76, 79, 81, 84, 85, 88, 89, 90, 92, 98, 100, 101, 103, 104, 105, 106, 109, 111, 122, 124, 126, 127, 128, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 155, 156, 157, 159, 160, 161, 163, 164, 166, 168, 171, 173, 176, 181, 182, 185, 188, 190, 194, 196, 203, 205, 210, 212, 217, 222, 223, 228, 229, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 269, 270, 271, 280, 281, 285, 288, 289, 291, 292, 293, 296, 297, 298, 300, 302, 306, 307, 308, 309, 313, 314, 320, 328, 336, 337], "theta_a": [1, 141, 142, 143], "winsiz": [1, 4, 5, 6, 7, 8, 89, 90, 141, 142, 143, 144, 145, 151, 307, 309], "assum": [1, 135, 156, 288, 291], "rate": [1, 3, 4, 5, 6, 8, 41, 43, 105, 109, 111, 115, 117, 123, 129, 146, 150, 151, 158, 170, 173, 255, 313, 320], "need": [1, 2, 5, 20, 65, 67, 141, 142, 143, 145, 239, 243], "In": [1, 6, 7, 17, 20, 21, 22, 23, 29, 30, 34, 41, 43, 52, 59, 100, 101, 137, 138, 222, 223, 224, 236, 238, 239, 242, 243, 244, 254, 276, 285, 286, 313, 314, 323, 324], "follow": [1, 5, 29, 30, 34, 41, 43, 59, 65, 67, 120, 137, 138, 141, 142, 143, 145, 154, 242, 246, 247, 266, 269, 276, 306, 307, 313, 314, 347, 352, 353, 354], "5sec": 1, "total": [1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 114, 137, 138, 146, 150, 151, 276, 295, 296, 345], "script": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 59], "minut": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52], "437": 1, "second": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 65, 114, 118, 119, 120, 132, 145, 179, 236, 237, 239, 242, 244, 245, 280, 313], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 44, 47, 48, 51, 52, 300, 301, 303, 347], "notebook": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 291, 300, 301, 303, 347], "plot_sp_atar_algorithm_tun": [1, 9, 345], "ipynb": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52], "python": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 59, 67, 75, 76, 80, 81, 84, 270, 271, 272, 313, 347, 352, 353, 354], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 59, 67, 76, 94, 157, 158, 170, 225, 345, 349], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 160, 168, 314, 345], "relat": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 136, 353], "releas": [8, 12, 15, 29, 35, 38, 39, 40, 41, 42, 56, 57, 58, 60, 80, 81, 82, 83, 84, 100, 101, 103, 104, 116, 118, 152, 153, 154, 175, 176, 178, 305, 344, 345, 352, 353, 354], "highlight": [8, 12, 15, 29, 35, 38, 39, 40, 41, 42, 58, 60, 82, 83, 100, 101, 103, 104, 116, 118, 152, 153, 154, 175, 176, 178, 305, 345], "6": [2, 4, 5, 6, 10, 12, 13, 14, 15, 17, 18, 21, 22, 23, 24, 26, 29, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 47, 56, 61, 62, 63, 71, 76, 81, 82, 83, 84, 89, 91, 96, 106, 109, 111, 116, 118, 120, 128, 138, 141, 142, 143, 144, 145, 160, 171, 176, 181, 188, 204, 208, 217, 235, 236, 240, 242, 243, 250, 253, 256, 257, 270, 271, 273, 276, 280, 281, 287, 293, 294, 302, 306, 307, 313, 320, 328, 345, 349, 350], "galleri": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 62, 345], "sphinx": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 52, 62], "fastica": [3, 76, 145], "picard": [3, 6, 59, 76, 145], "16": [2, 3, 4, 5, 6, 8, 17, 23, 24, 26, 29, 30, 33, 38, 39, 56, 118, 119, 120, 239, 240, 242, 248, 250, 255, 302, 313, 352, 353, 354], "sec": [3, 4, 5, 6, 8], "smapl": [3, 4, 5, 6, 8, 102, 179, 253, 254, 257, 275, 313], "iir": [3, 4, 5, 6, 8, 177, 178, 179, 185, 339, 349], "5hz": [3, 4, 5, 6, 8, 120], "5": [2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 29, 33, 34, 38, 39, 40, 41, 42, 43, 51, 52, 56, 61, 62, 63, 72, 74, 77, 78, 81, 84, 85, 86, 89, 92, 97, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 121, 126, 130, 132, 134, 135, 136, 138, 139, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 179, 181, 183, 184, 185, 186, 187, 188, 199, 200, 204, 209, 210, 217, 222, 223, 224, 226, 227, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 249, 250, 251, 252, 253, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 275, 277, 279, 285, 286, 288, 289, 291, 293, 294, 297, 298, 302, 305, 306, 307, 308, 309, 313, 314, 320, 323, 324, 328, 330, 332, 349, 350], "icap": [3, 76], "str": [3, 21, 76, 93, 100, 101, 109, 111, 114, 124, 126, 127, 128, 132, 136, 139, 140, 141, 142, 143, 147, 152, 153, 154, 157, 159, 160, 167, 168, 176, 179, 223, 224, 225, 228, 229, 230, 232, 233, 236, 237, 239, 241, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 269, 273, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 300, 302, 304, 306, 307], "rang": [3, 7, 13, 15, 17, 21, 26, 29, 30, 52, 74, 76, 77, 78, 84, 96, 105, 106, 107, 108, 109, 110, 111, 112, 141, 142, 143, 144, 157, 173, 199, 200, 204, 222, 223, 224, 229, 236, 237, 239, 242, 243, 246, 247, 248, 269, 271, 276, 285, 286, 288, 299, 300, 313, 314, 323, 332], "myica": [3, 76], "n_compon": [3, 76, 79], "fit": [3, 20, 21, 22, 23, 24, 25, 26, 76, 79, 178, 183, 253, 254, 255, 256, 257, 353], "s1": [3, 76], "transform": [3, 10, 33, 34, 37, 45, 76, 79, 80, 109, 134, 135, 136, 141, 142, 143, 174, 186, 226, 227, 265, 272, 277, 280, 281, 293, 294, 305, 306, 307, 319, 338, 340, 345, 349, 352, 353, 354], "s2": [3, 76], "s3": [3, 76], "s4": [3, 76], "321": [3, 4, 5, 6, 76], "322": [3, 6, 76], "700": [3, 30, 76, 86, 239, 241], "323": [3, 6, 29, 30, 41, 76], "324": [3, 6, 41, 76], "325": [3, 6, 76], "tight_layout": [3, 4, 5, 13, 15, 16, 17, 20, 25, 26, 30, 34, 40, 41, 42, 43, 44, 47, 74, 76, 77, 81, 84, 86, 92, 97, 98, 99, 100, 101, 105, 106, 107, 108, 110, 112, 114, 140, 141, 142, 143, 144, 145, 151, 154, 171, 174, 176, 178, 181, 183, 184, 185, 186, 187, 188, 226, 227, 235, 245, 255, 256, 265, 266, 269, 270, 271, 276, 277, 280, 281, 293, 294, 296, 308, 309, 314, 332], "": [2, 3, 4, 12, 13, 15, 29, 30, 41, 42, 43, 44, 51, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 94, 96, 97, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 131, 132, 135, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 171, 173, 174, 178, 179, 181, 182, 183, 184, 186, 187, 188, 199, 200, 204, 216, 221, 222, 223, 224, 226, 227, 233, 235, 236, 237, 239, 241, 242, 247, 265, 266, 269, 270, 271, 272, 275, 276, 279, 280, 281, 282, 285, 286, 287, 291, 293, 294, 306, 307, 308, 309, 314, 320, 328, 332, 353], "A": [3, 5, 33, 34, 36, 52, 65, 71, 74, 75, 76, 77, 80, 100, 101, 109, 111, 114, 122, 136, 137, 138, 145, 154, 176, 179, 223, 224, 239, 246, 247, 253, 254, 255, 257, 269, 272, 285, 286, 289, 313, 314, 323, 324, 347], "cdot": [3, 4, 65, 106, 110, 141, 142, 143, 156, 288, 305, 320, 349], "mu": [3, 26, 77, 137, 138, 256, 269, 332], "w": [3, 4, 30, 65, 76, 79, 97, 107, 108, 110, 112, 136, 141, 142, 143, 207, 239, 251, 252, 255, 266, 306, 307, 320, 353], "befor": [3, 21, 43, 76, 139, 140, 141, 142, 143, 157, 159, 160, 167, 168, 222, 236, 237, 239, 242, 243, 255, 258, 269, 332], "pca": [3, 76, 197, 352, 354], "pca_mean_": [3, 76], "get_smatrix": [3, 76], "get_tmatrix": [3, 76], "dot": [3, 79, 85, 147, 289], "x1": [3, 15, 17, 21, 39, 42, 48, 72, 81, 84, 86, 94, 103, 122, 124, 126, 127, 131, 132, 137, 138, 158, 161, 163, 164, 165, 166, 169, 170, 171, 172, 179, 211, 225, 226, 227, 259, 260, 261, 270, 271, 289, 291, 292, 295, 297, 298, 313, 314], "400": 3, "ex": 3, "sum": [2, 3, 7, 8, 13, 14, 34, 39, 40, 48, 81, 84, 144, 146, 147, 150, 151, 157, 160, 167, 168, 185, 270, 271, 295, 313, 314], "4": [2, 3, 5, 7, 8, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 29, 33, 34, 38, 39, 40, 48, 56, 61, 62, 63, 76, 84, 86, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 114, 115, 121, 126, 128, 130, 136, 137, 138, 139, 140, 144, 146, 147, 149, 150, 151, 157, 159, 160, 165, 166, 168, 171, 173, 175, 176, 179, 181, 182, 186, 199, 200, 221, 222, 223, 224, 226, 227, 236, 237, 238, 240, 242, 243, 245, 247, 248, 250, 253, 255, 257, 261, 262, 263, 264, 271, 273, 275, 276, 277, 280, 285, 286, 288, 289, 291, 292, 293, 298, 302, 304, 314, 320, 328, 330, 349, 350], "785559448716725e": 3, "11": [2, 3, 5, 6, 17, 22, 23, 24, 29, 33, 38, 39, 40, 48, 63, 65, 72, 76, 83, 98, 99, 103, 104, 145, 171, 181, 182, 221, 222, 236, 237, 239, 240, 245, 250, 255, 269, 276, 287, 291, 296, 302, 306, 307, 313, 314, 332, 349], "449304058803827e": 3, "705": [3, 4, 5, 6, 39, 45], "plot_sp_ica_eeg_exampl": [3, 9, 345], "decis": [3, 10, 16, 17, 19, 25, 26, 27, 42, 48, 52, 114, 253, 254, 255, 257, 315, 345, 349, 352, 353, 354], "tree": [3, 10, 16, 17, 19, 25, 26, 27, 42, 48, 52, 114, 253, 254, 257, 304, 315, 345, 349, 352, 353, 354], "visualis": [3, 10, 14, 19, 20, 22, 23, 27, 44, 47, 48, 233, 249, 253, 255, 256, 342, 345], "while": [3, 10, 16, 19, 20, 22, 23, 25, 26, 27, 100, 101, 109, 111, 157, 182, 187, 223, 224, 229, 239, 245, 253, 255, 256, 257, 269, 285, 286, 294, 313, 314, 324, 328, 345], "buid": [3, 10, 19, 20, 22, 23, 25, 26, 27, 253, 345], "dispers": [1, 3, 7, 10, 11, 18, 30, 52, 137, 138, 157, 158, 165, 169, 170, 171, 172, 239, 242, 310, 345, 349, 352, 353, 354], "entropi": [1, 3, 7, 10, 11, 18, 21, 30, 39, 43, 48, 51, 52, 94, 137, 138, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 225, 258, 259, 260, 261, 267, 274, 287, 297, 298, 300, 310, 345, 349, 352, 353, 354], "top": [7, 10, 11, 12, 18, 21, 30, 33, 38, 39, 40, 52, 81, 84, 93, 137, 182, 187, 270, 271, 313, 345], "pattern": [7, 10, 11, 12, 18, 30, 40, 52, 81, 84, 136, 137, 138, 158, 169, 170, 270, 271, 313, 314, 323, 345], "appli": [4, 5, 52, 65, 74, 76, 77, 79, 84, 98, 141, 142, 143, 144, 145, 156, 176, 185, 236, 239, 243, 247, 266, 269, 271, 276, 291, 293, 305, 306, 307, 323], "short": [4, 52, 65, 134, 135, 141, 142, 143, 253, 257, 277, 280, 281, 284, 293, 294, 319, 323, 338, 347, 349], "window": [4, 41, 43, 44, 57, 59, 65, 89, 90, 95, 103, 104, 134, 135, 139, 140, 141, 142, 143, 144, 145, 151, 173, 178, 183, 185, 187, 188, 221, 222, 236, 237, 239, 243, 264, 277, 280, 281, 282, 293, 294, 296, 306, 307, 309, 321, 336, 337, 344], "smaller": [4, 22, 23, 24, 52, 65, 74, 76, 77, 103, 104, 141, 142, 143, 178, 183, 239, 242, 306, 307, 323, 332], "overlap": [4, 8, 41, 43, 44, 65, 89, 90, 140, 141, 142, 143, 144, 151, 173, 277, 280, 281, 289, 293, 294, 296, 307, 309, 336, 337], "after": [4, 22, 23, 24, 29, 65, 76, 141, 142, 143, 176, 221, 222, 236, 237, 238, 239, 242, 243, 253, 254, 255, 257, 288], "check": [4, 33, 34, 58, 59, 65, 67, 136, 141, 142, 143, 145, 147, 150, 151, 157, 159, 160, 167, 168, 177, 221, 222, 234, 236, 237, 239, 245, 253, 256, 257, 258, 266, 291, 307, 313, 314, 323, 324, 349], "_": [2, 4, 7, 12, 13, 17, 30, 74, 76, 77, 96, 142, 144, 151, 199, 200, 223, 235, 236, 237, 238, 241, 242, 243, 245, 249, 263, 269, 285, 288, 313, 314, 332, 353], "soft": [4, 6, 65, 120, 141, 142, 143], "threshold": [4, 5, 6, 20, 39, 65, 81, 84, 91, 97, 120, 141, 142, 143, 145, 173, 239, 241, 242, 244, 253, 254, 262, 270, 271, 277, 280, 288, 291, 292, 305, 306, 307, 323], "lambda_": [4, 65, 141, 142, 143], "quad": [4, 65, 108, 112, 141, 142, 143, 276, 320], "text": [2, 4, 8, 34, 40, 65, 81, 84, 86, 95, 108, 112, 141, 142, 143, 146, 150, 152, 153, 154, 255, 270, 271, 276, 301, 303, 320, 343], "theta_": [4, 65, 141, 142, 143], "gamma": [4, 65, 108, 141, 142, 143, 144, 151, 320], "alpha": [2, 4, 7, 8, 15, 16, 21, 25, 34, 41, 42, 43, 47, 48, 65, 86, 100, 106, 136, 139, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 157, 171, 174, 177, 185, 186, 226, 227, 255, 262, 263, 269, 273, 277, 279, 288, 291, 292, 320, 324, 331, 332, 349], "frac": [4, 26, 65, 74, 77, 106, 107, 108, 110, 112, 141, 142, 143, 256, 295, 314, 320, 324, 332], "e": [4, 52, 65, 67, 75, 80, 105, 106, 107, 108, 109, 110, 111, 112, 133, 139, 140, 141, 142, 143, 144, 146, 147, 152, 153, 154, 157, 159, 167, 168, 169, 172, 221, 228, 229, 236, 237, 239, 245, 248, 258, 272, 273, 280, 291, 292, 306, 313, 314, 320, 323], "otherwis": [4, 65, 141, 142, 143, 170], "le": [4, 65, 141, 142, 143], "lambda_a": [4, 65, 141, 142, 143], "sgn": [4, 65, 141, 142, 143], "big": [4, 65, 141, 142, 143], "beta": [4, 7, 8, 65, 141, 142, 143], "f_": [4, 65, 141, 142, 143], "k_2": [4, 65, 141, 142, 143], "exp": [4, 65, 74, 141, 142, 143, 156, 182, 187, 328, 332], "w_": [4, 65, 141, 142, 143, 305], "max": [4, 7, 8, 15, 16, 21, 40, 65, 74, 76, 77, 81, 84, 88, 137, 138, 141, 142, 143, 157, 167, 222, 223, 224, 239, 242, 244, 245, 249, 253, 254, 270, 271, 285, 286, 287, 290, 295, 306, 307], "ge": [4, 65, 112, 141, 142, 143, 295, 320], "k_1": [4, 65, 141, 142, 143], "g_f": [4, 65, 141, 142, 143], "b_f": [4, 65, 141, 142, 143], "xc1": [4, 141, 142, 143, 145], "ipr": [4, 7, 8, 141, 142, 143, 306, 307], "100": [2, 4, 5, 6, 7, 8, 17, 20, 21, 22, 23, 24, 30, 33, 34, 38, 48, 51, 72, 83, 85, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 122, 124, 126, 127, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 156, 182, 202, 204, 208, 233, 236, 237, 239, 241, 242, 243, 255, 273, 280, 291, 292, 299, 300, 305, 307, 320], "xc2": [4, 141, 142, 143, 145], "xc3": [4, 141, 142, 143, 145], "elim": [4, 6, 7, 8, 52, 141, 142, 143, 306, 307], "2112": [4, 5, 6], "65": [4, 5, 6, 29, 30, 33, 38, 41, 239, 240, 248, 250], "129": [4, 5, 6, 29], "193": [4, 5, 6], "257": [4, 5, 6], "18": [2, 4, 5, 6, 8, 17, 24, 29, 30, 33, 38, 39, 40, 45, 109, 165, 240, 250, 302, 313], "385": [4, 5, 6], "21": [2, 4, 5, 6, 17, 24, 29, 30, 39, 199, 200, 204, 223, 224, 239, 240, 248, 250, 285, 286, 302, 304], "449": [4, 5, 6], "24": [2, 4, 5, 6, 29, 30, 39, 40, 239, 240, 248, 250, 302, 320], "513": [4, 5, 6, 29, 41], "27": [2, 4, 5, 6, 29, 30, 33, 38, 239, 240, 244, 248, 249, 250, 302, 314], "577": [4, 5, 6], "30": [2, 4, 5, 6, 14, 17, 24, 26, 29, 30, 38, 39, 81, 84, 92, 109, 136, 141, 142, 143, 146, 147, 150, 151, 171, 194, 239, 241, 246, 247, 250, 263, 270, 271, 302, 313, 314, 347], "641": [4, 5, 6], "33": [2, 4, 5, 6, 17, 24, 29, 30, 239, 240, 248, 250, 302], "36": [2, 4, 5, 6, 24, 29, 30, 239, 240, 244, 248, 249, 250, 276, 302, 345], "769": [4, 5, 6], "39": [2, 4, 5, 6, 23, 29, 302], "833": [4, 5, 6], "42": [2, 4, 5, 6, 17, 29, 30, 40, 239, 240, 248, 250, 302], "897": [4, 5, 6], "45": [2, 4, 5, 6, 23, 24, 25, 26, 29, 30, 199, 200, 204, 223, 224, 239, 240, 248, 250, 285, 286, 302], "961": [4, 5, 6], "48": [2, 4, 5, 6, 23, 29, 30, 239, 240, 248, 250, 302], "1025": [4, 5, 6, 41], "51": [2, 4, 5, 6, 23, 29, 30, 181, 183, 239, 240, 248, 250, 266, 328], "1089": [4, 5, 6], "54": [2, 4, 5, 6, 29, 30, 239, 240, 248, 250], "1153": [4, 5, 6], "57": [2, 4, 5, 6, 17, 24, 29, 30, 62, 239, 240, 248, 250], "1217": [4, 5, 6], "60": [2, 4, 5, 6, 24, 29, 30, 40, 67, 117, 123, 148, 180, 185, 199, 200, 204, 223, 224, 229, 240, 248, 285, 286], "1281": [4, 5, 6], "63": [4, 5, 6, 24, 29, 30, 75, 80, 239, 240, 248, 250, 272], "1345": [4, 5, 6], "66": [4, 5, 6, 17, 24, 29, 30, 239, 240, 248, 250], "1409": [4, 5, 6], "69": [4, 5, 6, 24, 40], "1473": [4, 5, 6], "72": [4, 5, 6, 29, 30, 239, 240, 248, 250], "1537": [4, 5, 6], "1601": [4, 5, 6], "78": [4, 5, 6, 29, 30, 239, 240, 248, 250], "1665": [4, 5, 6], "81": [4, 5, 6, 24, 52, 323], "1729": [4, 5, 6], "84": [4, 5, 6, 29, 30, 239, 240, 248, 250], "1793": [4, 5, 6], "87": [4, 5, 6, 29, 30, 38, 239, 240, 248, 250], "1857": [4, 5, 6], "90": [4, 5, 6, 15, 17, 24, 33, 38, 141, 142, 143], "1921": [4, 5, 6], "93": [4, 5, 6, 24, 30, 256], "1985": [4, 5, 6], "97": [4, 5, 6], "2049": [4, 5, 6], "2113": [4, 5, 6], "done": [4, 5, 6, 17, 29, 30, 75, 80, 81, 84, 236, 237, 238, 239, 242, 243, 244, 245, 249, 270, 271, 272, 299, 300, 313, 314], "111": 4, "label": [2, 4, 7, 8, 17, 20, 30, 34, 39, 40, 41, 42, 44, 74, 77, 81, 84, 92, 96, 97, 98, 99, 100, 103, 105, 106, 107, 108, 110, 112, 114, 122, 124, 126, 127, 128, 131, 132, 135, 137, 138, 139, 141, 142, 143, 144, 146, 147, 150, 151, 171, 174, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 221, 222, 226, 227, 228, 229, 235, 236, 237, 239, 240, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 264, 265, 269, 270, 271, 276, 278, 279, 280, 281, 289, 305, 307, 314, 320, 332], "raw": [2, 4, 41, 43, 44, 97, 120, 141, 142, 143, 173, 177, 178, 179, 199, 200, 223, 224, 229, 235, 239, 243, 253, 256, 257, 262, 263, 280, 281, 285, 286], "x_": [4, 141, 142, 143, 145, 161, 162, 164, 166, 259, 260, 263, 274, 295, 297, 305, 349], "c1": [4, 74, 77, 97, 128, 139, 141, 142, 143, 145, 262, 263, 265, 276, 289, 302], "c2": [4, 74, 77, 97, 141, 142, 143, 145, 289, 302], "c3": [2, 4, 74, 77, 141, 142, 143, 145, 273, 288, 302], "ylim": [4, 21, 34, 41, 74, 77, 97, 100, 139, 141, 142, 143, 249, 262, 263, 265], "legend": [4, 7, 17, 21, 34, 39, 40, 41, 42, 44, 74, 77, 81, 84, 92, 96, 97, 98, 99, 100, 103, 106, 107, 128, 135, 137, 138, 139, 141, 142, 143, 144, 146, 150, 151, 171, 174, 177, 178, 181, 182, 183, 184, 186, 187, 188, 221, 222, 226, 227, 235, 253, 254, 257, 264, 265, 269, 270, 271, 276, 278, 279, 280, 281, 314, 320, 332], "bbox_to_anchor": [4, 34, 40, 81, 84, 92, 97, 100, 141, 142, 143, 171, 178, 181, 182, 183, 184, 187, 188, 235, 265, 270, 271, 276, 314], "99": [4, 21, 141, 142, 143, 156], "ncol": [4, 7, 39, 141, 142, 143, 144, 151, 171, 314], "fontsiz": [2, 4, 8, 30, 97, 141, 142, 143, 255, 265, 276], "211": [4, 5, 7, 8, 43, 74, 77, 81, 84, 86, 96, 97, 102, 128, 140, 141, 142, 143, 144, 146, 150, 151, 174, 186, 245, 265, 270, 271, 275, 277, 296, 308, 309], "212": [4, 5, 7, 8, 43, 86, 97, 102, 128, 140, 142, 144, 146, 150, 151, 174, 184, 186, 187, 188, 265, 275, 277, 296, 308, 309], "suptitl": [4, 6, 7, 8, 13, 26, 34, 44, 47, 105, 106, 107, 108, 110, 112, 128, 144, 145, 147, 154, 243, 253, 256, 257, 276, 280, 281, 293, 294], "528": [4, 29], "plot_sp_eeg_artifact_removal_atar_algorithm": [4, 9, 345], "wavelet": [4, 12, 13, 16, 53, 58, 60, 89, 90, 91, 105, 106, 107, 108, 109, 110, 111, 112, 119, 141, 142, 143, 179, 305, 306, 307, 308, 309, 339, 345, 349, 352, 353, 354], "criteria": [5, 65, 145, 239, 255], "kurtosi": [5, 65, 145], "mostli": [5, 65, 145, 221, 222, 226, 227, 236, 353], "motion": [5, 65, 145], "kur_thr": [5, 6, 65, 145], "ic": [5, 65, 145], "abov": [5, 34, 52, 65, 78, 136, 141, 142, 143, 145, 239, 241, 242, 245, 276, 288, 323], "As": [5, 65, 67, 145, 222, 239, 242, 246], "higher": [5, 21, 65, 74, 77, 80, 82, 83, 103, 104, 141, 142, 143, 145, 147, 177, 178, 182, 183, 187, 239, 244, 269, 272, 277, 293], "peaki": [5, 65, 145], "correl": [5, 65, 145], "index": [5, 30, 65, 78, 145, 156, 200, 221, 222, 232, 236, 237, 238, 239, 242, 243, 244, 245, 249, 278, 299, 300, 302], "cbi": [5, 65, 145], "ey": [5, 65, 145], "movement": [5, 65, 145], "comparais": [5, 65, 145], "power": [2, 5, 7, 111, 134, 144, 145, 146, 150, 151, 173, 234, 280, 293], "prefront": [5, 65, 145], "electrod": [5, 58, 60, 63, 65, 145, 147, 239, 241, 349], "frontal": [5, 15, 65, 145], "eletrod": [5, 7, 65, 67, 145, 147], "stisfi": [5, 65, 145], "consid": [5, 65, 109, 111, 138, 145, 157, 159, 160, 167, 168, 170, 221, 222, 224, 236, 237, 239, 242, 249, 258, 286, 313, 314, 324], "captur": [5, 52, 65, 97, 145, 178, 183, 277, 323], "blink": [5, 65, 145], "activ": [5, 29, 59, 63, 65, 71, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 145, 221, 222, 236, 237, 239, 241, 242, 243, 246, 249, 276, 349], "af": [5, 65, 145], "first": [5, 12, 13, 20, 24, 26, 43, 58, 65, 100, 101, 145, 156, 157, 229, 239, 245, 256, 276, 288, 313, 314, 324, 352, 353, 354], "layer": [5, 22, 23, 65, 145], "toward": [5, 65, 80, 145, 177, 272], "lobe": [5, 15, 65, 95, 145, 278, 282], "provid": [5, 65, 67, 74, 77, 134, 135, 136, 141, 142, 143, 145, 147, 150, 151, 176, 179, 229, 239, 244, 253, 255, 257, 273, 293, 332], "emotiv": [5, 34, 65, 145, 152, 153, 154], "epoc": [5, 65, 145], "af3": [2, 5, 15, 34, 65, 145, 152, 153, 154, 302], "f7": [2, 5, 15, 34, 65, 145, 152, 153, 154, 302], "f3": [2, 5, 15, 34, 65, 145, 152, 153, 154, 255, 302], "fc5": [2, 5, 15, 34, 65, 145, 152, 153, 154, 302], "t7": [2, 5, 15, 34, 65, 145, 152, 153, 154, 302], "p7": [2, 5, 15, 34, 65, 145, 152, 153, 154], "o1": [2, 5, 15, 34, 65, 145, 152, 153, 154], "o2": [2, 5, 15, 34, 65, 145, 152, 153, 154], "p8": [2, 5, 15, 34, 65, 145, 152, 153, 154], "t8": [2, 5, 15, 34, 65, 145, 152, 153, 154, 302], "fc6": [2, 5, 15, 34, 65, 145, 152, 153, 154, 302], "f4": [2, 5, 15, 34, 65, 145, 152, 153, 154, 302], "f8": [2, 5, 15, 34, 65, 145, 152, 153, 154, 302], "af4": [2, 5, 15, 34, 65, 145, 152, 153, 154, 302], "pre": [5, 65, 145, 147, 221, 236, 237, 291], "fronat": [5, 65, 145], "supli": [5, 65, 145, 150, 151], "af_ch_index": [5, 6, 65, 145], "13": [2, 5, 6, 17, 23, 24, 29, 31, 33, 34, 38, 40, 41, 43, 63, 65, 96, 119, 144, 145, 154, 239, 240, 248, 250, 287, 302, 349], "f_ch_index": [5, 6, 65, 145], "http": [2, 5, 20, 29, 30, 34, 41, 43, 44, 47, 56, 59, 65, 67, 74, 75, 77, 80, 81, 84, 87, 89, 95, 96, 99, 105, 107, 108, 109, 110, 111, 112, 117, 118, 119, 120, 123, 129, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 150, 154, 156, 157, 158, 165, 170, 173, 177, 178, 179, 182, 186, 187, 221, 222, 229, 236, 237, 238, 239, 242, 243, 244, 245, 249, 253, 256, 257, 261, 262, 263, 264, 265, 270, 271, 272, 276, 278, 280, 281, 289, 291, 295, 296, 297, 298, 305, 308, 309, 313, 328, 332, 347, 352, 353, 354], "www": [5, 34, 59, 65, 67, 139, 140, 145, 154, 221, 222, 239, 352, 353, 354], "ncbi": [5, 65, 139, 140, 145, 221, 222], "nlm": [5, 65, 139, 140, 145, 221, 222], "nih": [5, 65, 139, 140, 145, 221, 222], "gov": [5, 65, 139, 140, 145, 221, 222], "pmc": [5, 65, 139, 140, 145, 221, 222], "pmc3812628": [5, 65, 145], "mani": [5, 33, 34, 65, 103, 104, 145, 185, 239, 291, 292, 313], "If": [5, 12, 13, 48, 65, 76, 81, 84, 100, 101, 136, 141, 143, 144, 145, 147, 157, 158, 159, 160, 167, 168, 170, 177, 178, 222, 229, 236, 237, 239, 243, 249, 253, 254, 257, 258, 266, 269, 270, 271, 289], "corr_thr": [5, 6, 65, 145], "80": [5, 17, 21, 24, 29, 34, 40, 65, 86, 145, 154, 178, 181, 183, 262, 263, 291], "elecctrod": [5, 65, 145], "artifactu": [5, 65, 145], "similar": [5, 65, 109, 111, 145, 158, 170, 171, 235, 313, 314, 332], "like": [5, 20, 65, 76, 103, 104, 109, 111, 113, 133, 145, 158, 170, 171, 277, 304, 314], "compar": [5, 6, 12, 13, 16, 17, 65, 113, 137, 138, 145, 157, 174, 226, 309, 314], "ica_filt": [5, 6, 141, 142, 143], "extend": [5, 6, 76, 145, 173, 293], "infomax": [5, 6, 76, 145], "xf1": [2, 5, 7, 181, 183, 328], "xr1": [5, 6], "20": [2, 5, 8, 12, 13, 17, 24, 26, 29, 30, 39, 41, 56, 84, 92, 106, 129, 136, 139, 140, 144, 147, 154, 156, 162, 169, 171, 173, 177, 222, 236, 237, 239, 240, 241, 248, 250, 262, 263, 271, 277, 279, 280, 283, 302, 313, 314, 320, 336, 352, 353, 354], "640": 5, "40": [2, 5, 24, 29, 39, 81, 105, 109, 111, 112, 181, 183, 262, 270, 289, 302, 330], "512": [5, 41, 89, 95, 139, 278, 309], "188": [5, 29], "plot_sp_eeg_artifact_removal_ica": [5, 9, 345], "xr2": 6, "xr3": 6, "xr4": 6, "ica_method": [6, 145], "xr5": 6, "xr6": 6, "sep": [2, 6, 30, 56, 71, 118, 120, 141, 143, 145, 196, 302, 304, 352, 353, 354], "150": [6, 24, 25, 29, 185], "ylabel": [6, 7, 8, 12, 13, 14, 15, 16, 17, 21, 30, 39, 40, 41, 42, 43, 51, 74, 77, 81, 84, 86, 96, 97, 98, 99, 102, 105, 106, 107, 110, 112, 115, 116, 117, 121, 122, 123, 124, 126, 127, 129, 131, 132, 137, 138, 139, 140, 144, 146, 150, 151, 171, 174, 181, 183, 184, 185, 186, 187, 188, 225, 226, 227, 235, 262, 263, 264, 265, 266, 269, 270, 271, 275, 276, 288, 289, 307, 308, 309, 313, 314, 320, 332], "elimin": [6, 65, 120, 141, 142, 143, 306, 307], "linear": [6, 21, 30, 65, 72, 74, 77, 96, 114, 122, 125, 126, 127, 131, 132, 134, 135, 141, 142, 143, 175, 176, 211, 239, 255, 264, 314, 338, 349], "atten": 6, "326": [6, 23, 27, 29], "subplots_adjust": [6, 8, 21, 97, 103, 128, 140, 199, 200, 223, 224, 265, 266, 276, 285, 286], "wspace": [6, 21, 199, 200, 223, 224, 276, 285, 286], "hspace": [6, 8, 21, 97, 103, 128, 140, 199, 200, 223, 224, 265, 266, 276, 285, 286], "201": [6, 29, 30, 239, 277, 278], "plot_sp_eeg_artifact_removal_ica_atar": [6, 9, 345], "mea": [2, 8, 13, 31, 41, 42, 43, 58, 60, 63, 136, 221, 222, 229, 273, 345, 349, 352, 354], "step": [8, 10, 13, 28, 29, 31, 63, 108, 136, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 313, 320, 324, 345, 349, 353], "them": [7, 54, 100, 101, 109, 147, 239, 313], "averag": [7, 29, 39, 63, 81, 84, 93, 146, 150, 151, 176, 223, 224, 235, 236, 237, 239, 242, 243, 244, 264, 270, 271, 273, 285, 286, 332, 349], "delta": [7, 144, 146, 147, 150, 151, 178, 183, 300], "frequenc": [7, 40, 41, 43, 51, 67, 87, 88, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 118, 119, 120, 134, 137, 138, 139, 140, 144, 146, 150, 151, 157, 159, 160, 167, 168, 171, 173, 177, 179, 180, 185, 221, 222, 225, 228, 229, 236, 237, 238, 239, 242, 243, 244, 245, 249, 258, 263, 264, 277, 280, 281, 282, 283, 284, 293, 294, 305, 314, 324, 330], "hz": [2, 7, 8, 41, 43, 44, 67, 88, 139, 140, 144, 147, 151, 173, 239, 262, 263, 264, 280, 281, 293, 294, 320], "non": [7, 13, 47, 74, 77, 94, 96, 158, 170, 178, 179, 182, 183, 187, 313, 314, 328, 338, 349], "stimuli": [7, 238, 239, 244, 245], "ph": 7, "subject": 7, "dirpath": 7, "download_data": 7, "basedir": 7, "overwrit": 7, "fals": [2, 7, 8, 12, 16, 21, 22, 23, 24, 25, 26, 29, 30, 34, 39, 40, 41, 44, 48, 52, 74, 76, 77, 78, 80, 81, 84, 89, 91, 92, 97, 98, 101, 103, 109, 111, 113, 114, 122, 124, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 159, 160, 165, 166, 167, 168, 169, 171, 172, 173, 176, 177, 178, 179, 193, 198, 199, 200, 204, 217, 218, 220, 222, 223, 224, 225, 228, 229, 236, 237, 238, 239, 241, 242, 243, 244, 245, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 261, 264, 265, 266, 269, 270, 271, 272, 274, 276, 280, 281, 285, 286, 287, 288, 289, 291, 292, 293, 295, 299, 304, 305, 306, 307, 308, 309, 313, 314, 323, 324, 336], "subid": 7, "readfilespath": 7, "subj": 7, "filter_eeg": 7, "order": [7, 59, 86, 103, 104, 118, 130, 141, 142, 143, 144, 146, 150, 151, 152, 153, 154, 157, 161, 162, 164, 166, 169, 172, 178, 179, 180, 182, 183, 185, 187, 200, 221, 222, 223, 224, 236, 237, 250, 259, 260, 261, 285, 286, 297, 298, 304, 330, 339, 343, 349], "est_wmax": [7, 141, 142, 143], "listen": [7, 43], "l": [7, 34, 40, 47, 52, 80, 86, 91, 106, 139, 154, 262, 263, 269, 272, 276, 288, 289, 299, 300, 305, 323, 332], "col": [7, 247], "getlwr": 7, "sem": [7, 47], "arrai": [7, 13, 17, 20, 26, 30, 31, 58, 60, 63, 74, 76, 77, 78, 79, 81, 84, 85, 86, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 199, 221, 222, 223, 224, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 269, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 305, 306, 307, 308, 309, 313, 314, 324, 345, 349], "32": [2, 7, 8, 29, 30, 41, 95, 144, 151, 177, 179, 239, 240, 248, 250, 302, 337], "len": [7, 12, 13, 15, 17, 21, 30, 34, 39, 40, 41, 43, 44, 51, 52, 74, 77, 81, 84, 86, 89, 94, 96, 97, 98, 99, 100, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 121, 123, 128, 129, 134, 135, 137, 138, 139, 140, 146, 150, 152, 153, 154, 158, 165, 169, 170, 171, 172, 173, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 221, 222, 235, 245, 248, 263, 265, 266, 269, 270, 271, 275, 276, 277, 279, 280, 281, 288, 293, 294, 305, 307, 308, 309, 313, 314, 320, 321, 323, 324, 328, 331, 332, 337], "idx0": 7, "idx1": [7, 288], "e0": 7, "astyp": [7, 13, 41, 43, 47, 100, 136, 176, 233, 273], "e1": [7, 169, 314], "segmnt": 7, "144": [7, 85, 104], "write": [2, 7, 29, 30, 41, 43, 44, 173, 229, 233, 236, 237, 238, 239, 242, 243, 244, 245, 249, 262, 263, 280, 281, 341, 347, 349], "rest": 7, "score": [7, 23], "xf0": 7, "pm": [2, 7, 8, 34, 146, 147, 150, 265], "rhythmic_pow": [2, 7, 8, 34, 146, 147, 151], "fband": [2, 7, 8, 34, 144, 146, 147, 150, 151], "true": [2, 7, 8, 12, 13, 14, 16, 22, 23, 24, 25, 29, 30, 34, 39, 40, 41, 43, 44, 47, 48, 51, 52, 59, 72, 74, 77, 78, 79, 81, 84, 85, 89, 90, 91, 92, 98, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 122, 124, 126, 127, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 177, 178, 195, 196, 197, 198, 199, 200, 206, 213, 217, 218, 223, 224, 225, 236, 237, 238, 239, 241, 242, 243, 244, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 280, 281, 285, 286, 288, 289, 290, 291, 292, 293, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 313, 314, 319, 320, 323], "sd": [2, 7, 8, 17, 34, 78, 146, 147, 150, 151, 239, 242, 253, 254, 257, 287, 288, 290, 306, 307, 314, 323], "append": [7, 17, 30, 247, 313, 314], "m1": [7, 269, 332], "m2": [7, 269, 332], "fig": [2, 7, 8, 13, 26, 30, 34, 39, 44, 136, 147, 173, 199, 200, 204, 223, 224, 236, 253, 254, 255, 256, 257, 280, 281, 285, 286, 289, 293, 294], "ax": [2, 7, 8, 21, 25, 30, 34, 39, 47, 136, 147, 148, 155, 199, 200, 204, 223, 224, 236, 241, 246, 247, 250, 253, 254, 255, 257, 285, 286, 289], "stat": [7, 47, 48, 220, 352, 354], "plot_groups_box": [7, 47, 342], "ylab": [7, 47, 289], "strip_kw": [7, 47, 289], "dict": [7, 30, 47, 76, 136, 137, 147, 150, 151, 185, 198, 199, 200, 228, 239, 241, 253, 254, 256, 257, 289, 304], "color": [2, 7, 8, 30, 34, 44, 47, 74, 77, 86, 97, 100, 106, 128, 136, 139, 147, 148, 154, 221, 222, 239, 249, 262, 263, 265, 276, 280, 281, 288, 289, 299, 300, 301, 303, 343], "semat": 7, "set_ylim": [7, 44, 47, 199, 200, 204, 223, 224, 280, 281, 285, 286], "acit": 7, "bar": [7, 14, 15, 24, 146, 150, 299, 300, 343], "yerr": 7, "std": [7, 17, 158, 170, 223, 224, 255, 285, 286, 314], "sqrt": [7, 52, 92, 94, 106, 112, 269, 306, 307, 320, 323], "77": [7, 29, 30, 239, 240, 248, 250], "xtick": [7, 13, 15, 21, 22, 23, 30, 86, 97, 144, 146, 150, 185, 245, 265, 276, 313], "loc": [7, 29, 30, 42, 67, 98, 99, 103, 128, 137, 138, 171, 174, 186, 221, 222, 226, 227, 236, 237, 238, 239, 242, 243, 245, 314], "44": [2, 7, 23, 29, 30, 239, 240, 248, 250, 302], "814": 7, "plot_sp_eeg_rhythmic_featur": [7, 9, 345], "attent": [7, 8, 10, 25, 30, 38, 40, 44, 46, 48, 49, 289, 345], "group": [7, 8, 10, 17, 21, 25, 30, 38, 40, 44, 46, 49, 289, 291, 292, 341, 345, 349], "approxim": [7, 10, 11, 14, 18, 21, 48, 76, 137, 138, 157, 158, 165, 169, 170, 171, 172, 300, 345, 349], "comparison": [7, 10, 11, 14, 18, 21, 48, 146, 150, 158, 170, 300, 314, 345], "log10": [2, 8, 34, 51, 139, 144, 147, 151, 262, 263], "pmt": [8, 151], "rhythmic_powers_win": [8, 144, 150, 352, 354], "64": [8, 24, 26, 29, 30, 38, 89, 90, 144, 147, 148, 155, 239, 240, 248, 250, 278, 307], "z1": [2, 8, 166, 261, 298], "im1": [2, 8, 34, 147], "shownam": [2, 8, 147, 148, 155], "return_im": [2, 8, 34, 147], "z2": 8, "im2": [8, 34, 147], "set_titl": [2, 8, 30, 34, 147, 199, 200, 204, 223, 224, 236, 285, 286], "colorbar": [2, 8, 15, 30, 34, 39, 40, 81, 84, 136, 147, 246, 247, 248, 270, 271], "db": [2, 8, 34, 41, 47, 92, 134, 135, 139, 144, 147, 151, 173, 177, 262, 263, 277, 280], "style": [8, 34, 141, 142, 143, 144, 147, 154, 239, 289, 299, 300, 304], "eeglab": [8, 34, 147, 154], "mne": [8, 34, 147, 154], "t1": [8, 185, 222, 235, 236, 237, 239, 245, 249], "t2": [8, 185, 245], "vline": [8, 34, 100, 262, 263], "ymin": [8, 34, 100, 262, 263], "min": [8, 21, 157, 221, 222, 223, 224, 236, 237, 239, 244, 249, 251, 252, 258, 285, 286, 287, 290, 295, 314], "ymax": [8, 34, 100, 262, 263], "k": [2, 8, 13, 21, 30, 34, 41, 43, 44, 52, 78, 86, 89, 94, 106, 136, 147, 148, 154, 200, 223, 239, 251, 252, 262, 263, 276, 280, 281, 285, 288, 289, 305, 306, 307, 308, 309, 313, 323], "ha": [2, 8, 34, 152, 153, 154, 157, 158, 170, 193, 221, 227, 236, 237, 239, 242, 249, 269, 276, 304, 314], "center": [2, 8, 34, 105, 106, 107, 108, 109, 110, 111, 112, 136, 147, 152, 153, 154, 201, 320], "vmin": [8, 30, 136, 147, 148, 155, 241, 246, 247, 248], "vmax": [8, 30, 136, 147, 148, 155, 236, 237, 241, 246, 247, 248], "829": 8, "plot_sp_eeg_topomap": [8, 9, 345], "sinusoid": [10, 14, 16, 17, 21, 25, 29, 34, 37, 41, 42, 45, 47, 51, 72, 114, 122, 124, 126, 127, 132, 171, 280, 281, 283, 284, 293, 314, 319, 320, 337, 338, 345, 349, 352, 353, 354], "synthesi": [10, 14, 16, 17, 25, 29, 33, 34, 37, 42, 45, 47, 51, 134, 135, 186, 227, 277, 280, 281, 293, 294, 319, 338, 345, 349], "702": [], "execut": [9, 18, 27, 31, 35, 36, 45, 49, 53, 136, 248, 249, 305, 314, 345], "file": [0, 5, 6, 7, 8, 9, 10, 13, 18, 27, 29, 31, 34, 35, 36, 41, 45, 49, 53, 63, 147, 150, 152, 153, 154, 179, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 242, 243, 244, 245, 249, 302, 341, 345, 349], "auto_exampl": [9, 18, 27, 31, 35, 36, 45, 49, 53, 67, 239], "electroencephalogram": [9, 345], "mem": [9, 18, 27, 31, 35, 36, 45, 49, 53, 345], "mb": [9, 18, 27, 31, 35, 36, 45, 49, 53, 345], "00": [9, 18, 26, 27, 29, 31, 35, 36, 45, 49, 53, 345], "09": [24, 26], "04": [17, 24, 26, 27, 29, 30, 35, 217, 314], "minim": [2, 10, 21, 28, 30, 31, 41, 42, 43, 67, 80, 239, 272, 313, 345], "set": [2, 10, 22, 23, 24, 26, 28, 30, 31, 41, 42, 43, 47, 51, 52, 58, 59, 67, 68, 76, 81, 84, 100, 101, 109, 114, 136, 141, 142, 143, 145, 147, 150, 151, 154, 157, 177, 185, 228, 229, 239, 242, 246, 247, 248, 253, 254, 255, 256, 257, 270, 271, 276, 277, 289, 314, 320, 323, 345], "These": [10, 32, 136], "illustr": [10, 32, 245], "about": [10, 11, 19, 37, 46, 50, 291], "embed": [1, 3, 10, 11, 13, 18, 52, 86, 102, 137, 138, 158, 169, 170, 172, 275, 314, 345], "dim": [1, 3, 10, 11, 13, 18, 52, 137, 345], "discreet": [10, 11, 15, 16, 17, 18, 39, 43, 134, 135, 157, 269, 277, 280, 281, 293, 294, 319, 332, 340, 345, 349], "real": [10, 11, 14, 15, 18, 41, 42, 52, 58, 69, 94, 95, 105, 106, 107, 108, 110, 112, 157, 159, 160, 167, 168, 174, 186, 225, 226, 227, 258, 279, 320, 345, 349], "classif": [10, 17, 19, 20, 23, 24, 25, 27, 42, 48, 114, 253, 254, 255, 257, 315, 345, 347, 349], "depth": [10, 17, 19, 20, 22, 23, 24, 27, 42, 48, 114, 198, 253, 254, 257, 345, 352, 353, 354], "boundari": [10, 17, 19, 20, 23, 27, 34, 42, 48, 97, 100, 101, 114, 124, 147, 176, 249, 253, 255, 279, 345], "shrink": [10, 19, 20, 21, 24, 25, 26, 27, 253, 254, 257, 345], "capabl": [10, 19, 20, 21, 24, 25, 26, 27, 253, 257, 345], "regress": [10, 19, 20, 21, 22, 24, 26, 27, 44, 47, 48, 253, 254, 255, 257, 315, 345, 347, 349, 352, 353, 354], "without": [10, 16, 19, 21, 22, 23, 24, 26, 27, 40, 52, 85, 100, 101, 147, 248, 253, 264, 345], "convert": [10, 16, 19, 21, 22, 23, 24, 26, 27, 52, 93, 236, 237, 239, 253, 255, 313, 345], "catogor": [10, 16, 19, 21, 22, 23, 24, 26, 27, 52, 253, 254, 345], "logist": [10, 19, 22, 24, 26, 27, 44, 47, 48, 255, 315, 345, 349, 352, 353, 354], "naiv": [10, 14, 19, 20, 22, 23, 24, 25, 27, 256, 315, 345, 349, 352, 353, 354], "bay": [10, 14, 19, 20, 22, 23, 24, 25, 27, 256, 315, 345, 349, 352, 353, 354], "classifi": [10, 14, 19, 20, 21, 22, 23, 24, 25, 27, 255, 256, 345], "fraction": [10, 30, 33, 37, 45, 134, 135, 174, 186, 226, 227, 239, 242, 277, 280, 281, 293, 294, 319, 338, 345, 349, 352, 353, 354], "fourier": [10, 33, 37, 45, 134, 135, 174, 186, 226, 227, 277, 280, 281, 293, 294, 319, 338, 345, 349, 352, 353, 354], "frft": [10, 33, 37, 45, 134, 135, 174, 226, 227, 277, 280, 281, 293, 294, 331, 345], "ramanujan": [10, 14, 37, 45, 47, 51, 75, 80, 81, 82, 83, 84, 92, 270, 271, 272, 338, 345, 349, 352, 353, 354], "dictionari": [10, 33, 37, 38, 39, 45, 75, 80, 92, 120, 130, 137, 185, 198, 199, 200, 253, 254, 257, 270, 272, 304, 313, 345], "spars": [10, 33, 37, 38, 39, 45, 92, 270, 272, 345], "penalti": [10, 25, 33, 37, 38, 39, 45, 80, 81, 84, 92, 255, 270, 271, 272, 345, 352, 353, 354], "bank": [10, 14, 33, 37, 40, 45, 47, 51, 81, 82, 83, 84, 92, 270, 271, 345, 352, 353, 354], "demo": [10, 33, 37, 39, 40, 45, 47, 345], "audio": [10, 25, 37, 42, 45, 47, 51, 262, 263, 280, 281, 293, 336, 337, 345], "test": [10, 17, 20, 21, 22, 23, 24, 25, 26, 46, 47, 49, 54, 62, 79, 245, 253, 254, 256, 257, 266, 291, 292, 306, 307, 341, 345, 347, 349], "two": [10, 15, 16, 17, 21, 24, 46, 47, 49, 52, 67, 71, 87, 88, 114, 117, 122, 123, 124, 127, 128, 129, 131, 132, 136, 141, 142, 143, 157, 158, 170, 176, 179, 234, 239, 241, 243, 248, 251, 253, 254, 269, 273, 291, 292, 293, 314, 323, 341, 345, 349], "scalogram": [10, 15, 39, 40, 41, 43, 44, 50, 53, 109, 111, 113, 345, 352, 353, 354], "cwt": [10, 15, 39, 40, 41, 43, 44, 50, 53, 89, 305, 309, 320, 345, 352, 353, 354], "auto_examples_python": 10, "zip": [10, 106], "auto_examples_jupyt": 10, "discretis": [12, 13], "extract": [12, 13, 20, 29, 63, 86, 102, 147, 158, 169, 170, 228, 238, 239, 242, 243, 245, 253, 254, 257, 275, 313, 314, 349], "dimens": [12, 13, 79, 86, 102, 137, 138, 158, 165, 169, 170, 172, 191, 274, 275, 314], "ditrubut": [12, 13], "determin": [12, 13, 158, 170, 239, 245, 292, 314], "have": [12, 13, 43, 48, 52, 65, 68, 74, 77, 114, 133, 135, 141, 142, 143, 171, 223, 224, 238, 239, 241, 243, 256, 277, 285, 286, 289, 313, 314, 323, 332, 347, 353], "few": [12, 13, 20, 52, 59, 71, 109, 222, 239, 242, 244, 249, 323], "repetit": [12, 13], "other": [12, 13, 52, 59, 94, 100, 101, 108, 109, 111, 114, 135, 136, 139, 140, 147, 150, 151, 157, 178, 183, 185, 186, 226, 227, 228, 238, 239, 242, 243, 245, 276, 277, 289, 313, 314, 320, 323, 330], "random": [12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 34, 39, 40, 48, 72, 75, 76, 80, 81, 82, 83, 84, 92, 93, 94, 98, 100, 101, 103, 104, 109, 114, 122, 124, 126, 127, 131, 132, 136, 137, 138, 157, 158, 160, 165, 168, 169, 170, 171, 172, 176, 182, 199, 200, 204, 223, 224, 233, 235, 253, 255, 256, 257, 258, 270, 271, 272, 273, 285, 286, 287, 288, 289, 290, 291, 292, 307, 313, 314, 332], "entail": [12, 13, 136, 242], "low": [12, 13, 74, 77, 97, 137, 139, 140, 235, 239, 242, 243, 313, 320, 324], "On": [12, 13], "hand": [12, 13], "lead": [12, 13, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 222, 229, 239, 242, 253, 254, 313, 314], "diment": [12, 13, 80, 161, 162, 163, 164, 166, 193, 199, 200, 259, 260, 261, 272, 297, 298], "disperss": [12, 13], "271749287746759": [12, 313], "load": [12, 13, 24, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129], "bandpass": [12, 13, 179, 313, 320, 339, 349], "de": [12, 13, 100, 101, 133, 137, 138, 349], "prob": [12, 13, 14, 16, 137, 138, 313], "patterns_dict": [12, 13, 137, 138, 313], "dispersion_entropi": [12, 13, 138, 157, 158, 165, 169, 170, 171, 172, 313], "class": [12, 13, 20, 22, 25, 26, 68, 76, 79, 114, 122, 124, 126, 127, 131, 132, 137, 138, 189, 190, 253, 254, 255, 256, 257, 301, 303, 304, 313, 352, 353, 354], "scale": [12, 13, 24, 30, 105, 106, 107, 108, 109, 111, 112, 133, 134, 135, 136, 137, 138, 146, 147, 150, 151, 229, 235, 239, 253, 254, 257, 264, 268, 269, 332, 349], "emb_dim": [12, 13, 102, 137, 138, 161, 162, 163, 164, 165, 166, 259, 260, 261, 274, 275, 297, 298, 313], "delai": [12, 13, 86, 102, 137, 138, 161, 162, 163, 164, 165, 166, 169, 172, 177, 179, 259, 260, 261, 274, 275, 297, 298, 313, 314], "return_al": [12, 13, 48, 137, 138, 218, 229, 291, 292, 313], "stem": [12, 13, 39, 40, 81, 84, 270, 271, 313], "probabl": [12, 13, 16, 26, 114, 137, 138, 157, 159, 160, 167, 168, 225, 253, 254, 255, 256, 257, 258, 313, 314, 320, 352, 353, 354], "4f": [12, 269, 332], "util": [2, 12, 17, 60, 314, 349], "pretty_print": [2, 12, 343], "show_index": [12, 302], "155": [12, 29], "plot_it_dispersion_entropy_eeg_emb2": [12, 18, 345], "xi": [13, 176, 288, 313], "pp": [13, 52, 75, 76, 80, 272, 313, 323], "idx": [13, 74, 77, 78, 84, 86, 156, 182, 253, 256, 257, 271, 288, 313], "argsort": [13, 39, 40, 74, 77, 81, 84, 270, 271, 313], "ptop": [13, 313], "idx2": [13, 288, 313], "ab": [13, 23, 40, 42, 51, 74, 77, 89, 100, 105, 106, 107, 108, 110, 112, 174, 176, 186, 226, 227, 257, 306, 307, 308, 309, 313, 320], "int": [2, 13, 15, 16, 34, 39, 40, 76, 81, 82, 83, 84, 86, 89, 95, 97, 102, 103, 104, 108, 109, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 134, 135, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 156, 157, 158, 159, 160, 165, 167, 168, 169, 170, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 200, 204, 221, 222, 225, 228, 229, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 249, 253, 254, 255, 256, 257, 258, 263, 265, 266, 269, 270, 271, 275, 276, 277, 287, 291, 292, 293, 294, 296, 299, 300, 302, 305, 306, 307, 308, 309, 323, 328], "uniqu": [13, 14, 21, 137, 138, 157, 159, 160, 167, 168, 253, 254, 258, 314], "flat": [13, 103, 104, 171, 178, 182, 183, 187], "4497910281190167": 13, "585": 13, "plot_it_dispersion_entropy_top_pattern": [13, 18, 345], "variabl": [14, 94, 176, 314], "seed": [14, 17, 20, 21, 22, 23, 24, 25, 33, 34, 38, 40, 48, 72, 81, 82, 83, 84, 92, 93, 94, 98, 99, 100, 101, 103, 104, 122, 124, 126, 127, 131, 136, 137, 138, 157, 160, 168, 171, 176, 177, 178, 182, 199, 200, 204, 223, 224, 240, 241, 246, 247, 248, 250, 253, 255, 256, 257, 258, 270, 271, 273, 279, 285, 286, 288, 289, 291, 292, 306, 307, 313, 314, 324], "rand": [14, 16, 17, 34, 100, 101, 136, 157, 176, 273, 289, 292, 314], "hx": [14, 169, 172, 314], "is_discret": [14, 157, 159, 160, 167, 168, 258, 314], "x_u": 14, "frq": [14, 139, 264], "return_count": 14, "p": [14, 17, 26, 48, 75, 76, 80, 81, 84, 96, 108, 156, 157, 165, 167, 182, 184, 187, 188, 205, 206, 207, 213, 214, 256, 266, 270, 271, 272, 291, 292, 313, 314, 320, 328, 332], "h": [14, 15, 16, 137, 138, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 171, 258, 260, 261, 274, 297, 298, 313, 349, 353], "bit": [14, 15, 16, 157, 159, 167, 168, 171, 258, 314], "050": 14, "plot_it_entropy_discreet_exampl": [14, 18, 345], "mutual": [15, 159, 160, 167, 168, 258, 259, 260, 274, 349, 352, 353, 354], "inform": [15, 58, 60, 76, 97, 120, 136, 159, 160, 161, 162, 165, 167, 168, 228, 229, 238, 239, 241, 244, 245, 258, 259, 260, 274, 324, 349, 352, 353, 354], "joint": [15, 159, 160, 163, 164, 167, 168, 258, 259, 260, 274, 349, 352, 353, 354], "cross": [15, 34, 59, 94, 159, 160, 167, 168, 242, 258, 349], "kl": [15, 159, 160, 167, 168, 258, 349], "diverg": [15, 168, 349], "among": [15, 253, 254, 257], "select": [2, 15, 29, 52, 63, 88, 108, 114, 137, 173, 236, 237, 239, 242, 243, 253, 254, 280, 323, 330, 349], "occipit": 15, "shannan": [15, 16, 157, 314], "9573307496464665": 15, "697278111823318": 15, "r\u00e9nyi": [15, 16, 157, 349], "375932807816424": 15, "145472461333239": 15, "750169316339896": 15, "2071614333065703": 15, "condit": [15, 67, 100, 101, 159, 160, 161, 162, 163, 164, 166, 167, 168, 258, 261, 274, 297, 298, 349, 352, 353, 354], "4901166785167455": 15, "732514591834208": 15, "kullback": [15, 168, 314], "leibler": [15, 168, 314], "dkl": 15, "7751838421877422": 15, "nc": [15, 152, 153, 154, 193, 256], "bin": [15, 16, 59, 94, 95, 157, 159, 160, 167, 168, 225, 258, 268, 269], "bin_width": [15, 16, 157, 159, 160, 167, 168, 258], "h_x1": [15, 158, 169, 170, 172, 314], "h_x2": [15, 158, 169, 170, 172, 314], "hr_x1": 15, "hr_x2": 15, "h_x12": 15, "entropy_joint": [15, 159, 160, 168, 258, 314, 352, 353, 354], "entropy_cond": [15, 160, 167, 168, 258, 314, 352, 353, 354], "h_x21": 15, "i_x12": 15, "mutual_info": [15, 159, 160, 167, 168, 314, 352, 353, 354], "h_x12_cross": 15, "entropy_cross": [15, 159, 167, 168, 258, 314, 352, 353, 354], "diff": [15, 48, 276], "d_x12": 15, "entropy_kld": [15, 159, 160, 167, 258, 314, 352, 353, 354], "h_x": [15, 16, 157, 159, 160, 165, 168, 274, 314], "mi": 15, "je": 15, "ce": 15, "j": [15, 52, 76, 106, 107, 112, 141, 143, 144, 193, 265, 320, 323], "x2": [15, 17, 21, 48, 74, 77, 81, 84, 94, 103, 122, 124, 126, 127, 131, 132, 158, 169, 170, 171, 172, 179, 211, 225, 270, 271, 289, 291, 292, 295, 314], "mi_d": 15, "diag": 15, "221": [15, 25, 29, 105, 106, 107, 108, 110, 112, 145], "imshow": [15, 26, 30, 39, 40, 41, 43, 44, 51, 81, 84, 85, 104, 144, 147, 270, 271, 280, 281, 293, 294, 308, 309], "origin": [15, 29, 30, 41, 43, 44, 51, 97, 135, 147, 176, 182, 187, 241, 266, 269, 277, 280, 281, 293, 294, 305, 313, 328], "lower": [15, 21, 41, 43, 44, 51, 52, 78, 80, 97, 109, 117, 123, 129, 141, 142, 143, 147, 239, 242, 244, 254, 272, 277, 280, 281, 288, 293, 294, 323], "rotat": [15, 114, 127, 215, 276], "222": [15, 25, 105, 106, 107, 108, 110, 112, 145], "223": [15, 25, 74, 77, 81, 84, 96, 105, 106, 107, 108, 110, 112, 141, 143, 145, 245, 270, 271], "224": [15, 25, 74, 77, 81, 84, 96, 105, 106, 107, 108, 110, 112, 141, 143, 145, 270, 271], "022": 15, "plot_it_entropy_eeg_multi_channel": [15, 18, 345], "estim": [16, 26, 52, 75, 76, 80, 81, 84, 94, 136, 157, 159, 160, 165, 167, 168, 176, 239, 242, 258, 269, 270, 271, 272, 313, 314, 323, 352, 353, 354], "distribut": [16, 26, 48, 59, 74, 77, 96, 114, 127, 137, 138, 144, 165, 171, 256, 269, 313, 314, 320, 332], "do": [16, 20, 48], "lot": 16, "number": [16, 20, 22, 23, 24, 29, 30, 39, 75, 76, 79, 81, 84, 89, 94, 103, 104, 109, 114, 115, 116, 117, 119, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 137, 138, 141, 142, 143, 144, 146, 147, 150, 151, 157, 159, 160, 167, 168, 176, 178, 179, 183, 185, 193, 200, 225, 228, 229, 232, 236, 237, 238, 239, 242, 243, 244, 245, 248, 249, 253, 254, 255, 256, 257, 258, 269, 270, 271, 277, 280, 281, 284, 287, 289, 290, 291, 292, 293, 294, 299, 300, 302, 305, 309, 313, 323], "discreetis": 16, "fairli": 16, "either": [16, 147, 229, 239, 244, 269, 332], "normalis": [16, 100, 101, 133, 144, 157, 166, 169, 171, 172, 295, 314], "enforc": [16, 157, 160, 168, 239, 277], "equal": [16, 20, 48, 76, 114, 147, 221, 222, 236, 237, 238, 266, 269, 305], "both": [16, 136, 159, 160, 167, 168, 171, 176, 236, 239, 258, 314], "458295645225287": [], "y": [16, 20, 21, 22, 23, 24, 25, 26, 34, 39, 40, 41, 72, 74, 77, 81, 84, 92, 95, 96, 98, 99, 100, 101, 114, 122, 124, 126, 127, 131, 132, 135, 147, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 174, 175, 177, 178, 181, 182, 183, 184, 185, 186, 199, 200, 204, 223, 224, 226, 227, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 267, 269, 270, 271, 274, 277, 278, 279, 281, 282, 285, 286, 294, 297, 298, 321, 324, 331, 332, 337, 349], "0568007770298": [], "9997452649778813": [], "8492835159311757": [], "un": [16, 133, 176], "94931580038085": [], "9443311905007485": [], "83432402148744": [], "user": [51, 60, 68], "nikeshbajaj": [41, 47, 51], "cloudstorag": 51, "onedr": 51, "queenmari": 51, "universityoflondon": 51, "github": [2, 20, 29, 30, 41, 43, 44, 47, 51, 56, 87, 117, 118, 119, 120, 123, 129, 165, 173, 229, 236, 237, 238, 239, 242, 243, 244, 245, 249, 253, 256, 257, 262, 263, 280, 281, 313], "git3": 51, "dev": [51, 241], "spkit_dev": 51, "spkit_doc_7": 51, "information_theori": [18, 157, 345], "plot_it_entropy_real_valued_exampl": [16, 18, 345], "61": [17, 29, 30, 33, 38, 239, 240, 248, 250], "deprecationwarn": [2, 51], "function": [51, 54, 59, 65, 67, 71, 74, 77, 96, 105, 106, 107, 108, 109, 110, 111, 112, 113, 135, 139, 140, 141, 142, 143, 176, 179, 182, 187, 221, 222, 223, 224, 228, 229, 236, 237, 239, 244, 245, 253, 254, 255, 257, 264, 269, 276, 278, 285, 286, 288, 306, 314, 328, 332, 342, 349, 352, 353, 354], "histplot": [], "deprec": [51, 146, 152, 153, 154], "futur": [51, 80, 81, 84], "name": [20, 26, 29, 51, 109, 116, 118, 120, 147, 152, 153, 154, 220, 228, 230, 232, 233, 239, 242, 253, 254, 257, 287, 289, 290], "consist": [228, 353], "pleas": [33, 34, 51, 68, 349], "hist_plot": [16, 74, 77, 94, 96], "updat": [51, 59, 68, 80, 81, 84, 146, 253, 254, 255, 257, 349, 352, 353, 354], "improv": [51, 79, 94, 173, 239, 293, 309, 314], "10000": [16, 44, 137, 138, 157, 255, 280, 281, 314], "randn": [16, 17, 25, 39, 40, 48, 81, 84, 93, 94, 100, 109, 136, 157, 158, 165, 169, 170, 171, 172, 176, 199, 200, 204, 223, 224, 233, 235, 255, 258, 270, 271, 273, 285, 286, 287, 288, 289, 290, 291, 292, 307, 313, 314, 332], "h_y": [16, 157, 314], "hn_x": [16, 157, 314], "normal": [16, 48, 76, 81, 84, 94, 134, 137, 138, 157, 165, 166, 169, 171, 172, 255, 270, 271, 274, 291, 313, 314], "hn_y": [16, 157, 314], "hf_x": 16, "hf_y": 16, "hr_x": 16, "hr_y": 16, "norm": [16, 40, 136, 225], "u": [16, 17, 20, 21, 59, 85, 108, 314, 320], "125": [], "emtropi": 17, "23429427895105137": 17, "5921334630488566": 17, "6720444345470105": 17, "23462714901066314": 17, "1931512519485836": 17, "24992380933707": 17, "aproxim": [17, 313, 314, 352, 353, 354], "x3": [17, 81, 84, 103, 179, 270, 271, 289, 292, 314], "approx": [17, 314], "0331743999999958": 17, "011493672547972069": 17, "04396960000000263": 17, "239610381009533e": 17, "05": [17, 21, 24, 26, 27, 39, 45, 48, 79, 100, 101, 133, 152, 176, 273, 276, 287, 291, 292, 314], "19": [2, 17, 26, 29, 30, 56, 61, 62, 240, 250, 302, 352, 353, 354], "23": [2, 17, 24, 27, 29, 30, 39, 62, 239, 240, 244, 248, 249, 250, 302, 313], "28": [2, 17, 23, 29, 30, 33, 38, 39, 40, 239, 240, 242, 244, 248, 249, 250, 302], "38": [2, 17, 29, 30, 39, 40, 239, 240, 248, 250, 302], "47": [2, 17, 29, 30, 86, 144, 146, 150, 151, 239, 240, 248, 250, 302], "52": [2, 17, 23, 29, 30, 33, 38, 239, 240, 248, 250], "71": [17, 29, 30, 33, 38, 40, 239, 240, 248, 250], "76": [17, 24, 29, 30, 239, 240, 248, 250], "17": [2, 17, 24, 29, 30, 33, 38, 39, 62, 144, 169, 239, 240, 248, 250, 302], "95": [17, 217], "1000": [17, 25, 30, 47, 74, 77, 96, 171, 177, 178, 180, 221, 222, 229, 235, 236, 237, 238, 239, 243, 244, 255, 258, 269, 287, 288, 290, 306, 307, 314, 324, 332], "co": [17, 42, 92, 94, 109, 171, 174, 186, 193, 226, 227, 314, 320], "pi": [17, 42, 92, 94, 97, 106, 107, 108, 109, 110, 112, 140, 158, 169, 170, 171, 172, 174, 186, 226, 227, 265, 320, 349], "131": [17, 34, 101, 176], "mathcal": [17, 314], "sin": [17, 44, 109, 114, 132, 140, 158, 169, 170, 172, 280, 281, 314], "132": [17, 34, 101, 176], "133": [17, 22, 23, 34, 101, 176], "hx1_apx": [17, 314], "entropy_approx": [17, 137, 138, 157, 165, 169, 170, 171, 172, 314, 352, 353, 354], "m": [17, 21, 29, 30, 41, 52, 59, 72, 76, 77, 86, 114, 124, 132, 135, 136, 144, 148, 158, 165, 170, 193, 198, 207, 212, 221, 222, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 249, 250, 282, 289, 314, 321, 323], "hx2_apx": [17, 314], "hx3_apx": [17, 314], "hx1_sae": [17, 314], "entropy_sampl": [17, 137, 138, 157, 158, 165, 169, 171, 172, 314, 352, 353, 354], "hx2_sae": [17, 314], "hx3_sae": [17, 314], "tt1": [17, 314], "start": [17, 43, 103, 185, 222, 223, 224, 239, 242, 285, 286, 314], "process_tim": [17, 314], "tt2": [17, 314], "apsmen1": [17, 314], "apsmen2": [17, 314], "enumer": [17, 34, 92, 114, 152, 153, 154, 314], "progbar_jl": [17, 343], "x41": [17, 314], "apren": [17, 314], "smen": [17, 314], "x42": [17, 314], "approxen": [17, 158, 314], "samen": 17, "aproxen": 17, "x_1": 17, "px_2": 17, "px_3": 17, "53": [2, 17, 23, 24, 29, 30, 239, 240, 248, 250], "832": 17, "plot_it_sample_approx_entropy_comp": [17, 18, 345], "771": [40, 45], "ml": [20, 21, 22, 23, 24, 25, 26, 69, 347, 349, 352, 354], "forc": [20, 80, 272], "catogoryc": 20, "hot": [20, 255], "vector": [20, 80, 114, 122, 124, 126, 127, 131, 132, 156, 177, 193, 255, 272], "numer": [20, 314], "howev": [20, 34, 52, 68, 133, 136, 137, 138, 154, 157, 158, 170, 176, 221, 222, 223, 224, 236, 237, 242, 285, 286, 313, 314, 323, 324], "should": [20, 30, 52, 59, 78, 100, 101, 105, 106, 109, 111, 134, 141, 142, 143, 147, 173, 176, 177, 178, 179, 181, 182, 183, 184, 185, 236, 237, 238, 239, 241, 242, 243, 248, 249, 256, 273, 280, 289, 293, 323], "Not": [20, 79, 105, 106, 109, 111, 136], "atleast": [20, 136, 238, 239], "simpl": [20, 52, 67, 323], "reason": [20, 59], "work": [2, 20, 59, 80, 94, 177, 239, 245, 272, 273, 324], "handl": [20, 100, 101, 176], "mix": [20, 76], "type": [20, 41, 80, 89, 108, 109, 114, 134, 177, 179, 182, 185, 187, 239, 253, 254, 272, 280, 304, 305, 308, 309, 324], "would": [20, 137, 138, 242, 243], "dataset": [20, 21, 22, 23, 24, 25, 71, 94, 114, 117, 118, 119, 120, 122, 123, 124, 127, 129, 131, 132, 255], "hurricnam": 20, "vincentarelbundock": 20, "repositori": 20, "onli": [2, 20, 24, 30, 59, 80, 94, 109, 134, 141, 142, 143, 147, 157, 159, 160, 167, 168, 176, 178, 185, 221, 239, 243, 245, 249, 253, 254, 255, 256, 258, 269, 272, 273, 276, 288, 289, 291, 292, 293, 305, 313, 320, 353], "death": 20, "binari": [20, 22, 25, 78, 193, 198, 199, 223, 255, 285], "problem": 20, "shown": [20, 34, 52, 67, 147, 239, 242, 243, 245, 273, 291, 305, 323], "covert": 20, "encod": 20, "perform": [20, 229], "when": [20, 88, 103, 104, 134, 137, 138, 141, 142, 143, 147, 239, 276, 289, 291, 292, 350], "you": [20, 21, 22, 23, 52, 54, 59, 239, 313, 323], "visul": 20, "veri": [20, 22, 23, 52, 59, 76, 94, 100, 101, 137, 138, 141, 142, 143, 156, 158, 169, 170, 172, 222, 236, 238, 239, 242, 254, 276, 313, 314, 323, 324], "rule": [20, 26, 94, 256, 269], "94": [20, 29], "panda": [2, 20, 47, 59, 62, 241, 253, 256, 257, 287, 290], "pd": [2, 20, 34, 47, 146, 147, 150, 239, 253, 256, 257, 287, 290, 291, 292], "just": [20, 21, 22, 23, 24, 25, 242, 255], "ensur": [20, 21, 22, 23, 239, 269, 353], "reproduc": [20, 21, 22, 23, 82, 83, 304], "result": [20, 21, 22, 23, 24, 43, 48, 89, 100, 101, 108, 175, 176, 177, 239, 276, 291, 292, 305, 308, 309, 320, 324, 342, 353], "classificationtre": [20, 21, 22, 24, 254, 255, 256, 257, 352, 353, 354], "d": [20, 21, 47, 52, 72, 94, 108, 114, 127, 191, 193, 194, 199, 200, 206, 217, 223, 224, 243, 247, 254, 273, 276, 285, 286, 291, 320, 323], "read_csv": [20, 47, 253, 256, 257], "io": [2, 20, 29, 30, 41, 43, 44, 47, 56, 59, 65, 67, 117, 118, 119, 120, 123, 129, 165, 173, 236, 237, 238, 239, 242, 243, 244, 245, 249, 253, 256, 257, 262, 263, 280, 281, 313, 341, 349, 350], "rdataset": 20, "csv": [20, 47, 239, 253, 256, 257], "daag": 20, "feature_nam": [20, 21, 22, 23, 24, 26, 253, 254, 257], "affectedst": 20, "lf": 20, "windsmph": 20, "mf": [20, 255], "basedamag": 20, "year": 20, "pressuremb": 20, "st": [20, 304], "split": [20, 24, 253, 254, 256, 257], "choos": [20, 21, 22, 23, 24, 52, 136, 254, 323], "state": [20, 314], "target": [20, 22, 23, 24, 25, 26], "train": [20, 21, 22, 23, 24, 25, 26, 253, 254, 255, 256, 257], "object": [20, 52, 68, 147, 229, 239, 246, 304, 323], "max_depth": [20, 21, 22, 23, 24, 253, 254, 257], "yp": [20, 21, 25, 255, 256], "plottre": [20, 21, 22, 23, 24, 253, 254, 257], "seen": [20, 314], "thu": 20, "greater": [20, 136, 239, 289], "225": [20, 27], "plot_ml_decision_tree_catogorical_featur": [20, 27, 345], "boundri": [21, 276], "With": [21, 25, 29, 114, 127, 273, 323], "toi": 21, "simul": [21, 58, 69, 71, 103, 278, 314, 349], "2d": [21, 34, 69, 79, 81, 84, 89, 100, 101, 102, 104, 114, 116, 118, 122, 124, 126, 127, 131, 132, 133, 136, 139, 140, 144, 147, 150, 152, 153, 154, 155, 161, 162, 163, 164, 165, 166, 176, 177, 178, 179, 189, 230, 232, 240, 246, 253, 254, 255, 256, 257, 259, 260, 261, 270, 271, 273, 281, 284, 292, 293, 294, 297, 298, 309, 324, 349], "decsison": 21, "allow": [21, 52, 88, 100, 101, 256, 276, 313, 323], "understand": [21, 347], "overfit": [21, 253, 254], "abl": 21, "observ": [21, 239, 324], "creat": [21, 25, 59, 63, 75, 80, 86, 102, 114, 136, 147, 165, 176, 198, 199, 200, 255, 272, 275, 289, 313, 314, 347, 349], "much": [21, 137, 138, 157, 159, 160, 167, 168, 258, 277, 313], "complex": [21, 109, 110, 111, 112, 158, 169, 170, 174, 186, 226, 227, 277, 282, 314, 320, 338, 349, 352, 353, 354], "correctli": [21, 229], "consequ": 21, "fail": [21, 291, 292], "take": [21, 94, 176, 313], "awai": [21, 314], "messag": 21, "care": 21, "hyperparamet": 21, "def": 21, "get2dgrid": 21, "densiti": [21, 30, 111, 136, 146, 150, 151, 157, 255, 264, 313], "mn1": 21, "mn2": 21, "axi": [21, 26, 30, 104, 136, 139, 140, 144, 161, 162, 163, 164, 166, 171, 176, 177, 178, 179, 181, 182, 183, 184, 185, 199, 200, 204, 223, 224, 228, 236, 237, 239, 241, 242, 243, 249, 253, 254, 255, 257, 259, 260, 261, 285, 286, 292, 297, 298], "mx1": [21, 139], "mx2": [21, 139], "linspac": [21, 42, 51, 92, 94, 105, 106, 107, 108, 109, 110, 111, 112, 140, 158, 169, 170, 172, 174, 186, 226, 227, 314, 320], "meshgrid": 21, "xt": [21, 22, 23, 24, 25, 26, 211, 253, 254, 257], "c_": [21, 107, 108, 179, 320], "flatten": 21, "return": [21, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 198, 199, 200, 204, 207, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 352, 353, 354], "plotxi": 21, "clr": 21, "g": [21, 25, 52, 67, 75, 80, 105, 106, 107, 109, 111, 133, 139, 140, 141, 142, 143, 144, 147, 152, 153, 154, 221, 222, 228, 236, 237, 239, 245, 248, 255, 272, 273, 280, 306, 323], "cl": 21, "c": [21, 25, 26, 41, 59, 79, 147, 199, 200, 204, 223, 224, 233, 247, 255, 256, 285, 286, 289], "dtype": [21, 72, 114, 313], "moon": [21, 72, 114, 122, 124, 126, 131, 132], "gaussian": [21, 72, 74, 77, 92, 94, 105, 106, 109, 114, 124, 126, 127, 131, 132, 171, 179, 181, 182, 183, 184, 185, 187, 188, 221, 222, 236, 237, 256, 276, 314, 320, 332, 339, 349], "spiral": [21, 72, 114, 122, 124, 126, 127, 131], "create_dataset": [21, 72, 122, 124, 126, 127, 131, 132], "nois": [21, 39, 40, 47, 52, 81, 82, 83, 84, 92, 114, 124, 126, 127, 131, 132, 171, 221, 222, 236, 237, 239, 242, 270, 271, 314, 323], "mn": 21, "mx": [21, 41, 134, 135, 139, 253, 254, 257, 262, 263, 321], "yt": [21, 22, 23, 24, 25, 26, 253, 254, 257], "acc": [21, 22, 253, 254, 257], "around": [21, 141, 142, 143, 235, 245, 332], "off": [21, 26, 114, 144, 150, 151, 185, 199, 200, 204, 223, 224, 244, 285, 286, 291, 292, 352, 353, 354], "left": [21, 93, 98, 99, 106, 107, 108, 110, 112, 176, 242, 314, 320], "bottom": 21, "right": [21, 22, 23, 39, 42, 103, 106, 107, 108, 110, 112, 137, 138, 171, 174, 186, 226, 227, 242, 276, 314, 320], "03": [21, 24, 26, 34, 45, 53, 56, 154, 245, 352, 353, 354], "ndepth": 21, "showtitl": [21, 253, 254, 257], "shownodevalu": [21, 22, 23, 253, 254, 257], "showthreshold": [21, 22, 23, 253, 254, 257], "195": [21, 27, 29], "plot_ml_decision_tree_classif": [21, 27, 345], "performac": [22, 23], "retrain": [22, 23], "infin": [22, 23, 157], "parform": [22, 23], "accuraci": [22, 23, 24, 25, 26, 54, 253, 254, 255, 256, 257], "mse": [22, 23, 257, 269, 332], "loss": [22, 23, 25, 80, 255, 272], "practic": [22, 23], "valid": [22, 23, 85, 94, 147, 181, 182, 184], "level": [22, 23, 30, 47, 89, 91, 137, 138, 140, 141, 142, 143, 239, 253, 254, 257, 269, 287, 291, 292, 304, 305, 306, 307, 308, 309, 323, 332], "onc": [22, 23, 59, 145, 185, 239], "explicit": [22, 23], "again": [22, 23, 222, 236], "new": [22, 23, 34, 75, 80, 97, 122, 124, 126, 127, 131, 132, 136, 147, 154, 176, 242, 255, 263, 272, 350], "442": [22, 23], "309": [22, 23], "7218045112781954": 22, "logloss": [22, 24], "0000000826903709e": 22, "405687852618023": 22, "measur": [22, 23, 158, 169, 170, 171, 220, 253, 254, 257, 287, 314], "7378640776699029": 22, "7142857142857143": 22, "7831715210355987": 22, "8252427184466019": 22, "6842105263157895": 22, "8543689320388349": 22, "8867313915857605": 22, "706766917293233": 22, "9158576051779935": 22, "7518796992481203": 22, "9385113268608414": 22, "9676375404530745": 22, "9838187702265372": 22, "9935275080906149": 22, "19382486739414417": 22, "3542011731632746": 22, "sklearn": [22, 23, 24, 25, 26, 353], "model_select": [22, 23, 24, 25, 26], "train_test_split": [22, 23, 24, 25, 26], "diabet": [22, 23], "load_diabet": [22, 23], "test_siz": [22, 23, 24, 25, 26], "ytp": [22, 23, 24, 25, 26, 253, 256, 257], "ysp": [22, 23, 24, 25, 26, 253, 256, 257], "ytpr": [22, 24, 25, 26], "predict_proba": [22, 24, 25, 253, 254, 255, 257], "yspr": [22, 24, 25, 26], "gettreedepth": [22, 23, 24, 253, 254, 257], "trloss": [22, 24], "log": [22, 24, 43, 74, 77, 137, 138, 157, 159, 160, 167, 168, 169, 171, 172, 258, 264, 308, 309, 313, 314, 332], "1e": [22, 24, 30, 77, 79, 133, 141, 142, 143, 157, 160, 167, 168, 171, 239, 241, 253, 254, 255, 257, 287, 314], "tsloss": [22, 24], "analys": [22, 23, 67, 109, 111, 139, 140, 239, 243, 254, 267, 294, 305], "learn": [22, 23, 58, 59, 60, 253, 254, 255, 257, 349], "lcurv": [22, 23, 253, 254, 257], "getlcurv": [22, 23, 253, 254, 257], "plotlcurv": [22, 23, 253, 254, 257], "updatetre": [22, 23, 253, 254, 257], "plot_ml_decision_tree_shrinking_capability_cl": [22, 27, 345], "0134843581445523": 23, "5031": 23, "063909774436": 23, "mae": [23, 257], "13052858683926644": 23, "34586466165413": 23, "9808084354697": 23, "17085185630181": 23, "46": [2, 23, 24, 29, 30, 40, 239, 240, 248, 250, 302], "86851907385888": 23, "98487507378485": 23, "43": [2, 23, 24, 29, 30, 239, 240, 248, 250, 302], "141568996938794": 23, "35190431482284": 23, "356810992674724": 23, "8823993621665": 23, "35": [2, 23, 24, 29, 30, 165, 217, 239, 240, 248, 250, 302, 313], "00590288867435": 23, "97168350523505": 23, "592558822370357": 23, "15153853969643": 23, "22": [2, 23, 29, 30, 39, 51, 239, 240, 248, 250, 302, 314, 352, 353, 354], "47797628054624": 23, "49": [2, 23, 29, 302], "607500193059686": 23, "2127465465558": 23, "68983123613818": 23, "612649612164175": 23, "82985738154911": 23, "7302203729388195": 23, "60221983530255": 23, "6400749196865703": 23, "43969676939602": 23, "3022653721682846": 23, "42468671679198": 23, "7022191400832177": 23, "07196562835661": 23, "3797195253505933": 23, "54636591478696": 23, "3380": 23, "8011201388626": 23, "3333": 23, "5221115404897": 23, "regressiontre": [23, 24, 253, 254, 255, 256, 352, 353, 354], "shrine": 23, "plot_ml_decision_tree_shrinking_capability_reg": [23, 27, 345], "build": [24, 62, 253, 254, 257], "cover": [24, 147, 239, 328], "iri": [24, 25, 347], "breast": [24, 347], "cancer": [24, 347], "boston": [24, 347], "hous": [24, 347], "price": [24, 347], "makesur": 24, "own": [24, 239], "splite": 24, "load_iri": [24, 25, 26], "option": [24, 26, 34, 52, 63, 100, 101, 136, 137, 138, 323, 349], "displai": [24, 41, 43, 113, 136, 147, 148, 225, 229, 243, 246, 247, 248, 249, 273, 291, 292, 299, 300, 302], "silenc": [24, 140], "progress": [24, 253, 254, 257, 299, 300], "info": [2, 24, 120, 228, 229], "branch": [24, 253, 257], "diffbranchcolor": [24, 253, 254, 257], "105": [24, 25, 26, 29, 242], "subtre": 24, "buit": 24, "1_sepal": 24, "length": [24, 52, 83, 98, 103, 104, 109, 111, 113, 135, 137, 138, 139, 140, 173, 176, 178, 181, 182, 183, 185, 188, 221, 222, 236, 237, 239, 243, 248, 249, 277, 279, 280, 289, 293, 294, 295, 299, 300, 305, 323], "cm": [24, 30, 239, 241], "gain": [24, 253, 254], "thr": [24, 29, 30, 39, 41, 43, 44, 84, 97, 173, 244, 262, 263, 271, 277, 280, 281, 336], "_depth": 24, "06": [24, 26, 29, 31], "34": [2, 24, 29, 30, 33, 38, 39, 239, 240, 242, 244, 248, 249, 250, 302], "3_petal": 24, "leaf": [24, 253, 254, 257], "node": [24, 198, 199, 200, 223, 224, 233, 239, 241, 253, 254, 257, 285, 286], "08": [24, 27, 29, 30], "26": [2, 24, 29, 30, 33, 38, 39, 56, 239, 240, 248, 250, 302, 352, 353, 354], "56": [2, 24, 29, 30, 239, 240, 248, 250], "4_petal": 24, "width": [24, 94, 104, 136, 157, 159, 160, 167, 168, 181, 182, 187, 188, 239, 242, 258, 268, 269, 273, 289, 291], "2_sepal": 24, "07": [24, 253, 254, 257, 347], "31": [2, 24, 29, 30, 103, 104, 130, 181, 183, 200, 221, 222, 223, 239, 240, 244, 248, 249, 250, 269, 285, 302, 328, 332], "tt": 24, "ttt": [24, 306, 307], "tttf": 24, "tttft": 24, "tttff": 24, "ttf": 24, "ttft": 24, "ttff": 24, "tf": 24, "9111111111111111": 24, "473392013068288": 24, "350567286593632": 24, "9904761904761905": 24, "8666666666666667": 24, "5937142862825335": 24, "6081773385894438": 24, "load_breast_canc": [24, 26], "To": [2, 24, 52, 54, 76, 100, 101, 114, 136, 137, 138, 141, 142, 143, 150, 151, 176, 181, 228, 229, 236, 239, 243, 249, 291, 313, 314, 320, 323, 324], "randombranch": [24, 253, 257], "randomli": 24, "selevt": 24, "inlin": 24, "569": 24, "398": [24, 26], "171": [24, 26], "73": [24, 29, 30, 40, 239, 240, 248, 250], "83": [24, 29, 30, 239, 240, 248, 250], "86": [24, 29, 30, 239, 240, 248, 250], "96": [24, 25, 29, 30, 255], "9298245614035088": 24, "000000082690371e": 24, "6158491879730155": 24, "993": [24, 27], "plot_ml_decision_tree_visualis": [24, 27, 345], "visualas": 25, "logisticregress": [25, 253, 256, 257], "randint": [25, 100, 176, 255], "sort": [25, 30, 47, 169, 223, 224, 255, 285, 286, 314], "littl": [25, 34, 239, 251, 255], "max_itr": [25, 103, 104, 255], "ypr": [25, 255, 256], "ax1": [25, 44, 47, 173, 255, 280, 281, 293, 294], "plot_lcurv": [25, 255], "ax2": [25, 44, 47, 173, 255, 280, 281, 293, 294], "plot_boundri": [25, 255], "ax3": [25, 44, 47, 255, 280, 281, 294], "plot_weight": [25, 255], "ax4": [25, 255], "plot_weights2": [25, 255], "07046678918014998": [25, 255], "multiclass": [25, 255], "polynomi": [25, 103, 104, 130, 178, 183, 185, 221, 222, 236, 237, 255], "polyfit": [25, 255], "degre": [25, 190, 255, 314], "lambd": [25, 40, 80, 255, 272], "featurenorm": [25, 255], "onehot": [25, 255], "l2": [25, 33, 38, 40, 80, 255, 272], "tol": [25, 79, 255], "rho": [25, 255], "fit_intercept": [25, 255], "89": [25, 33, 38], "07928431824494166": 25, "9714285714285714": 25, "9777777777777777": 25, "04372580813833042": 25, "03776786129832711": 25, "124": [25, 27], "plot_ml_logistic_regression_exampl": [25, 27, 345], "posterior": [26, 256], "being": [26, 238, 256], "y_c": [26, 256], "demonstr": [26, 29, 30, 41], "naivebay": [26, 253, 255, 257], "predict_prob": [26, 256], "sigma": [26, 52, 72, 85, 107, 109, 111, 114, 122, 172, 181, 188, 256, 320, 323, 328, 349], "visual": [26, 256], "set_class_label": [26, 256], "target_nam": 26, "set_feature_nam": [26, 256], "vizpx": [26, 256], "9619047619047619": 26, "9333333333333333": 26, "40553556e": 26, "17910306e": 26, "99882089e": 26, "99999989e": 26, "43110935e": 26, "43110703e": 26, "97428571": 26, "46285714": 26, "25142857": 26, "sig": [26, 107, 109, 111, 306, 307], "10076735": 26, "08914286": 26, "02576327": 26, "01164082": 26, "prior": [26, 59, 256], "3333333333333333": 26, "91515152": 26, "77272727": 26, "26969697": 26, "32727273": 26, "27522498": 26, "08380165": 26, "16514233": 26, "03349862": 26, "3142857142857143": 26, "55405405": 26, "95135135": 26, "54594595": 26, "00810811": 26, "43978086": 26, "07817385": 26, "31707816": 26, "07209642": 26, "3523809523809524": 26, "nfeatur": [26, 256], "next": [26, 141, 142, 143, 175, 176, 222, 283], "9321608040201005": 26, "9415204678362573": 26, "70467143e": 26, "15247857e": 26, "12635429e": 26, "31802143e": 26, "03847500e": 26, "46936357e": 26, "58429357e": 26, "64501429e": 26, "95218571e": 26, "35545000e": 26, "87085714e": 26, "20458429e": 26, "16767143e": 26, "83693571e": 26, "62769286e": 26, "34023214e": 26, "12837857e": 26, "48983929e": 26, "05943500e": 26, "20243571e": 26, "06528571e": 26, "93108571e": 26, "38365786e": 26, "35655286e": 26, "46919214e": 26, "90022929e": 26, "54795571e": 26, "82548643e": 26, "31425714e": 26, "40867857e": 26, "76761349e": 26, "62777392e": 26, "57830703e": 26, "23242710e": 26, "79038660e": 26, "23655220e": 26, "77591931e": 26, "17075703e": 26, "54116184e": 26, "22985933e": 26, "97596042e": 26, "43670494e": 26, "40617123e": 26, "14229457e": 26, "36246133e": 26, "91651263e": 26, "46363544e": 26, "49955426e": 26, "09162800e": 26, "52310239e": 26, "75820447e": 26, "13523207e": 26, "43107083e": 26, "26871981e": 26, "24808469e": 26, "41448475e": 26, "61006737e": 26, "31270669e": 26, "43498830e": 26, "48420363e": 26, "35175879396984927": 26, "load_digit": 26, "avoid": [26, 77, 89, 100, 101, 139, 140, 170, 222, 238, 239, 241, 242, 276, 289, 291, 309, 313, 314], "varianc": [26, 48, 52, 76, 126, 239, 242, 291, 323], "contant": [26, 120, 313], "var": [26, 72, 126], "reshap": [26, 111], "cmap": [2, 26, 30, 39, 40, 41, 43, 44, 51, 81, 84, 136, 144, 147, 199, 200, 204, 223, 224, 241, 246, 247, 248, 270, 271, 280, 281, 285, 286, 293, 294, 308, 309], "grai": 26, "1257": 26, "540": 26, "7955449482895783": 26, "20647505e": 26, "40255105e": 26, "70948008e": 26, "20647506e": 26, "00000000e": 26, "422": [26, 27], "plot_ml_naive_bayes_exampl": [26, 27, 345], "407": [27, 30], "machine_learn": [27, 345], "record": [29, 30, 63, 115, 117, 118, 119, 120, 123, 129, 229, 238, 239, 244, 245, 324, 349], "signl": 29, "line": [29, 34, 47, 114, 124, 131, 147, 156, 177, 249, 289], "includ": [29, 59, 71, 76, 78, 136, 185, 230, 239, 241, 253, 254, 257, 273, 276, 288, 313, 314, 342, 353], "read": [29, 41, 43, 44, 63, 173, 228, 229, 230, 231, 232, 236, 237, 238, 242, 243, 245, 262, 263, 280, 281, 341, 349], "hdf": [29, 30, 63, 229, 239, 341, 349], "stim": [29, 63, 236, 237, 238, 239, 242, 243, 245, 349], "align": [29, 63, 89, 236, 237, 238, 239, 242, 243, 308, 309, 349], "cycl": [29, 63, 236, 237, 238, 239, 242, 243, 244, 245, 349], "repolaris": [29, 63, 222, 236, 239, 242, 243, 249, 276, 349], "apd": [29, 63, 236, 239, 242, 243, 249, 349], "egm": [29, 63, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 236, 237, 238, 239, 242, 243, 249, 349], "bad": [2, 29, 63, 239, 241, 244, 248, 249, 273, 349], "matrix": [29, 34, 63, 75, 76, 79, 80, 81, 84, 85, 86, 104, 109, 111, 114, 122, 124, 126, 127, 131, 132, 176, 193, 198, 199, 200, 212, 223, 239, 240, 241, 246, 247, 248, 250, 255, 256, 270, 271, 272, 273, 285, 339, 349], "interpol": [2, 29, 44, 51, 63, 89, 109, 111, 139, 140, 147, 148, 149, 155, 175, 176, 189, 239, 241, 242, 263, 279, 280, 281, 293, 294, 349], "conduct": [29, 63, 239, 241, 349], "veloc": [29, 63, 239, 241, 349], "request": [2, 29, 30, 41, 43, 44, 173, 229, 236, 237, 238, 239, 242, 243, 244, 245, 249, 262, 263, 280, 281], "alreadi": [2, 29, 30, 54, 236, 237, 238, 239, 242, 243, 244, 245, 249], "file_nam": [2, 29, 30, 43, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 242, 243, 244, 245, 249], "mea_sample_north_1000mv_1hz": [29, 30, 229, 236, 237, 238, 239, 242, 243, 244, 245, 249], "h5": [29, 30, 67, 229, 236, 237, 238, 239, 242, 243, 244, 245, 249], "path": [2, 29, 30, 43, 44, 47, 67, 173, 228, 229, 230, 232, 236, 237, 238, 239, 242, 243, 244, 245, 249, 253, 254, 257, 262, 263, 280, 281], "exist": [2, 29, 30, 43, 100, 101, 236, 237, 238, 239, 242, 243, 244, 245, 249], "data_sampl": [2, 29, 30, 43, 229, 236, 237, 238, 239, 242, 243, 244, 245, 249], "req": [2, 29, 30, 41, 43, 44, 173, 229, 236, 237, 238, 239, 242, 243, 244, 245, 249, 262, 263, 280, 281], "get": [2, 29, 30, 41, 43, 44, 76, 137, 138, 152, 153, 154, 173, 182, 187, 190, 195, 196, 197, 201, 202, 203, 204, 205, 207, 208, 209, 210, 221, 222, 228, 229, 236, 237, 238, 239, 242, 243, 244, 245, 249, 253, 254, 255, 257, 262, 263, 280, 281, 328], "open": [2, 29, 30, 41, 43, 44, 173, 229, 236, 237, 238, 239, 242, 243, 244, 245, 249, 262, 263, 280, 281], "wb": [2, 29, 30, 41, 43, 44, 173, 229, 236, 237, 238, 239, 242, 243, 244, 245, 249, 262, 263, 280, 281], "content": [2, 29, 30, 41, 43, 44, 173, 229, 236, 237, 238, 239, 242, 243, 244, 245, 249, 262, 263, 280, 281, 349], "features_df": [29, 239], "features_ch": [29, 239], "features_mat": [29, 239], "analyse_mea_fil": [29, 67], "stim_fhz": [29, 30, 67, 236, 237, 238, 239, 242, 243, 244, 245, 249], "500": [29, 30, 42, 86, 102, 140, 174, 186, 225, 226, 227, 236, 237, 238, 239, 242, 243, 249, 255, 275], "durat": [2, 29, 30, 52, 118, 119, 120, 178, 183, 185, 228, 236, 237, 238, 239, 242, 243, 244, 245, 249, 280, 284, 323], "stimulu": [29, 67, 229, 238, 239, 243, 244, 245], "chang": [29, 34, 54, 105, 106, 109, 111, 122, 124, 126, 127, 131, 132, 136, 141, 142, 143, 145, 147, 176, 239, 248, 320, 350, 351, 352, 353, 354], "dur_after_spik": [29, 30, 236, 237, 238, 239, 242, 243, 249], "kei": [29, 30, 120, 130, 229, 232, 304], "keysviewhdf5": [29, 30], "250000": [29, 30], "12450": [29, 30], "per": [29, 30, 141, 142, 143, 145, 236, 237, 238, 239, 242, 243, 244, 245, 280, 288], "etract": [29, 30], "peak_to_peak": [29, 30], "egm_dur": [29, 30], "f_index": [29, 30], "new_dur": [29, 30, 242], "energy_mean": [29, 30, 242], "energy_sd": [29, 30, 242], "noise_var": [29, 30, 242], "egm_feat": [29, 30], "xe": [2, 29, 30, 86, 242, 243, 249, 266], "250": [29, 30, 239], "AT": [29, 30, 221, 222, 236, 239, 249], "egm_f": [29, 30], "ON": [29, 30], "41": [2, 29, 30, 239, 240, 248, 250, 302, 304], "peak": [29, 30, 63, 87, 88, 139, 140, 182, 187, 239, 242, 245, 262, 263, 266, 349], "volt": [29, 30, 141, 142, 143], "manual": [29, 30, 59, 239], "good": [29, 30, 89, 221, 238, 239, 248, 249, 266, 273, 293, 302, 308, 309], "37": [2, 29, 30, 239, 240, 248, 250, 302], "62": [29, 30, 239, 240, 248, 250], "82": [29, 30, 239, 240, 248, 250], "74": [29, 30, 239, 240, 248, 250], "67": [29, 30, 33, 38, 239, 240, 248, 250], "68": [29, 30, 38, 239, 240, 248, 250], "58": [2, 29, 30, 239, 240, 248, 250], "cv_mean": [29, 241], "817": 29, "965": 29, "cv_median": [29, 241], "969": 29, "292": 29, "cv_sd": [29, 241], "987": 29, "459": 29, "inv_spe": [29, 241], "004": [29, 51, 53], "avg_angl": [29, 241], "693": 29, "685": 29, "smooth": [29, 30, 34, 141, 142, 143, 156, 158, 170, 176, 179, 181, 182, 183, 184, 185, 187, 221, 222, 236, 237, 239, 266, 276, 279, 306, 307, 313, 339, 349], "upsampl": [29, 30, 136, 279], "at_ms_mean": 29, "484167": 29, "361333": 29, "at_ms_median": 29, "at_ms_sd": 29, "393794": 29, "116": 29, "845063": 29, "peak_to_peak_mean": 29, "194": 29, "296019": 29, "156": 29, "026815": 29, "peak_to_peak_median": 29, "198": 29, "877604": 29, "170": 29, "335079": 29, "peak_to_peak_sd": 29, "811005": 29, "284933": 29, "egm_duration_mean": 29, "043771": 29, "840246": 29, "egm_duration_median": 29, "205426": 29, "812905": 29, "egm_duration_sd": 29, "499696": 29, "769817": 29, "f_index_mean": 29, "020833": 29, "266667": 29, "f_index_median": 29, "f_index_sd": 29, "142826": 29, "424391": 29, "new_duration_mean": 29, "886978": 29, "366179": 29, "new_duration_median": 29, "396708": 29, "099283": 29, "new_duration_sd": 29, "934721": 29, "052041": 29, "energy_mean_mean": 29, "634": [29, 76], "703597": 29, "508": 29, "018861": 29, "energy_mean_median": 29, "960827": 29, "429": [29, 30], "291967": 29, "energy_mean_sd": 29, "440": 29, "939276": 29, "468": 29, "763144": 29, "energy_sd_mean": 29, "2331": 29, "557953": 29, "1865": 29, "581011": 29, "energy_sd_median": 29, "1981": 29, "04279": 29, "1463": 29, "436099": 29, "energy_sd_sd": 29, "1702": 29, "987816": 29, "1785": 29, "685722": 29, "noise_var_mean": 29, "483589": 29, "748528": 29, "noise_var_median": 29, "398441": 29, "078418": 29, "noise_var_sd": 29, "679903": 29, "1329": 29, "cv_cm_s_mean": 29, "964751": 29, "143832": 29, "cv_cm_s_median": 29, "292091": 29, "923668": 29, "cv_cm_s_sd": 29, "458801": 29, "490185": 29, "004041": 29, "003854": 29, "685121": 29, "692971": 29, "n_bad_ch": 29, "n_good_ch": 29, "at_m": 29, "cv_cm_": 29, "ch_label": [2, 29, 30, 228, 229, 236, 237, 238, 239, 240, 242, 243, 244, 245, 248, 249, 250], "bad_ch": 29, "185": 29, "024967": 29, "888097": 29, "484": 29, "839536": 29, "1738": 29, "891824": 29, "806276": 29, "994262": 29, "207": 29, "645492": 29, "29": [2, 29, 33, 38, 39, 302], "078587": 29, "564": 29, "528219": 29, "1965": 29, "390988": 29, "757493": 29, "972602": 29, "137": 29, "696900": 29, "199420": 29, "346": 29, "427159": 29, "1313": 29, "511807": 29, "826316": 29, "300282": 29, "88": [29, 30, 169], "110": 29, "208074": 29, "244166": 29, "060420": 29, "589": 29, "373654": 29, "835411": 29, "614175": 29, "957333": 29, "186365": 29, "461": 29, "934628": 29, "1633": 29, "030667": 29, "361641": 29, "406259": 29, "146": 29, "507319": 29, "930925": 29, "291": 29, "667150": 29, "1035": 29, "150207": 29, "791908": 29, "158138": 29, "284": [29, 30], "495890": 29, "216436": 29, "963": 29, "708430": 29, "3611": 29, "331072": 29, "189918": 29, "737474": 29, "220": [29, 41, 43], "728300": 29, "077200": 29, "602": 29, "182147": 29, "2302": 29, "812305": 29, "838855": 29, "588377": 29, "426356": 29, "029424": 29, "987956": 29, "203725": 29, "408528": 29, "561067": 29, "163": 29, "620594": 29, "617619": 29, "339": 29, "587586": 29, "1234": 29, "744236": 29, "870040": 29, "872723": 29, "236": 29, "031266": 29, "412209": 29, "742": 29, "615567": 29, "2896": 29, "596687": 29, "079189": 29, "898835": 29, "108": 29, "990994": 29, "115": 29, "117881": 29, "184": [29, 242], "759779": 29, "807": 29, "893237": 29, "395177": 29, "627833": 29, "101": [29, 184, 187, 188, 276], "917566": 29, "773716": 29, "956645": 29, "439767": 29, "768145": 29, "349423": 29, "874862": 29, "418585": 29, "892525": 29, "794201": 29, "143": [29, 85, 104], "344650": 29, "137642": 29, "123060": 29, "695701": 29, "789267": 29, "323118": 29, "031301": 29, "040085": 29, "187772": 29, "775147": 29, "462483": 29, "079279": 29, "501121": 29, "254152": 29, "801556": 29, "250936": 29, "900375": 29, "313894": 29, "303754": 29, "663": 29, "290624": 29, "506374": 29, "691410": 29, "183": 29, "043845": 29, "251336": 29, "489": 29, "891978": 29, "2187": 29, "811774": 29, "457476": 29, "689037": 29, "135": 29, "499567": 29, "598340": 29, "255": [29, 74, 77], "465681": 29, "1225": 29, "741769": 29, "232107": 29, "345526": 29, "208": 29, "095476": 29, "768363": 29, "592": 29, "269185": 29, "1996": 29, "694592": 29, "713667": 29, "572447": 29, "174": [29, 30], "705308": 29, "125530": 29, "423": [29, 40, 314], "162994": 29, "1794": 29, "933818": 29, "115191": 29, "856701": 29, "197": [29, 45], "765137": 29, "110845": 29, "448": 29, "354167": 29, "1605": 29, "567895": 29, "933420": 29, "889576": 29, "199": 29, "990070": 29, "185192": 29, "492698": 29, "2428": 29, "124139": 29, "159148": 29, "929110": 29, "672183": 29, "147": 29, "479525": 29, "204": 29, "713549": 29, "088024": 29, "119499": 29, "305310": 29, "257815": 29, "234": 29, "087601": 29, "857447": 29, "1134": 29, "540542": 29, "3941": 29, "533424": 29, "792507": 29, "295478": 29, "176": [29, 30], "220167": 29, "325327": 29, "089396": 29, "130375": 29, "271223": 29, "789960": 29, "267": 29, "936098": 29, "318821": 29, "1015": 29, "256365": 29, "4205": 29, "093145": 29, "288281": 29, "013662": 29, "357": [29, 30], "085440": 29, "911071": 29, "071337": 29, "123967": 29, "217650": 29, "412884": 29, "394": [29, 30], "475323": 29, "002538": 29, "274187": 29, "299669": 29, "597950": 29, "126649": 29, "585665": 29, "92": [29, 30], "324811": 29, "792306": 29, "006625": 29, "563891": 29, "265852": 29, "349": [29, 30], "784590": 29, "700329": 29, "224369": 29, "403634": 29, "427144": 29, "575117": 29, "345": [29, 30], "949954": 29, "314854": 29, "099146": 29, "136271": 29, "300426": 29, "650681": 29, "242921": 29, "173367": 29, "738626": 29, "416": 29, "599180": 29, "618208": 29, "388949": 29, "154": 29, "565858": 29, "989405": 29, "424": [29, 30, 40], "997858": 29, "1319": 29, "499289": 29, "854213": 29, "678996": 29, "209": [29, 30], "020953": 29, "206467": 29, "167395": 29, "198213": 29, "467681": 29, "108018": 29, "249": 29, "095678": 29, "198601": 29, "1342": 29, "348732": 29, "3865": 29, "931980": 29, "747313": 29, "443430": 29, "818095": 29, "494695": 29, "005287": 29, "164918": 29, "365871": 29, "893927": 29, "301": 29, "713155": 29, "300006": 29, "1185": 29, "619945": 29, "4548": 29, "332537": 29, "208267": 29, "831155": 29, "262": 29, "489993": 29, "555927": 29, "1259": 29, "552318": 29, "3845": 29, "349801": 29, "809549": 29, "468601": 29, "165": 29, "964851": 29, "289210": 29, "433": 29, "586076": 29, "1321": 29, "304302": 29, "306614": 29, "849839": 29, "330": [29, 30], "289875": 29, "507392": 29, "100453": 29, "686527": 29, "543717": 29, "983761": 29, "086544": 29, "286": 29, "334120": 29, "977130": 29, "1075": 29, "300290": 29, "3690": 29, "857045": 29, "709205": 29, "321557": 29, "247": 29, "082172": 29, "098113": 29, "917": 29, "583124": 29, "3972": 29, "649231": 29, "058398": 29, "808972": 29, "354": 29, "963382": 29, "989166": 29, "1744": 29, "744082": 29, "7221": 29, "839931": 29, "985230": 29, "575674": 29, "073097": 29, "149889": 29, "932773": 29, "594577": 29, "105692": 29, "241695": 29, "343": [29, 30], "961333": 29, "552862": 29, "763354": 29, "513844": 29, "714858": 29, "166059": 29, "084073": 29, "270": 29, "760250": 29, "885907": 29, "999": [29, 182, 187], "765942": 29, "3957": 29, "074664": 29, "452439": 29, "681946": 29, "366": 29, "615413": 29, "754012": 29, "1886": [29, 48, 291], "732748": 29, "7866": 29, "874997": 29, "662611": 29, "166111": 29, "235": [29, 30], "104306": 29, "903772": 29, "922": [29, 31], "811550": 29, "3289": 29, "930349": 29, "583009": 29, "173149": 29, "883263": 29, "859990": 29, "694": 29, "105695": 29, "2237": 29, "905717": 29, "284190": 29, "283899": 29, "246": 29, "211356": 29, "157142": 29, "841": 29, "472934": 29, "2985": 29, "265406": 29, "497298": 29, "173894": 29, "285": 29, "388401": 29, "533913": 29, "972": 29, "235101": 29, "3509": 29, "150114": 29, "464566": 29, "511653": 29, "149": 29, "778181": 29, "610816": 29, "930537": 29, "1060": 29, "727601": 29, "077647": 29, "481472": 29, "988603": 29, "106471": 29, "493": 29, "393435": 29, "1688": 29, "048984": 29, "306425": 29, "215825": 29, "275": 29, "228959": 29, "493410": 29, "1024": 29, "767000": 29, "3944": 29, "379419": 29, "551180": 29, "807320": 29, "316": [29, 30], "971262": 29, "380379": 29, "1215": 29, "230557": 29, "4342": 29, "037972": 29, "339405": 29, "325041": 29, "216": 29, "102190": 29, "922939": 29, "646": 29, "841359": 29, "2337": 29, "948079": 29, "871648": 29, "137746": 29, "106": 29, "317816": 29, "826650": 29, "232": 29, "242177": 29, "790": 29, "835827": 29, "137693": 29, "948501": 29, "025948": 29, "196825": 29, "289": 29, "011529": 29, "945": 29, "021764": 29, "442592": 29, "359655": 29, "59": [2, 29, 40], "536550": 29, "652898": 29, "845": 29, "736027": 29, "2641": 29, "059900": 29, "917260": 29, "989802": 29, "plot_mea_minimal_setting_exampl": [29, 31, 67, 345], "25000": [30, 229, 236, 237, 238, 239, 242, 243, 244, 245, 249], "read_hdf": [30, 67, 228, 230, 232, 233, 236, 237, 238, 242, 243, 244, 245, 249, 311], "stim_loc": [30, 236, 237, 238, 242, 243, 245, 249], "get_stim_loc": [30, 67, 236, 237, 238, 239, 242, 243, 249], "fhz": [30, 236, 237, 238, 242, 243, 245, 249], "stim_loc_m": 30, "tix": 30, "tii": 30, "exclude_first_dur": [30, 236, 237, 238, 239, 242, 243, 249], "exclude_last_cycl": [30, 236, 237, 238, 239, 242, 243, 249], "xb": [30, 236, 237, 238, 242, 243, 249], "align_cycl": [30, 67, 236, 237, 239, 242, 243, 249], "pad": [30, 39, 89, 90, 100, 101, 236, 237, 238, 239, 242, 243, 249, 309], "nan": [30, 41, 43, 44, 100, 101, 136, 175, 176, 220, 223, 224, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 273, 280, 281, 285, 286, 287, 288, 290], "aling": [30, 238], "egm_numb": [30, 236, 237, 239, 242, 243], "x1b": [30, 236, 237, 242, 243, 249], "nanmean": [30, 236, 237, 242, 243, 249], "between": [30, 102, 114, 127, 156, 157, 170, 209, 210, 236, 237, 239, 241, 242, 243, 249, 275, 293, 314], "assert": [30, 236, 237, 242, 243], "at_rang": [30, 236, 237, 239, 242, 243, 249], "rt_rang": [30, 236, 239], "at_loc": [30, 222, 236, 237, 242, 243, 249], "activation_time_loc": [30, 67, 221, 222, 236, 239, 242, 243, 249], "togeth": [30, 90, 236, 309], "rt_loc": [30, 222, 236], "activation_repol_time_loc": [30, 67, 221, 222, 237, 239], "at_loc_m": [30, 67, 236, 237], "rt_loc_m": [30, 67, 236], "278": 30, "472": 30, "120": 30, "340": [30, 299, 300], "302": 30, "271": 30, "314": 30, "202": 30, "342": 30, "351": 30, "419": 30, "425": [30, 40, 52, 323], "460": 30, "219": 30, "295": 30, "145": [30, 42, 45], "245": 30, "397": 30, "apd_m": [30, 67, 236], "at_grid": [30, 236, 237], "arrange_mea_grid": [30, 236, 237, 246, 247, 248, 249, 250], "rt_grid": [30, 236], "apd_grid": [30, 236], "mat_1_show": [30, 236, 237, 240, 247, 248, 249, 250], "dur_from_loc": [30, 239, 242, 243, 249], "remove_drift": [30, 239, 242, 243, 249], "atloc": [30, 242, 243, 249], "extract_egm": [30, 67, 239, 242, 249], "act_loc": [30, 242, 243, 249], "egmf": [30, 242], "feat_nam": [30, 242], "egm_featur": [30, 67, 239, 243, 244], "width_rel_height": [30, 239, 242], "findex_rel_dur": [30, 239, 242], "findex_rel_height": [30, 239, 242], "findex_npeak": [30, 239, 242], "good_channel": [30, 239], "bad_channel": [30, 239, 248, 249], "p2p_thr": [30, 239], "bad_ch_stim_thr": [30, 239], "bad_ch_mnmx": [30, 239], "range_act_thr": [30, 239], "bad_channels_list": [30, 248, 249], "bad_channels_idx_1": [30, 244], "find_bad_channels_idx": [30, 67, 239], "mnmx": [30, 244], "plot_dur": [30, 236, 237, 239, 244], "bad_channels_ch_1": 30, "bad_channels_idx_2": 30, "bad_channels_ch_2": 30, "bad_channels_idx_3": 30, "bad_channels_ch_3": 30, "good_channels_list": 30, "good_channels_list_idx": 30, "plot_mea_grid": [30, 67, 240, 243, 246, 247, 248, 250], "act_spik": [30, 249], "title_styl": [30, 243, 249], "trace": [30, 236, 237, 249], "electrogram": [30, 63, 67, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 221, 222, 236, 237, 243, 249, 349], "852": [30, 31], "8768781599376": 30, "1088": 30, "2322322933303": 30, "mxbad": 30, "mea_feature_map": [30, 67, 240, 246, 247, 249, 250], "mv": [30, 242, 244], "fmt": [30, 136, 246, 247, 248], "0f": 30, "intp_param": [30, 239], "pkind": [30, 175, 176, 239], "filter_s": [30, 176, 239], "conv": [30, 98, 99, 176, 239], "axix": 30, "fill_nans_2d": [30, 34, 67, 98, 99, 100, 101, 175, 239, 241], "clip_rang": [30, 176], "mat_list_show": [30, 67, 240, 246, 248, 249, 250], "preserv": 30, "cv_param": [30, 239], "ed": [30, 239, 241], "esp": [30, 133, 157, 160, 167, 168, 171, 224, 239, 241, 251, 286, 287], "cv_pad": [30, 239, 241], "cv_thr": [30, 239, 241], "arr_agg": [30, 239, 241, 273], "cv_df": [30, 241], "cv_theta": 30, "cv0": [30, 241], "cv": [30, 239, 241, 273], "compute_cv": [30, 67, 239], "flip": [30, 241], "cv_thetas_smooth": 30, "silent_mod": [30, 241], "im": [30, 39, 40, 81, 84, 147, 270, 271], "jet": [30, 39, 40, 41, 43, 44, 51, 81, 84, 136, 144, 147, 199, 200, 204, 217, 223, 224, 239, 241, 246, 247, 248, 270, 271, 280, 281, 285, 286, 293, 294, 308, 309], "bilinear": [30, 44, 149, 239, 280, 281, 293, 294], "extent": [30, 39, 40, 41, 43, 44, 81, 84, 270, 271, 280, 281, 293, 294], "contour": [30, 147, 148, 155], "1f": [30, 246, 247, 248], "cond": 30, "cv_arr_prop": [30, 239], "direction_flow_map": [30, 67, 239, 241, 273], "x_theta": [30, 136, 241], "squar": [30, 94, 136, 194, 207, 209, 210, 242, 251, 252], "cbar": [30, 34, 101, 136, 176], "arr_pivot": [30, 136, 241], "mid": [30, 136, 241], "stream_plot": [30, 136], "heatmap_prop": [30, 136, 241], "arr_prop": [30, 136], "stream_prop": [30, 136], "linewidth": [30, 136, 147], "930": [30, 31], "plot_mea_stepwise_exampl": [30, 31, 345], "multielectrod": [31, 67, 345], "announc": [33, 34], "come": [33, 34, 242], "bug": [33, 34, 352, 353, 354], "fix": [33, 34, 52, 76, 122, 124, 127, 131, 132, 137, 138, 157, 159, 160, 165, 167, 168, 249, 258, 274, 313, 323, 350, 351, 352, 353, 354], "organis": 34, "document": [33, 34, 58, 68, 137, 221, 307, 349], "exhaust": 34, "note": [34, 48, 75, 76, 78, 80, 81, 84, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 133, 134, 135, 136, 139, 140, 156, 157, 160, 170, 174, 177, 179, 180, 185, 186, 220, 221, 222, 223, 226, 227, 236, 239, 245, 251, 252, 256, 264, 265, 266, 270, 271, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 291, 292, 294, 305, 306, 307, 308, 309, 313, 350], "ad": [33, 34, 92, 122, 124, 126, 127, 131, 132, 176, 266, 352, 353, 354], "000": [9, 18, 36, 345], "plot_release_highlights_0_0_9_6": [33, 35, 345], "wide": [34, 52, 78, 117, 123, 323], "although": 34, "layout": 34, "standard": [34, 52, 59, 76, 114, 124, 127, 131, 132, 146, 147, 150, 151, 152, 153, 154, 223, 224, 253, 254, 257, 285, 286, 288, 323], "notic": 34, "describ": [34, 182, 187, 328], "bem": [34, 154], "fi": [34, 154], "book": [34, 154, 347], "htm": [34, 154], "en": [34, 74, 77, 89, 95, 96, 99, 105, 107, 108, 109, 110, 111, 112, 117, 123, 129, 134, 135, 146, 150, 154, 156, 157, 158, 165, 170, 177, 178, 179, 182, 186, 187, 261, 264, 265, 278, 291, 295, 296, 297, 298, 305, 308, 309, 313, 328, 332], "wikipedia": [34, 74, 77, 78, 89, 90, 91, 93, 94, 95, 96, 97, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 123, 129, 134, 135, 146, 150, 154, 156, 157, 158, 162, 165, 166, 167, 170, 172, 174, 177, 178, 179, 180, 181, 182, 185, 186, 187, 220, 226, 227, 251, 252, 261, 264, 265, 269, 273, 277, 278, 282, 283, 284, 291, 295, 296, 297, 298, 305, 306, 307, 308, 309, 313, 328, 332], "org": [34, 59, 74, 77, 89, 95, 96, 99, 105, 107, 108, 109, 110, 111, 112, 117, 123, 129, 134, 135, 136, 137, 141, 143, 144, 146, 150, 154, 156, 157, 158, 165, 170, 177, 178, 179, 182, 186, 187, 221, 261, 264, 265, 276, 278, 289, 291, 295, 296, 297, 298, 305, 308, 309, 313, 328, 332], "wiki": [34, 74, 77, 89, 95, 96, 99, 105, 107, 108, 109, 110, 111, 112, 117, 123, 129, 134, 135, 146, 150, 154, 156, 157, 158, 163, 164, 165, 170, 177, 178, 179, 182, 186, 187, 259, 260, 261, 264, 265, 275, 278, 291, 295, 296, 297, 298, 305, 308, 309, 313, 328, 332], "e2": [34, 154, 169, 178, 291, 314], "9320_system_": [34, 154], "mariusthart": [34, 154], "net": [34, 154, 255], "eeg_electrodes_10": [34, 154], "pdf": [34, 154, 276, 347], "beteredingen": [34, 154], "nl": [34, 154], "cz": [34, 302], "point": [34, 76, 109, 134, 135, 136, 147, 152, 153, 154, 155, 156, 194, 198, 199, 200, 201, 202, 204, 205, 207, 209, 210, 222, 232, 242, 246, 247, 248, 264, 276, 280, 288, 289, 291, 292, 320], "horizont": [34, 147, 239, 241], "straight": 34, "tri": [34, 239], "keep": [34, 108, 109, 111, 133, 136, 141, 142, 143, 182, 187, 239, 241, 243, 314, 349], "convent": [34, 100, 101, 154, 176, 320, 352, 353, 354], "see": [34, 52, 59, 76, 100, 136, 139, 140, 145, 154, 276, 289, 323], "topomap": [2, 34, 352, 354], "px": [34, 41, 134, 135, 144, 146, 147, 150, 157, 160, 168, 263, 264, 314, 321], "pos1": [34, 147, 154], "s1020_get_epos2d": [34, 144, 147, 152, 153], "pos2": [34, 147, 154], "z1i": [34, 147], "po": [34, 144, 147, 148, 152, 153, 154, 155], "z2i": [34, 147], "ch_names_emotiv": [34, 154], "ch1": [34, 154], "ch2": [34, 154], "ch_names_al": [34, 154], "preset": [34, 152, 153, 154, 302], "standard_1020_ch": [34, 154, 302], "pos3": [34, 154], "ch3": [34, 154], "ch_names_spkit_al": [34, 154], "standard_1020_spkit_ch": [34, 154], "pos4": [34, 154], "ch4": [34, 154], "va": [2, 34, 152, 153, 154], "axvlin": [34, 86, 106, 139, 154, 221, 222], "lw": [34, 44, 86, 100, 106, 139, 154, 156, 262, 263, 273, 280, 281, 288, 289], "axhlin": [34, 154, 262, 263, 288], "s1010_get_epos2d": [34, 147, 152, 154], "standard_1010_ch": [34, 153], "s1005_get_epos2d": [34, 147, 153, 154], "standard_1005_ch": [34, 152], "conv1d_nan": [34, 98, 99, 101, 133, 352, 354], "scipi": [34, 40, 41, 43, 44, 59, 62, 100, 101, 139, 140, 173, 176, 178, 183, 262, 263, 280, 281, 324], "create_signal_1d": [34, 72, 98, 99, 100, 177, 178, 182, 199, 200, 204, 223, 224, 240, 248, 279, 285, 286, 306, 307, 324], "sg_winlen": [34, 72, 100, 101, 103, 104, 176, 177, 178, 182, 199, 200, 204, 223, 224, 241, 246, 247, 250, 279, 285, 286, 306, 307, 324], "kernel": [34, 98, 99, 100, 101, 133, 176, 179, 181, 182, 183, 184, 185, 187, 188, 221, 222, 236, 237, 278, 328, 339, 349], "ones": [34, 100, 101, 133, 176, 241, 248], "x_scipi": [34, 100], "convolv": [34, 98, 99, 100, 182, 187, 328], "x_spkit": [34, 100], "311": [34, 41, 42, 100, 103, 185, 226, 227, 266], "c0": [2, 34, 100, 128, 136, 139, 249, 273, 276, 288, 289], "isnan": [34, 100, 241, 253, 256, 257, 288], "nanmin": [34, 100], "nanmax": [34, 100], "312": [34, 41, 42, 100, 103, 185, 226, 227, 266], "uisng": [34, 100, 101], "313": [34, 41, 42, 100, 103, 185, 226, 227, 266], "conv2d_nan": [34, 100, 133, 176, 352, 354], "seaborn": [34, 59, 62, 101, 136, 176, 289], "sn": [34, 101, 176], "create_signal_2d": [34, 72, 101, 103, 176, 241, 246, 247, 250], "i_scipi": [34, 101], "convolve2d": [34, 101], "fillvalu": [34, 100, 101, 176], "i_spkit": [34, 101, 176], "heatmap": [34, 101, 136, 176, 239, 246], "annot": [34, 101, 136, 176], "xticklabel": [34, 101, 136, 176], "yticklabel": [34, 101, 136, 176], "imag": [34, 41, 42, 62, 69, 101, 104, 105, 106, 107, 108, 110, 112, 144, 147, 149, 174, 186, 226, 227, 232, 320, 349], "fill_nans_1d": [34, 98, 99, 100, 101, 176], "reflect": [34, 100, 101, 176, 221, 222, 236, 237], "i_fil": [34, 176], "i_sm": [34, 176], "decompositon": 34, "wavelet_decomposed_sign": [34, 89, 309, 323, 352, 354], "lead_nam": [34, 71, 89, 116, 178, 185, 277, 293, 294, 305, 308, 309, 323], "ecg_sample_12lead": [34, 71, 74, 77, 89, 96, 115, 117, 118, 119, 120, 121, 123, 128, 129, 178, 185, 235, 269, 277, 293, 294, 305, 308, 309, 323, 332], "plot_each": [34, 305, 323], "743": [], "plot_release_highlights_0_0_9_7": [34, 35, 345], "release_highlight": [35, 345], "rfb_example_1": [33, 38, 83], "snr": [33, 38, 47, 81, 82, 83, 84, 92, 270, 271], "rfb_example_2": [33, 38, 82], "signal_length": [33, 38, 39, 40, 83], "l1": [33, 38, 40, 80, 176, 255, 272], "regularis": [33, 38, 40, 207], "79": [33, 38, 40], "550": [38, 45], "plot_sp_rfb_for_period_estimation_demo_exampl": [38, 45, 345], "mpl_toolkit": 39, "axes_grid1": 39, "make_axes_locat": 39, "x0": [39, 165, 313], "tile": [39, 40, 81, 84, 270, 271], "x_nois": [39, 40, 81, 84, 270, 271, 276], "add_nois": [39, 40, 81, 84, 98, 140, 159, 160, 161, 162, 163, 164, 166, 168, 259, 260, 261, 270, 271, 276, 297, 298, 306, 313, 314], "snr_db": [39, 40, 81, 84, 92, 98, 140, 159, 160, 161, 162, 163, 164, 166, 168, 259, 260, 261, 270, 271, 276, 297, 298, 306, 313, 314], "pmax": [39, 40, 80, 81, 84, 270, 271, 272], "maximum": [39, 75, 76, 88, 89, 103, 104, 137, 138, 139, 141, 142, 143, 157, 158, 160, 168, 170, 221, 222, 229, 236, 237, 239, 242, 244, 245, 253, 254, 257, 280, 308, 309, 314], "expect": [39, 75, 80, 81, 84, 136, 253, 254, 257, 270, 271, 272, 314], "rcq": [39, 40, 81, 84, 270, 271], "repeat": [39, 81, 84, 181, 182, 184, 270, 271], "rav": [39, 40, 81, 84, 270, 271], "th": [39, 40, 81, 84, 270, 271], "output": [39, 74, 77, 81, 84, 98, 135, 144, 177, 242, 270, 271, 276, 277, 291], "fr": [39, 41, 81, 84, 262, 263, 270, 271], "fa": [39, 81, 84, 270, 271], "ramanujan_filt": [39, 40, 81, 82, 83, 271, 272], "return_filt": [39, 81, 84, 270, 271], "height_ratio": [39, 44, 173, 280, 281, 293, 294], "set_xlabel": [2, 39, 44, 47, 280, 281, 293, 294], "divid": [39, 114, 194, 242, 313], "cax": 39, "append_ax": 39, "aspect": [39, 40, 41, 43, 44, 51, 81, 84, 136, 147, 270, 271, 280, 281, 293, 294, 308, 309], "auto": [39, 40, 41, 43, 44, 51, 81, 84, 98, 99, 100, 136, 137, 270, 271, 280, 281, 289, 293, 294, 308, 309], "set_colorbar": 39, "set_ylabel": [39, 44, 173, 280, 281, 293, 294], "orient": 39, "vertic": [39, 89, 193, 195, 196, 199, 223, 224, 230, 232, 233, 239, 241, 285, 286, 308, 309], "strength": [39, 40, 52, 80, 81, 84, 270, 271, 272, 323], "plist": [39, 84, 130, 271], "ramanujan_filter_prang": [39, 75, 82, 83, 84, 270, 272], "pmin": [39, 84, 271], "penrgi": 39, "x_temp": [39, 40], "ceil": [39, 40, 134, 173, 280, 293], "plot_sp_rfb_for_period_estimation_from_sign": [39, 45, 345], "sy": 40, "linalg": 40, "la": 40, "period_est_l1_1l": 40, "regularised_period_estim": [40, 59, 75, 80, 82, 83, 270, 271, 352, 354], "cvxsol": [40, 59, 80, 272], "period_est_l1_0l": 40, "period_est_l2_1l": 40, "No": [40, 100, 101], "period_est_rbf": 40, "411": 40, "repit": [40, 81, 84, 270, 271], "fft": [40, 99, 109, 111, 134, 135, 139, 140, 171, 173, 264, 278, 279, 280, 293, 314], "fq": 40, "dft": [40, 75, 80, 134, 135, 272, 277, 280, 281, 293, 294, 338, 349], "omega": 40, "penal": [40, 80, 272], "426": 40, "427": 40, "428": 40, "plot_sp_rfb_for_period_estimation_with_sparse_penalti": [40, 45, 345], "four": 41, "dft_analysi": [41, 135, 139, 140, 263, 277, 280, 281, 293, 294, 321], "boxcar": [41, 135, 321], "dft_synthesi": [41, 134, 277, 280, 281, 293, 294, 321], "amplitud": [41, 43, 51, 74, 77, 137, 138, 141, 142, 143, 266, 277, 307, 320, 332], "\u03bcv": [41, 43], "magnitud": [41, 43, 52, 87, 88, 134, 135, 139, 140, 141, 142, 143, 173, 221, 222, 245, 262, 263, 277, 280, 281, 282, 283, 293, 294, 323], "spectrum": [41, 95, 134, 135, 139, 140, 150, 151, 171, 262, 263, 264, 282], "phase": [41, 63, 97, 105, 106, 109, 111, 134, 135, 173, 263, 265, 266, 280, 281, 282, 283, 293, 294, 349], "effect": [41, 48, 101, 135, 141, 142, 143, 269, 279, 291, 324], "hamm": 41, "mxt": [41, 43, 44, 280, 281, 293, 294, 337], "pxt": [41, 43, 44, 144, 151, 280, 281, 293, 294, 337], "stft_analysi": [41, 43, 44, 134, 135, 277, 280, 281, 294, 337], "winlen": [41, 43, 44, 103, 104, 173, 277, 280, 281, 293, 294, 296, 336, 337], "blackmanharri": [41, 43, 44, 134, 277, 280, 281, 293, 336, 337], "nfft": [41, 43, 44, 111, 139, 140, 146, 150, 151, 173, 264, 280, 281, 293, 294, 336, 337], "invers": [41, 76, 134, 135, 174, 186, 226, 227, 277, 280, 281, 293, 294], "stft_synthesi": [41, 134, 135, 277, 280, 281, 293, 337], "spectrogram": [41, 43, 293], "2080": 41, "xa": [41, 331], "ifrft": [41, 42, 134, 135, 174, 186, 226, 277, 280, 281, 293, 294, 331], "yi": [41, 331], "url": 41, "wavfil": [41, 43, 44, 173, 262, 263, 280, 281], "uncom": 41, "ipython": [41, 43], "path1": 41, "com": [2, 41, 43, 44, 67, 87, 173, 239, 253, 256, 257, 262, 263, 280, 281, 347, 352, 353, 354], "web": [41, 56], "blob": 41, "sound": 41, "violin": 41, "b3": 41, "wav": [41, 43, 44, 173, 262, 263, 280, 281], "path2": 41, "sing": [41, 43], "femal": [41, 43], "myfil": 41, "decompis": 41, "sinasod": [41, 134, 135, 277, 280, 281, 282, 293, 294], "track": [41, 44, 81, 84, 270, 271, 277, 280, 281, 283, 284, 352, 353, 354], "fxst": [41, 43, 44, 277, 280, 281, 336], "mxst": [41, 43, 44, 277, 280, 281, 336], "pxst": [41, 43, 44, 277, 280, 281, 336], "sinemodel_analysi": [41, 43, 44, 134, 135, 277, 281, 293, 294, 336], "3001": [41, 43, 44, 280, 281, 336], "750": [41, 43, 44, 280, 281, 336], "maxn_sin": [41, 43, 44, 280, 281, 336], "mindur": [41, 43, 44, 277, 280, 281, 336], "freq_devoffset": [41, 43, 44, 277, 280, 281, 336], "freq_devslop": [41, 43, 44, 277, 280, 281, 336], "sinemodel_synthesi": [41, 43, 44, 134, 135, 277, 280, 293, 294, 336], "crop_end": [41, 44, 280, 281, 336], "511": 41, "auido": 41, "441": [41, 43, 76], "fxt1": [41, 43, 44, 280, 281], "tx": [41, 43, 44, 140, 280, 281, 320], "514": 41, "x_r": [41, 43], "mxrt": [41, 43], "pxrt": [41, 43], "515": 41, "singing_female_recon": 41, "int16": [41, 43], "singing_female_residu": 41, "272243": 41, "44100": 41, "363": [41, 43], "273000": [41, 43], "save": [41, 239, 254, 255], "embed_audio": 41, "attribut": [41, 76, 228, 255, 256], "control": [41, 141, 143, 181, 188, 313], "githubusercont": [41, 253, 256, 257], "master": 41, "src": 41, "residu": [41, 135, 178, 181, 182, 183, 185], "161": [41, 45], "plot_sp_analysis_sythesis_model": [41, 45, 345], "upper": [42, 78, 97, 98, 99, 103, 137, 138, 141, 142, 143, 152, 153, 154, 171, 174, 186, 226, 227, 288, 314], "plot_sp_fractional_fourier_transform": [42, 45, 345], "also": [43, 52, 71, 81, 84, 138, 147, 157, 158, 159, 160, 167, 168, 170, 222, 236, 239, 241, 253, 254, 257, 258, 270, 271, 291, 314, 323, 324, 352, 353, 354], "examin": 43, "0db": 43, "xd": [43, 76], "mxdt": 43, "pxdt": 43, "x_d": 43, "sinmodel_recons_": 43, "sinmodel_residual_": 43, "369": [43, 45], "plot_sp_sinusodal_model_analysis_synthesi": [43, 45, 345], "mlenddataset": [44, 173, 253, 256, 257, 262, 263, 280, 281], "hwd_hp_hum_1": [44, 173, 262, 263, 280, 281], "downloaded_fil": [44, 173, 262, 263, 280, 281], "gridspec_kw": [2, 44, 173, 280, 281, 293, 294], "set_xlim": [2, 44, 173, 199, 200, 204, 223, 224, 280, 281, 285, 286, 293, 294], "set_xticklabel": [44, 173, 280, 281, 293, 294], "stft": [44, 134, 135, 277, 280, 281, 294], "nfrequenc": 44, "sine": [44, 277, 280, 281, 282], "recon": [44, 280, 281, 294], "497": [44, 45], "plot_sp_sinusodal_model_example_sound": [44, 45, 345], "signal_process": [45, 345], "test_2group": [47, 48, 342], "phyaatdataset": 47, "phyaat_attentionscoredata_v1": 47, "d1": 47, "snrdb": 47, "lengthstim": 47, "l3": 47, "sid": 47, "attentionscor": 47, "d2": 47, "renam": 47, "column": [47, 161, 162, 163, 164, 166, 176, 259, 260, 261, 287, 290, 297, 298, 302], "att_sem0_noisefre": 47, "att_sem1_noisefre": 47, "d3": 47, "d4": 47, "att_sem0_noisi": 47, "att_sem1_noisi": 47, "d12": 47, "merg": 47, "d34": 47, "d12_np": 47, "to_numpi": [47, 253, 256, 257], "d34_np": 47, "exp1": 47, "exp2": 47, "exp3": 47, "snrdb_label": 47, "inf": [47, 91, 141, 142, 143, 157, 253, 254, 257, 305, 314], "free": 47, "infti": [47, 314], "attens": 47, "noisi": [47, 92, 94, 136, 156, 158, 169, 170, 172, 221, 222, 276, 307, 314], "102": 47, "412": [47, 49], "plot_stats_group_boxplot": [47, 49, 345], "tpass": [48, 291, 292], "df1": [48, 291], "df2": [48, 291], "tval": [48, 291], "printthr": [48, 291, 292], "print_round": [48, 291, 292], "pre_test": [48, 291], "effect_s": [48, 291], "tabl": [48, 287, 290, 291, 292], "shapiro": [48, 291], "408": 48, "9865": 48, "signific": 48, "indic": [48, 78, 100, 101, 145, 193, 222, 236, 241, 273, 288], "2922": 48, "cohensd": [48, 291], "3199": 48, "0196": 48, "3719": 48, "wilcoxon": [48, 291], "sign": [48, 74, 77, 291, 306, 307, 332], "rank": [48, 291], "028": 48, "407988": [48, 291], "986549": [48, 291], "019631": [48, 291], "371901": [48, 291], "wilcox": [48, 291], "028014": [48, 291], "000000": [48, 291], "mean_diff": [48, 291], "292212": [48, 291], "319897": [48, 291], "7441": 48, "9564": 48, "9299": 48, "9747": 48, "homogen": [48, 291], "leven": [48, 291], "5793": 48, "3182": 48, "small": [48, 67, 74, 77, 97, 178, 183, 222, 236, 238, 239, 243, 313, 314, 332, 353], "suggest": [48, 52, 54, 221, 222, 323], "popul": 48, "1571": 48, "1371": 48, "n1": [48, 108, 109, 111, 199, 200, 204, 208, 223, 224, 285, 286], "n2": [48, 108, 199, 200, 204, 208, 223, 224, 285, 286], "indept": 48, "7572": 48, "3137": 48, "7248": 48, "3521": 48, "shapiro_x1": [48, 291], "744053": [48, 291], "956390": [48, 291], "shapiro_x2": [48, 291], "929865": [48, 291], "974728": [48, 291], "579284": [48, 291], "318210": [48, 291], "757153": [48, 291], "313718": [48, 291], "ranksum": [48, 291], "724771": [48, 291], "352089": [48, 291], "157087": [48, 291], "137073": [48, 291], "127": [48, 49, 178, 183, 293, 294, 324], "plot_stats_testing_2groups_demo": [48, 49, 345], "539": 49, "statist": [49, 58, 60, 220, 239, 287, 288, 290, 345, 347, 349], "scalogramcwt": [51, 105, 106, 107, 108, 110, 111, 112, 113, 320], "compare_cwt_exampl": [51, 109, 320], "load_data": [51, 179, 264, 306, 313, 320, 324], "eegsample_1ch": [51, 320], "wavelet_analysi": [51, 53, 345], "plot_sp_scalogram_cwt_exampl": [51, 53, 345], "convens": 51, "eeg_sample_1ch": [51, 52, 71, 109, 113, 115, 116, 117, 118, 120, 121, 123, 128, 129, 134, 135, 179, 264, 306, 324], "predefin": [51, 228], "xw": [51, 105, 106, 107, 108, 109, 110, 111, 112, 320], "wtype": [51, 105, 106, 107, 108, 109, 110, 111, 112, 320], "plotpsd": [51, 105, 106, 107, 108, 109, 110, 111, 112, 320], "sinc": [51, 52, 74, 77, 89, 109, 110, 137, 138, 146, 152, 153, 154, 171, 238, 239, 278, 279, 293, 320, 323, 332], "custom": [51, 141, 142, 143, 145, 147, 181, 182, 183, 185, 223, 224, 285, 286, 339, 349], "f0": [51, 87, 88, 105, 106, 109, 110, 111, 112, 173, 320], "q": [51, 75, 106, 109, 111], "domain": [51, 105, 106, 107, 108, 110, 112, 276, 306, 314, 320], "plotw": [51, 106, 109, 111, 320], "cmaxican": [51, 109, 111, 112, 320], "cshannon": [51, 109, 110, 111, 320], "background": [52, 136, 177, 178, 301, 303, 323], "classic": [52, 137, 138, 174, 226, 323], "spectral": [52, 111, 137, 138, 144, 157, 158, 165, 169, 170, 171, 172, 179, 181, 182, 183, 184, 185, 262, 263, 289, 306, 323, 339, 349, 352, 353, 354], "techniqu": [52, 323, 352, 353, 354], "It": [52, 67, 101, 105, 106, 107, 108, 110, 112, 114, 150, 151, 152, 153, 154, 157, 159, 160, 167, 168, 177, 221, 222, 229, 233, 235, 238, 239, 245, 249, 258, 269, 273, 285, 286, 313, 314, 320, 323, 324, 332, 349], "famili": [52, 141, 142, 143, 306, 307, 323], "straightforward": [52, 157, 323], "repres": [52, 323], "particular": [52, 323], "back": [52, 93, 306, 323, 348], "machan": [52, 323], "compress": [52, 74, 77, 323, 332], "approach": [52, 76, 80, 139, 141, 142, 143, 174, 179, 226, 272, 276, 279, 323, 324, 330], "literatur": [52, 221, 222, 323], "coeffieci": [52, 323], "theta": [52, 93, 204, 215, 265, 323], "tild": [52, 323], "2log": [52, 323], "coeffient": [52, 323], "too": [52, 100, 101, 109, 136, 239, 256, 291, 323], "One": [52, 67, 222, 245, 255, 292, 314, 323, 347], "outlier": [52, 94, 141, 142, 143, 287, 290, 323], "deviat": [52, 76, 78, 114, 124, 127, 131, 132, 146, 150, 151, 223, 224, 253, 254, 257, 280, 283, 285, 286, 288, 323], "interquartil": [52, 78, 288, 323], "respect": [52, 80, 88, 137, 138, 147, 159, 160, 167, 168, 258, 272, 323], "accord": [52, 269, 288, 323], "theori": [52, 58, 60, 165, 313, 314, 323, 349], "later": [52, 254, 305, 314, 323], "outsid": [52, 323], "thei": [52, 59, 74, 77, 141, 142, 143, 147, 151, 239, 242, 288, 314, 323, 332, 353], "reprepres": [52, 323], "weir": [52, 323], "wai": [52, 59, 74, 77, 87, 88, 137, 138, 292, 302, 313, 314, 323, 332], "procedur": [52, 323], "donoho": [52, 323], "johnston": [52, 323], "ideal": [52, 242, 244, 320, 323], "spatial": [52, 136, 285, 286, 323, 339, 349], "adapt": [52, 323], "shrinkag": [52, 319, 340, 349], "biometrika": [52, 323], "1994": [52, 323], "455": [52, 323], "api": [52, 136, 323, 349, 350, 351, 352, 353, 354], "wavelet_filt": [52, 179, 307, 323, 328], "wavelet_filtering_win": [52, 306, 323], "implement": [52, 76, 108, 109, 111, 186, 226, 227, 276, 323], "chosen": [52, 141, 142, 143, 221, 222, 293, 323], "support": [52, 59, 65, 323], "want": [52, 323], "filter_out_below": [52, 306, 307, 323], "tune": [52, 141, 142, 143, 323], "doc": [52, 62, 323, 352, 353, 354], "section": [52, 179, 323, 328, 348], "wpd_maxlevel": [52, 141, 142, 143, 306, 307], "614": [52, 53], "plot_sp_wavelet_filtering_exampl": [52, 53, 345], "618": 53, "report": 54, "modif": 54, "discuss": 54, "forum": 54, "issu": [54, 352, 353, 354], "contribut": 55, "date": [56, 68], "august": [56, 81, 84, 144, 270, 271, 352, 354], "2024": [56, 352, 354], "novemb": [56, 352, 353, 354], "2023": [56, 144, 352, 353, 354], "v": [56, 75, 80, 81, 84, 85, 109, 111, 190, 193, 194, 195, 196, 198, 199, 200, 204, 205, 217, 218, 221, 222, 223, 224, 230, 232, 233, 236, 237, 238, 239, 264, 270, 271, 272, 285, 286], "march": [56, 352, 353, 354], "2022": [56, 352, 353, 354], "jan": [56, 352, 353, 354], "oct": [56, 352, 353, 354], "2021": [56, 347, 352, 353, 354], "apr": [56, 352, 353, 354], "mar": [56, 352, 353, 354], "skip": [56, 84, 271, 352, 353, 354], "haha": 56, "dec": [56, 352, 353, 354], "2019": [56, 141, 143, 352, 353, 354], "instal": [2, 57, 60, 62, 344, 352, 353, 354], "latest": [57, 58, 344], "offici": [57, 58, 344], "system": [57, 59, 67, 75, 80, 81, 84, 147, 152, 153, 154, 270, 271, 272, 314, 344], "maco": [57, 59, 344], "linux": [57, 59, 344], "packag": [57, 59, 319, 340, 344, 349], "pip": [2, 57, 59, 344], "conda": [57, 59, 62, 344], "world": [58, 69, 349], "Or": [58, 114, 165, 261, 274, 289, 298, 313], "exmapl": 58, "electroencephalographi": [58, 60, 63, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 146, 150, 349], "machin": [58, 60, 349], "complet": [58, 63, 239, 349], "stabl": [59, 88, 108, 136], "built": [59, 253, 254, 257], "plateform": 59, "platform": 59, "envrion": 59, "instruct": 59, "ara": 59, "64bit": 59, "instanc": [59, 76, 353], "homebrew": 59, "brew": 59, "python3": 59, "manag": [59, 239], "anaconda": 59, "miniconda": 59, "miniforg": 59, "administr": 59, "permiss": 59, "those": [59, 114, 141, 142, 143, 238], "Then": 59, "pip3": 59, "venv": 59, "spkitn": [], "env": 59, "forg": 59, "freez": 59, "virtualenv": 59, "environ": 59, "pipelin": [59, 179, 185, 339, 347, 349], "comlet": 59, "share": 59, "might": [59, 68, 137, 138, 238, 239], "conflict": 59, "scikit": [59, 62], "resolv": [59, 293], "mai": [59, 165, 313], "possibl": [59, 88, 137, 138, 141, 142, 143, 314], "up": [59, 68, 175, 176, 253, 254, 257], "prerequit": 59, "pywavelet": 59, "pylfsr": 59, "h5py": 59, "pyedflib": [2, 59], "read_bdf": [2, 59, 65, 229, 230, 232, 233, 311], "cvxpy": [59, 80, 272], "argument": [59, 114, 138, 147, 150, 151, 289, 306, 314], "guid": [60, 68], "under": [60, 67, 108, 109, 111, 251, 252, 266, 347, 348], "develop": [60, 108, 109, 111, 266, 347, 348, 353], "minimum": [62, 88, 157, 173, 239, 251, 252, 253, 254, 255, 269, 280, 283, 284], "purpos": 62, "threadpoolctl": 62, "cython": 62, "benchmark": 62, "memory_profil": 62, "pytest": 62, "cov": 62, "ruff": 62, "272": 62, "black": [62, 136, 249], "mypi": 62, "pyamg": 62, "polar": [62, 93], "pyarrow": 62, "copybutton": 62, "numpydoc": 62, "pillow": 62, "pooch": 62, "prompt": 62, "sphinxext": 62, "opengraph": 62, "plotli": 62, "lock": 62, "mainten": 62, "preprocess": [63, 239, 349], "electrocardiographi": [63, 349], "clean": [63, 97, 152, 153, 266, 284, 349], "detect": [63, 87, 97, 173, 222, 236, 238, 239, 262, 263, 349], "localis": [63, 236, 237, 238, 239, 242, 243, 245, 349], "rt": [63, 222, 236, 239, 349], "identifi": [63, 141, 142, 143, 239, 244, 245, 349], "attenu": [65, 141, 142, 143], "todo": [67, 78, 81, 84, 89, 90, 91, 92, 93, 95, 97, 99, 103, 104, 113, 133, 134, 135, 136, 160, 180, 185, 186, 220, 221, 222, 251, 252, 264, 265, 273, 277, 278, 280, 281, 282, 283, 284, 294, 305, 306, 307, 308, 314, 320], "utili": 67, "mount": 67, "plate": [67, 239, 241], "evenli": [67, 156], "space": [67, 86, 102, 156, 161, 162, 163, 164, 165, 166, 193, 194, 198, 199, 200, 259, 260, 261, 275, 297, 298, 313, 314], "700mm": 67, "apart": 67, "eletrophysiologi": 67, "cell": [67, 221, 222, 236, 237], "tissu": [67, 221, 222, 236, 237], "clinic": 67, "stimul": [67, 245], "certain": 67, "voltag": [67, 229, 239, 242, 244], "regular": [67, 255], "interv": 67, "multichannelsystem": [67, 239], "product": 67, "commonli": [67, 94, 223, 224, 285, 286, 313], "research": 67, "field": [67, 314, 324], "cardiac": [67, 221, 222, 236, 237], "electrophysiologi": 67, "recod": 67, "paramt": [67, 239], "essenti": [67, 109, 111, 194, 276], "files_nam": 67, "format": [67, 229, 233, 239, 246, 247, 248, 304], "html": [67, 136, 165, 289, 313], "modul": [68, 320, 349], "comprehens": 68, "continu": [68, 109, 313, 314, 319, 340, 349], "miss": [68, 100, 136, 175, 176], "docstr": 68, "been": [68, 347], "written": [68, 233, 255], "ecg": [63, 69, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 308, 309, 349], "optic": [69, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 349], "ppg": [69, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 181, 183, 184, 187, 188, 349], "photoplethysmogram": [69, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 349], "gsr": [69, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 349], "eda": [69, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 349], "galvan": [69, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 349], "skin": [69, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 349], "respons": [69, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129, 349], "1d": [34, 69, 74, 77, 78, 81, 84, 86, 89, 92, 94, 96, 98, 99, 100, 102, 103, 105, 106, 107, 108, 110, 112, 114, 119, 122, 124, 126, 127, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 147, 156, 157, 158, 159, 160, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 184, 221, 222, 223, 224, 235, 236, 237, 242, 250, 251, 253, 254, 256, 257, 258, 264, 269, 270, 271, 273, 275, 276, 277, 279, 280, 281, 282, 285, 286, 287, 288, 290, 291, 293, 294, 296, 305, 306, 307, 308, 309, 324, 328, 349], "arbitari": [69, 103, 104, 349], "patch": [69, 104, 349], "variou": [71, 314, 352, 353, 354], "taken": 71, "eeg_sample_artifact": [71, 115, 116, 117, 118, 119, 121, 123, 128, 129], "x_raw": [71, 119, 120], "ecg_sampl": [71, 116, 117, 118, 119, 120, 121, 123, 128, 129, 221, 222], "collect": [71, 284], "devic": [71, 228], "optical_sampl": [71, 97, 102, 115, 116, 117, 118, 119, 120, 121, 123, 129, 137, 138, 139, 162, 165, 265, 266, 275, 276, 295, 296, 313], "camera": [71, 128], "speci": [71, 128], "ppg_sampl": [71, 115, 116, 117, 118, 119, 120, 121, 123, 128, 181, 183, 184, 187, 188, 328], "known": [71, 117, 123, 139, 140, 255, 276, 324], "electroderm": [71, 115, 116, 117, 118, 119, 120, 121, 123, 128, 129], "gsr_sampl": [71, 115, 116, 117, 118, 119, 120, 121, 128, 129], "eda_sampl": [71, 115, 116, 118, 119, 120, 121, 123, 128, 129], "i1": [72, 104], "ndist": [72, 114, 122], "angl": [72, 93, 114, 127, 136, 241, 273], "wrap": [72, 100, 101, 114, 132], "use_preset": [72, 114], "mclass_gauss": [72, 114, 122, 124, 127, 131, 132], "nclass": [72, 126, 255], "compand": [74, 77, 332], "law": [74, 77, 137, 138, 269, 313], "expand": [74, 77, 332], "laplacian": [74, 77, 332], "distribu": [74, 77, 165, 169, 269, 274, 313, 314, 332], "uniformli": [74, 77, 96, 332], "stretch": [74, 77, 332], "probabilti": [74, 77, 253, 254, 257, 332], "larg": [74, 77, 94, 239, 243, 254, 313, 332], "amplitutd": [74, 77, 332], "probabilt": [74, 77, 256, 332], "expend": [74, 77, 332], "revert": [74, 77, 332], "\u03bc": [74, 77, 137, 138, 165, 274, 313], "slightli": [74, 77, 332], "larger": [74, 77, 82, 83, 178, 183, 332], "dynam": [74, 77, 140, 314, 332], "cost": [74, 77, 332], "wors": [74, 77, 332], "proport": [74, 77, 332], "distort": [74, 77, 332], "nd": [74, 77, 78, 92, 236, 237, 238, 239, 243, 244, 245], "must": [74, 76, 77, 105, 106, 107, 108, 110, 112, 114, 147], "scalar": [74, 77, 92, 93, 100, 101, 107, 110, 114, 122, 124, 126, 127, 131, 132, 139, 140, 141, 142, 143, 145, 147, 169, 171, 172, 177, 185, 186, 217, 226, 227, 229, 236, 237, 238, 239, 241, 242, 243, 244, 255, 266, 277, 288, 291, 292, 305], "factor": [74, 77, 78, 106, 109, 111, 137, 138, 147, 235, 266, 279, 307, 313, 314, 332], "ident": [74, 77, 269], "bool": [74, 77, 80, 84, 89, 92, 98, 100, 101, 103, 109, 111, 114, 122, 124, 126, 127, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 164, 166, 167, 168, 169, 172, 173, 176, 177, 178, 200, 223, 224, 225, 229, 238, 239, 242, 243, 244, 245, 248, 249, 253, 254, 255, 257, 258, 259, 260, 261, 265, 266, 269, 271, 272, 285, 286, 288, 289, 290, 291, 292, 293, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309], "law_algorithm": [74, 77], "3000": [74, 77, 96], "y1": [74, 77, 98, 99, 159, 160, 161, 163, 164, 166, 167, 168, 182, 184, 187, 188, 199, 200, 211, 223, 224, 235, 249, 258, 259, 260, 261, 269, 285, 286, 297, 298, 313, 314, 332], "y2": [74, 77, 98, 99, 159, 160, 161, 163, 164, 166, 168, 184, 187, 188, 199, 200, 211, 223, 224, 235, 258, 259, 261, 269, 285, 286, 297, 298, 313, 314, 332], "histogram": [74, 77, 94, 96, 157, 225], "nmax": 75, "rowsiz": 75, "rfb": [75, 84, 270, 271], "period": [75, 80, 81, 82, 83, 84, 141, 142, 143, 270, 271, 272, 306, 307, 338, 349, 352, 353, 354], "row": [75, 104, 114, 122, 124, 126, 127, 131, 132, 176, 247], "naturalbasi": [75, 80, 272], "relev": 75, "paper": [75, 141, 142, 143], "tenneti": [75, 80, 81, 84, 270, 271, 272], "vaidyanathan": [75, 80, 81, 84, 270, 271, 272], "nest": [75, 80, 272, 304], "matric": [75, 80, 114, 122, 215, 239, 272, 353], "represent": [75, 80, 144, 272], "ieee": [75, 76, 80, 81, 84, 137, 165, 270, 271, 272, 313], "transact": [75, 76, 80, 165, 238, 239, 272, 313], "vol": [75, 80, 272], "3736": [75, 80, 272], "juli": [75, 80, 272], "2015": [75, 80, 81, 84, 270, 271, 272], "implet": [75, 80, 81, 84, 270, 271, 272], "matlab": [75, 80, 81, 84, 270, 271, 272], "caltech": [75, 80, 81, 84, 270, 271, 272], "edu": [75, 80, 81, 84, 270, 271, 272], "dsp": [75, 80, 81, 84, 270, 271, 272], "student": [75, 80, 81, 84, 270, 271, 272, 291], "srikanth": [75, 80, 81, 84, 270, 271, 272], "max_pca_compon": 76, "n_pca_compon": 76, "random_st": 76, "fit_param": 76, "max_it": 76, "useful": 76, "usual": [76, 80, 158, 170, 171, 229, 238, 239, 272, 313, 324], "nf": [76, 255, 256], "choosen": [76, 239, 243], "matirx": [76, 255], "dimension": [76, 86, 92, 102, 163, 165, 193, 223, 224, 275, 285, 286, 313], "reduct": 76, "suppli": [76, 114, 147, 253, 254, 257, 289], "recomposit": [76, 277], "randomst": 76, "specifi": [76, 306], "iter": [76, 98, 103, 104, 181, 182, 184, 185, 255, 266], "substact": 76, "pca_components_": 76, "pca_explained_variance_": 76, "unmixing_matrix_": 76, "unmix": 76, "mixing_matrix_": 76, "whitener_": 76, "deviaat": 76, "self": [76, 161, 162, 163, 170, 193, 200, 253, 254, 257, 259, 260, 274, 314, 349], "ndarrai": [76, 86, 233, 253, 254, 255, 257], "xdata": 76, "tranform": 76, "whiten": [76, 79], "normliz": 76, "normail": 76, "hyv\u00e4rinen": 76, "1999": 76, "fast": [76, 174, 186, 226, 227], "robust": [76, 94, 136], "neural": 76, "network": 76, "626": 76, "bell": [76, 314], "sejnowski": 76, "1995": 76, "maxim": 76, "blind": 76, "separ": [76, 114, 124, 131], "deconvolut": 76, "1129": 76, "1159": 76, "lee": 76, "girolami": 76, "subgaussian": 76, "supergaussian": 76, "417": 76, "ablin": 76, "cardoso": 76, "gramfort": 76, "2017": 76, "faster": [76, 109, 111], "precondit": 76, "hessian": 76, "arxiv": [76, 276], "1706": 76, "08171": 76, "nsampl": 76, "weight": [76, 97, 133, 253, 255, 256, 257], "n_channel": [76, 265, 266], "inplac": 76, "divis": 77, "a_law": [77, 269], "iqr": [78, 287, 288, 290, 306, 307, 323], "include_low": [78, 288], "include_upp": [78, 288], "return_lim": 78, "identyfi": 78, "q1": [78, 106, 288, 306, 307, 320], "q3": [78, 288, 306, 307], "stander": 78, "exclud": [78, 139, 140, 165, 185, 200, 220, 222, 223, 224, 229, 236, 237, 238, 239, 241, 248, 273, 285, 286, 287, 288, 290], "At": 78, "least": [78, 137, 138, 176, 194, 207, 313], "limit": [78, 137, 138, 222, 239, 247, 249, 253, 254, 257, 288, 314], "lt": [78, 288], "ul": 78, "idx_bin": [78, 288], "ut": [78, 288], "apply_whiten": 79, "TO": [79, 141, 142, 143], "BE": [79, 147], "svd": [79, 137, 138, 157, 158, 165, 169, 170, 171, 172, 349, 352, 353, 354], "covari": [79, 114, 122], "fit_transform": 79, "xpca": 79, "fun": [80, 272, 314], "instead": [80, 81, 84, 111, 145, 175, 221, 222], "That": [80, 81, 84, 222, 250], "sequenc": [80, 81, 84, 114, 122, 137, 138, 144, 157, 159, 160, 167, 168, 185, 220, 229, 258, 270, 271, 272, 287, 309], "farrai": [80, 272], "multipli": [80, 114, 132, 248, 272], "regularaz": [80, 272], "_1": [80, 272], "_2": [80, 272], "wether": [80, 272], "solver": [80, 272], "period_energi": [80, 272], "vecotor": [80, 272], "apply_averag": [81, 84, 270, 271], "penalt": [81, 270], "proc": [81, 84, 270, 271], "conf": [81, 84, 270, 271], "acoust": [81, 84, 270, 271], "speech": [81, 84, 270, 271, 313], "brisban": [81, 84, 270, 271], "april": [81, 84, 270, 271], "properti": [81, 84, 136, 248, 249, 270, 271, 289], "european": [81, 84, 270, 271], "confer": [81, 84, 270, 271], "franc": [81, 84, 270, 271], "scaler": [82, 83, 139, 161, 162, 163, 164, 165, 166, 168, 179, 182, 187, 239, 241, 259, 260, 261, 269, 297, 298], "ratio": [82, 83, 92, 136], "create_dictionari": [82, 83, 270, 271, 272], "smallest": [84, 223, 224, 271, 285, 286], "recomend": [84, 271], "deault": [84, 89, 103, 104, 140, 266, 271, 309], "iftru": [84, 271], "singular": [85, 172, 314], "truncat": 85, "mxn": 85, "mxm": 85, "nxn": 85, "cx": 85, "141": [85, 104], "c_x": 85, "142": [85, 104], "allclos": 85, "seri": [86, 169, 282], "signal_embed": [86, 102, 275], "create_multidim_space_sign": 86, "marker": [86, 140, 289], "pfreq": [87, 88, 283], "pmag": [87, 88, 283], "f0c": 87, "mismatch": [87, 88], "frequneci": 87, "candid": [87, 88, 173], "fundament": [87, 88, 173, 314], "f0error": 87, "correspond": [87, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 135, 240, 241, 243, 248, 263, 275, 282], "ref": [87, 109, 111, 320], "beauchamp": 87, "maher": 87, "mtg": 87, "sm": 87, "tool": [87, 230, 232], "f0min": [88, 173], "f0max": [88, 173], "f0_pre": 88, "f0max_err": 88, "previou": [88, 175, 176, 283, 353], "frame": [88, 173, 280, 281, 283, 284, 293, 294], "verticle_stack": [89, 90, 308, 309], "symmetr": [89, 90, 100, 101, 141, 142, 143, 182, 187, 306, 307, 308, 309, 328], "maxlevel": [89, 90, 308, 309], "inpterp": 89, "plottyp": 89, "wpa": [89, 305, 309], "tempor": [89, 140, 158, 170, 251, 252, 308, 309, 313, 314, 319, 338, 340, 349], "discard": [89, 309], "eqaul": [89, 309], "shift": [89, 96, 105, 106, 109, 111, 141, 142, 143, 147, 151, 177, 239, 243, 251, 252, 266, 307, 309], "stack": [89, 90, 104, 308, 309], "last": [89, 156, 185, 238, 239, 242, 244, 255, 276, 309], "abs_log": 89, "abs_log_p1": 89, "abs_log10": 89, "abs_log10_p1": 89, "wk_seq": [89, 309], "wpa_coeff": [89, 305, 309, 352, 354], "wavelet_packet_decomposit": [89, 305, 308, 309], "wk": [89, 308, 309], "256": [89, 177, 309, 324], "wavalet": [91, 305], "return_nois": 92, "sig_pw": 92, "noise_pw": 92, "sig_pw_db": 92, "noise_pw_db": 92, "desir": 92, "decibl": 92, "agg": 93, "aggreg": [93, 239, 241, 273], "direct": [93, 136, 193, 239, 241, 273], "arrow": [93, 136, 239, 241, 273], "coordin": [93, 192, 233], "cartesian": [93, 192], "aaverg": 93, "median": [93, 223, 224, 239, 241, 242, 264, 285, 286, 287, 290, 306, 307], "theta_avg": 93, "show_compass": 93, "compass": [93, 239, 241, 273], "arctan2": [93, 136, 273], "thetas_avg": 93, "9525995459333507": 93, "fd": [94, 137, 138, 157, 159, 160, 167, 168, 225, 258, 268, 269], "freedman": [94, 157, 269], "diaconi": [94, 157, 269], "resili": 94, "account": [94, 313], "doan": [94, 269], "sturg": [94, 269], "better": [94, 137, 138, 139, 170, 253, 257, 291, 293], "scott": [94, 269], "stone": 94, "leav": [94, 141, 142, 143], "integr": 94, "regard": 94, "rice": [94, 269], "doe": [94, 100, 101, 134, 137, 138, 179, 293], "overestim": 94, "optim": [94, 157, 159, 160, 167, 168, 206, 213, 225, 254, 255, 258, 268, 306, 307, 323], "underestim": 94, "root": [94, 253, 254, 257], "excel": [94, 239], "program": 94, "its": [94, 233, 244, 249, 269], "speed": 94, "simplic": 94, "bw": [94, 255], "bw1": 94, "bw2": 94, "blackman": [95, 282, 293], "harri": [95, 282, 293], "posit": [95, 134, 135, 152, 153, 154, 179, 182, 187, 239, 242, 244, 245, 320, 328], "sinc_dirichlet": 95, "window_funct": 95, "5d": [95, 146, 150], "5b36": 95, "20window": 95, "5bedit": [95, 146, 150], "lmag": 95, "cdf": [96, 137, 138, 235, 269, 313], "cumul": [96, 332], "disctribu": [96, 332], "anf": [96, 332], "x_cdf": 96, "low_resolut": [96, 332], "reduc": [96, 176, 235, 253, 254, 332], "resolut": [96, 137, 144, 147, 235, 293, 309], "cumulative_distribution_funct": [96, 332], "xp": [97, 214, 255, 265, 266], "5707963267948966": 97, "141592653589793": [97, 204, 208], "domin": [97, 139, 140], "flatuat": 97, "instani": 97, "combin": [97, 104, 138, 314], "pahs": [97, 282], "xpc": 97, "xp_new": 97, "xpr": 97, "phase_map": [97, 139, 140, 266], "dominent_freq": [97, 140, 265, 266], "phase_map_reconstruct": [97, 139, 140, 265], "dominent_freq_win": [97, 139, 265, 266], "amplitude_equ": [97, 139, 140, 265, 266], "add_sig": [97, 265, 266], "phi": [97, 204, 265, 266], "phi_c": 97, "return_ful": 98, "forward": [98, 179, 276], "backward": [98, 179, 276], "convolut": [98, 99, 100, 101, 109, 111, 133, 176, 181, 182, 184, 239, 276], "convfb": [98, 181, 182, 184, 276, 328], "conv_fb": 98, "recurs": [98, 177, 324], "gaussian_kernel": [98, 99, 184, 187], "itr": 98, "z": [99, 204, 255, 261, 274, 298, 349], "conv1d_fb": 99, "convolution_theorem": 99, "y2x": 99, "denormalise_k": [100, 101], "constant": [100, 101, 137, 138, 141, 142, 143, 146, 150, 151, 165, 264, 274, 306, 307, 313, 320], "propog": [100, 101], "corrupt": [100, 101], "fashion": [100, 101], "simpli": [100, 101, 221, 236, 237, 248, 313], "doen": 100, "adjust": [100, 101, 239, 243], "accordingli": [100, 101, 239, 243], "NOT": [100, 101, 137, 138, 141, 142, 143], "kernel_unnorm": [100, 101], "kernel_norm": [100, 101], "denorm_kernel": [100, 101], "fill": [100, 101, 175, 176, 240, 241, 249], "symm": [100, 101], "flag": [100, 101, 239, 244, 353], "circular": [100, 101, 103, 147, 203], "arrrai": [100, 101], "x_nan": [100, 176], "cx1": 100, "cx2": 100, "even": [101, 176], "replac": [101, 239, 241], "lag": [102, 275], "bipolar": [103, 199, 200, 204, 223, 224, 285, 286], "sg_polyord": [103, 104, 177, 178, 182, 185, 199, 200, 204, 221, 222, 223, 224, 236, 237, 239, 241, 243, 245, 246, 247, 250, 276, 285, 286, 306, 307, 324], "max_dxdt": [103, 104], "kwarg": [103, 114, 122, 124, 125, 127, 131, 132, 136, 139, 140, 141, 142, 143, 147, 151, 221, 222, 236, 237, 238, 239, 241, 242, 289, 295, 296], "sampel": 103, "re": [2, 103, 104, 144, 147, 148, 152, 153, 154, 155, 165, 189, 313], "roughli": 103, "geometr": 103, "vari": [103, 277, 314], "heigher": [103, 104, 182, 187, 239], "smoother": [103, 104, 182, 187, 239], "curvi": 103, "deafult": [103, 104, 126, 134, 135, 136, 139, 140, 141, 142, 143, 145, 147, 150, 151, 169, 172, 181, 185, 239, 242, 243, 248, 253, 257, 290, 291, 292, 293, 305, 306, 307], "deriv": [103, 104, 178, 182, 183, 187, 221, 222, 236, 237, 276, 320, 328], "smoothen": [103, 104], "until": [103, 104], "achiv": [103, 104, 139], "regardless": [103, 104, 239], "deafault": [103, 104, 239], "pixel": [104, 255], "height": [104, 239, 242, 249, 253, 256, 257], "patchi": 104, "i2": 104, "i3": 104, "rbg": 104, "t0": [105, 106, 109, 111, 173, 222, 236, 237, 239, 249, 279], "gabor": [105, 109, 111, 319, 340, 349], "technic": [105, 314, 320], "psi": [105, 106, 107, 108, 110, 112, 320], "t_0": [105, 106, 320], "jf_0": [105, 106, 112, 320], "f_0": [105, 106, 110, 112, 173, 320], "jt_0": [105, 320], "oscil": [105, 109, 111, 112, 320], "frequenct": 105, "span": [105, 106, 107, 108, 110, 112], "frquenci": [105, 106, 108, 109, 110, 111, 112, 139, 314], "oscillas": 105, "suggeest": [105, 106, 109, 110, 111, 112], "wt": [105, 106, 107, 108, 110, 112, 320], "wf": [105, 106, 107, 108, 110, 112, 320], "effici": [105, 106, 107, 108, 110, 112, 350, 351, 352, 353, 354], "easi": [105, 106, 107, 108, 110, 112], "gabor_wavelet": 105, "a1": 105, "a2": 105, "wt1": [105, 106, 107, 108, 110, 112, 320], "wf1": [105, 106, 107, 108, 110, 112, 320], "wt2": [105, 106, 107, 108, 110, 112, 320], "wf2": [105, 106, 107, 108, 110, 112, 320], "jft_0": [106, 320], "parametr": 106, "spread": [106, 147, 181, 182, 187, 188, 320], "bandwidth": [106, 109, 110, 111, 320], "gauss": [106, 109, 111, 181, 319, 340, 349], "q2": [106, 320], "f01": [106, 320], "f02": [106, 320], "2f": [106, 137, 138, 221, 222], "morlat": 107, "5t": [107, 320], "k_": [107, 320], "5w": [107, 320], "2e": [107, 112, 320], "morlet": [107, 109, 111, 319, 340, 349], "morlet_wavelet": [107, 109, 111], "sig1": 107, "sig2": 107, "poisson": [108, 109, 111, 319, 340, 349], "jw": [108, 320], "admidd": [108, 320], "const": [108, 320], "dt": [108, 245, 253, 254, 257, 276, 295, 320], "jt": [108, 112, 320], "unit": [108, 141, 142, 143, 157, 159, 167, 168, 242, 246, 247, 248, 258, 314, 320], "integ": [108, 157, 159, 160, 167, 168, 256, 258, 269, 320], "exactli": [108, 109, 111], "compatibil": [108, 109, 111], "framework": [108, 109, 111], "yet": [108, 109, 111, 349], "produc": [108, 136, 147, 239, 353], "poisson_wavelet": [108, 109, 111], "fftmeth": [109, 111], "frequeci": [109, 111, 277, 293, 313], "scall": [109, 111, 229], "plote": [109, 111, 134, 243], "etc": [109, 111, 136, 239], "complext": 109, "accept": [109, 174, 226], "maxican": [109, 112, 319, 340, 349], "shannon": [109, 110, 111, 171, 319, 340, 349], "fw": [109, 110, 111], "logspac": [109, 111], "001": [109, 111, 251], "interg": [109, 111], "maxicanhat": [109, 111, 112], "complex_mexican_hat_wavelet": [109, 111, 112], "shannon_wavelet": [109, 110, 111], "xn": 109, "2j": [110, 320], "f_0t": [110, 320], "prod": [110, 320], "w_0": [110, 112, 305, 320], "leq": [110, 320], "dfft": 111, "experiment": [111, 141, 142, 143], "freq": [2, 111, 173], "hat": [112, 320], "erf": [112, 320], "slog": 113, "return_para": [114, 122, 124, 126, 127, 131, 132], "wrong": 114, "distibut": 114, "turn": [114, 150, 151, 223, 224, 285, 286, 352, 353, 354], "irrelev": 114, "func": [114, 239, 247], "1x2": [114, 127], "translat": [114, 127], "place": [114, 127, 282], "circl": [114, 127, 202], "radian": [114, 127, 136], "slope": [114, 124, 280, 283], "bia": [114, 124], "contact": [115, 121], "electrocardiogram": [115, 116, 117, 118, 119, 120, 121, 123, 128, 129], "egm_sampl": [115, 116, 117, 118, 119, 120, 123, 128, 129], "copper": [117, 123], "plat": [117, 123], "part": [117, 118, 119, 120, 123, 129, 226, 227, 305], "electrodermal_act": [117, 123], "fname": [118, 120, 130, 256], "eeg16secdata": 118, "pkl": [118, 120], "xtype": 119, "eeg16sec_artifact": 120, "x_fil": 120, "x_ica": 120, "aftifact": [120, 145], "x_atar_soft": 120, "x_atar_elim": 120, "electr": 121, "physiolog": [121, 158, 170, 276, 314, 324], "mixtur": 122, "arg": 125, "showplot": [126, 148], "rabbit": 128, "cam1": 128, "cam2": 128, "obtain": 129, "puls": 129, "sensor": [129, 147], "primitive_polynomials_gf2_dict": 130, "txt": [130, 301, 303], "primit": 130, "till": [130, 253, 254, 257], "pplist": 130, "sinusod": [131, 277, 314], "keep_scal": 133, "often": [133, 236, 239, 242], "rel": [133, 239, 242, 243], "nkernel": 133, "denprmis": 133, "11111111": 133, "scaling_db": [134, 135], "normalize_win": 134, "discret": [134, 135, 137, 138, 268, 319, 338, 349], "ofshap": 134, "rectangular": [134, 173, 289, 293], "log2": [134, 173, 280, 293, 313], "wondow": 134, "recommend": [134, 137, 138, 177, 179, 239, 353], "phse": 134, "along": [134, 139, 140, 141, 142, 143, 176, 266, 273, 291], "spectra": [134, 135, 139, 293, 294], "idft": [134, 135, 277, 280, 281, 293, 294], "istft": [134, 135, 277, 280, 281, 293, 294], "frourier": [134, 135, 277, 280, 281, 293, 294], "discrete_fourier_transform": [134, 135], "rescal": [135, 269], "undo": 135, "synthes": [135, 281, 294, 352, 353, 354], "still": [135, 136, 182, 187, 328], "wa": [135, 136, 291, 292, 314, 347], "rectangu": 135, "flow": 136, "backgound": 136, "streamlin": 136, "locat": [136, 139, 147, 222, 223, 224, 236, 237, 238, 239, 241, 242, 243, 245, 249, 253, 254, 257, 262, 263, 282, 285, 286], "behind": [136, 353], "metric": [136, 239, 251, 253, 254, 257], "confid": 136, "uncertain": [136, 171, 314], "best": 136, "look": [136, 253, 257, 302], "uniform": [136, 171, 209, 313, 314], "prepand": 136, "string": [136, 253, 254, 256, 257, 304, 352, 353, 354], "new_size_of_grid": 136, "old_size_of_grid": 136, "configur": [136, 239], "keyword": [136, 139, 140], "seprat": [136, 239], "2g": 136, "annot_kw": 136, "linecolor": 136, "white": [136, 197], "cbar_kw": 136, "cbar_ax": 136, "pydata": [136, 289], "pivot": 136, "shaft": 136, "headwidthfloat": 136, "headlengthfloat": 136, "headaxislengthfloat": 136, "minshaftfloat": 136, "minlengthfloat": 136, "_as_gen": 136, "quiver": 136, "arrows": 136, "arrowstyl": 136, "minlength": 136, "zorder": [136, 273], "start_point": 136, "maxlength": 136, "integration_direct": 136, "broken_streamlin": 136, "streamplot": 136, "tupl": [136, 137, 159, 167, 168, 247, 249, 258, 305], "propoerti": 136, "itself": [136, 223, 224, 239, 285, 286, 289], "anyth": 136, "retur": 136, "headwidth": 136, "headlength": 136, "headaxislength": 136, "minshaft": 136, "ax_theta": [136, 241, 273], "ax_bad": [136, 241, 273], "xy": [136, 147, 148, 160, 166, 253, 254, 257, 349], "mapping_typ": [137, 138], "de_norm": [137, 138], "h_": [137, 138, 158, 160, 161, 162, 163, 164, 165, 168, 169, 170, 172, 259, 349], "calcul": [137, 138], "multiscal": [137, 138, 165], "quantiz": [137, 138, 268, 269, 313, 314], "downsampl": [137, 235, 332], "multipscal": 137, "npp": [137, 138], "outcom": [137, 138], "incorrect": [137, 138], "never": [137, 138], "nomal": [137, 138], "npf": [137, 138], "worst": [137, 138], "lack": [137, 138], "word": [137, 138], "achiev": [137, 138], "nup": [137, 138], "sens": [137, 138, 152, 153, 154, 181, 182, 184, 228], "me": [137, 138], "disp_entr": [137, 138], "x_discret": [137, 138], "total_patterns_found": [137, 138], "total_patterns_poss": [137, 138], "dispersion_entropy_multiscale_refin": [137, 165, 313], "entropy_spectr": [137, 138, 157, 158, 165, 169, 170, 172, 314, 352, 353, 354], "entropy_svd": [137, 138, 157, 158, 165, 169, 170, 171, 314], "entropy_permut": [137, 138, 157, 158, 165, 170, 171, 172, 314], "permut": [137, 138, 157, 158, 165, 169, 170, 171, 172, 223, 224, 285, 286, 349], "entropy_differenti": [137, 138, 157, 158, 169, 170, 171, 172, 274, 313, 352, 354], "differenti": [137, 138, 157, 158, 163, 165, 166, 169, 170, 171, 172, 182, 187, 239, 261, 274, 276, 297, 298, 310, 319, 328, 338, 349], "ieeexplor": 137, "7434608": 137, "h_de1": [137, 138, 313], "prob1": [137, 138, 313], "h_d": [137, 138], "refin": [138, 139, 140, 223, 224, 239, 242, 263, 285, 286], "defin": [138, 223, 224, 239, 242, 285, 286, 314, 320], "disctionari": 138, "welch": [139, 140, 146, 150, 151, 171, 264, 314], "hann": [139, 140, 146, 150, 151, 173, 264, 280], "exclude_lower_fr": [139, 140], "refine_peak": [139, 140], "nperseg": [139, 140, 146, 150, 151, 171, 264], "return_spectrum": [139, 140], "discern": 139, "physiologi": 139, "prefer": [139, 140], "posibl": [139, 306, 307], "periodogram": [139, 140, 150, 151, 171, 262, 263, 314, 353], "further": [139, 176, 253, 254, 324], "parobol": [139, 140], "spectum": [139, 140, 277], "peridogram": [139, 140], "dc": [139, 140, 177, 178, 185, 324], "2hz": [139, 140], "aadit": [139, 140], "df": [139, 140, 287, 290, 292], "clean_phas": [139, 140, 265, 266], "local": [139, 313], "pmc5673341": [139, 140], "dfq": 139, "dfq1": 139, "frq1": [139, 264], "dfq2": 139, "frq2": [139, 264], "dfq3": 139, "mx3": 139, "frq3": 139, "dfq4": 139, "mx4": 139, "frq4": 139, "3f": 139, "win_len": 140, "move": [140, 324], "df_win": 140, "nw": 140, "chekc": 140, "variat": [140, 146, 150, 151, 276, 295, 296], "wpd_mode": [141, 142, 143, 306, 307], "recons_method": [141, 142, 143], "ham": [141, 142, 143, 145, 150, 151, 264, 280, 293, 307], "hopes": [141, 142, 143, 145, 307], "packetwis": [141, 142, 143, 306, 307], "lvl": [141, 142, 143, 306, 307], "theta_g": [141, 142, 143], "theta_b": [141, 142, 143], "interpercentil": [141, 142, 143], "aggress": [141, 142, 143], "bound": [141, 142, 143, 295], "defult": [141, 142, 143, 147, 238], "microvolt": [141, 142, 143], "uv": [141, 142, 143, 247], "theshold": [141, 142, 143], "express": [141, 142, 143, 165, 313], "equat": [141, 142, 143, 255, 288], "w_max": [141, 142, 143], "vebos": 141, "recommoned": [141, 142, 143], "recommond": [141, 142, 143, 177, 182, 187, 222, 239, 276], "decompisiton": [141, 142, 143], "hamwin": [141, 142, 143], "IT": [141, 142, 143, 241], "multipl": [141, 142, 145, 246, 247, 266, 292], "doi": [141, 143, 144, 165, 313], "1016": [141, 143], "bspc": [141, 143], "xc": [141, 143], "x_c": [141, 143], "tuanabl": [142, 143, 145], "normalizeeachband": 144, "spatio": 144, "ssfi": 144, "ximg": 144, "3d": [144, 151, 199, 200, 204, 207, 217, 223, 224, 285, 286, 339, 349], "nt": [144, 151], "chennel": [144, 239, 244], "instant": 144, "project": [144, 147, 152, 153, 154, 155, 199, 200, 204, 206, 213, 214, 223, 224, 285, 286], "improt": 144, "requena": 144, "carri\u00f3n": 144, "deep": 144, "scienc": [144, 352, 353, 354], "9825": 144, "3390": 144, "app13179825": 144, "link": [144, 350], "frameon": [144, 151, 276], "winmeth": 145, "r3cb126c15dac": 145, "icam": 145, "accur": [145, 156], "vise": 145, "versa": 145, "cbiey": 145, "ind": 145, "win": [146, 150, 151, 264, 313], "detrend": [146, 150, 151, 264], "noverlap": [146, 150, 151, 264], "rhythm": [146, 150, 151], "5b73": [146, 150], "20of": [146, 150], "20eeg": [146, 150], "20band": [146, 150], "bind": [146, 150], "within": [146, 150, 222, 239, 242], "zi": [147, 148, 155], "1020": 147, "electro": 147, "IF": 147, "sure": [147, 223, 224, 239, 285, 286], "interest": [147, 221], "addtion": [147, 156], "modifi": [147, 289, 306, 307, 314], "displi": 147, "supress": 147, "shift_origin": [147, 148], "postion": 147, "fx": [147, 148, 247, 248, 320], "fy": [147, 148], "lim": 147, "rx": [147, 199, 200, 204, 223, 224, 285, 286], "ry": [147, 199, 200, 204, 223, 224, 285, 286], "radiu": [147, 202, 204, 286], "ellip": 147, "clip": [147, 176, 306, 307], "outter": 147, "area": [147, 191], "poisit": 147, "dx": [147, 156, 221, 222, 276, 295], "dy": 147, "gca": 147, "contours_n": 147, "contours_lw": 147, "showsensor": [147, 148, 155], "cicl": 147, "sensor_prop": 147, "fontdict": [147, 148], "font_prop": 147, "showhead": [147, 148, 155], "head": [147, 291, 292], "head_prop": [147, 148], "markers": 147, "showbound": [147, 148], "bound_prop": [147, 148], "oval": 147, "show_vhlin": [147, 148], "verticl": [147, 249], "through": [147, 194, 207], "show_colorbar": 147, "colorbar_label": 147, "match_sh": [147, 148], "crop": [147, 185, 245], "obatain": 147, "exterpol": [147, 175, 176], "gen_ssfi": 147, "returnim": 148, "f1": [148, 217, 253, 255, 257, 302], "f2": [148, 255, 302], "r1": 148, "r2": [148, 208], "markeredgewidth": 148, "sensorprop": 148, "fontkwd": 148, "ir": 149, "kersiz": 149, "rgb": 149, "filter_kwarg": [150, 151], "periodogram_kwarg": [150, 151], "filter_warn": [150, 151], "periodogram_warn": [150, 151], "overrid": [150, 151, 239], "filtfilt": [150, 151, 179, 330], "overid": [150, 151], "show_plot": [150, 151, 171, 264, 314], "statement": [150, 151], "pdt": 151, "case_sensit": [152, 153, 154], "reorder": [152, 153, 154], "clean_label": [152, 153, 154], "use_precomput": [152, 153, 154], "lowercas": [152, 153, 154], "rearrag": [152, 153, 154], "doesn": [152, 153, 154, 157, 159, 160, 167, 168, 256, 258], "close": [154, 182, 187, 222, 251, 328], "match": [154, 314], "mariust": 154, "hart": 154, "show_lin": 156, "find": [156, 232, 238, 239, 242], "elbow": 156, "knee": 156, "perpendicular": 156, "distanc": [156, 199, 200, 223, 224, 239, 241, 285, 286, 314, 339, 349], "dist": [156, 199], "argmax": 156, "show_dist": 156, "excecut": 156, "command": 156, "knee_of_a_curv": 156, "return_n_bin": [157, 159, 160, 167, 168, 258], "ignorezero": [157, 159, 160, 167, 168, 258], "\u03b1": 157, "generalis": [157, 314], "form": [157, 193, 240, 241, 247, 248, 249, 314], "collis": [157, 314], "nat": [157, 159, 165, 167, 168, 171, 258, 274, 313, 314], "ban": [157, 159, 167, 168, 258, 314], "versionad": 157, "omit": [157, 159, 160, 167, 168, 258], "entropy_": 157, "458019387223165": [157, 314], "043357283463282": [157, 314], "9996833158270148": [157, 314], "8503760993630085": [157, 314], "ae": [158, 349], "suit": [158, 170, 314], "iid": [158, 170, 314], "symbol": [158, 170, 299, 300, 314], "tolar": [158, 170, 314], "absolut": [158, 170, 243, 314], "consequit": [158, 170, 281], "quit": [158, 170, 171, 314], "approximate_entropi": 158, "5661144425748899": 158, "20696275451476875": 158, "nx": [159, 160, 167, 168, 258], "ny": [159, 160, 167, 168, 258], "hx1y": 159, "divers": [159, 160, 167, 168, 258], "h_x1y1": [159, 314], "h_x1y2": [159, 314], "096371831484375": 159, "260323284620403": 159, "648381759654535": [159, 160, 168], "pre_vers": [160, 168], "h_xy": [160, 163, 168, 274], "h_xy1": [160, 161, 163, 164, 167, 168, 313, 314], "h_xy2": [160, 161, 163, 164, 168, 313, 314], "020654071198377": 160, "529035477039111": 160, "present_first": [161, 162, 164, 166, 259, 260, 261, 274, 297, 298, 313], "partial": [161, 162, 163, 164, 165, 166, 259, 260, 261, 274, 297, 298, 349], "x_i": [161, 162, 164, 166, 259, 260, 261, 274, 297, 298, 313], "y_i": [161, 164, 166, 259, 261, 274, 297, 298, 313], "past": [161, 162, 164, 166, 259, 260, 261, 297, 298], "h_x1y": [161, 164], "entropy_diff_cond_self": [161, 163, 274, 297, 313], "signal_delayed_spac": [161, 162, 163, 164, 165, 166, 259, 260, 261, 297, 298, 313], "h_y1x": [161, 313], "h_y2x": [161, 313], "h_x1x": [162, 274, 313], "entropy_diff_cond": [162, 163, 274, 297, 313], "y_": [164, 166, 261, 274, 297, 298, 349], "entropy_diff_joint": [164, 259, 260, 274, 313], "is_multidim": [165, 274, 313], "exclude_const": 165, "return_cov": 165, "raise_error": 165, "multivari": [165, 274, 313], "\u03c3": [165, 274, 313], "ln": [165, 274, 313], "2\u03c0": [165, 274, 313], "multidimension": 165, "statproofbook": [165, 313], "mvn": [165, 313], "dent": [165, 313], "multivariate_normal_distribut": [165, 313], "differential_entropi": [165, 313], "gokhal": [165, 313], "dv": [165, 245, 313], "ahm": [165, 313], "na": [165, 313], "bc": [165, 313], "piscatawai": [165, 313], "nj": [165, 313], "1989": [165, 313], "Their": [165, 313], "688": [165, 313], "692": [165, 313], "1109": [165, 313], "30996": [165, 313], "hd0": [165, 313], "hd1": [165, 313], "directli": [165, 313], "granger": [166, 261, 274, 297, 298, 349], "causal": [166, 177, 179, 261, 274, 297, 298, 349], "gc_": [166, 349], "yx": 166, "xdy": 166, "gc": 166, "gc_xy": [166, 274], "gc_yx": [166, 274], "gc_xdy": [166, 274], "transfer_entropi": [166, 261, 274, 298, 352, 354], "transfer": [166, 261, 274, 297, 298, 319, 338, 349], "transfer_entropy_cond": [166, 297], "partial_transfer_entropi": [166, 274, 297, 298, 352, 354], "gc_x1y1": 166, "gc_y1x1": 166, "gc_x1dy1": 166, "gc_x1y2": 166, "gc_y2x1": 166, "gc_x1dy2": 166, "histogram2d": 167, "hxy": 167, "52651374518646": 167, "h_kl": [168, 314], "37227231154384194": 168, "8806537173845745": 168, "h_pi": 169, "bandt": 169, "christoph": 169, "bernd": 169, "pomp": 169, "natur": [169, 313, 314], "physic": 169, "review": 169, "letter": 169, "2002": 169, "174102": 169, "h_p": [169, 314], "5156504111997058": 169, "556358399367036": 169, "sampen": [170, 314], "se": [170, 349], "computation": 170, "sample_entropi": 170, "6757312057041359": 170, "6700625342505353": 170, "h_f": [171, 314], "drawn": [171, 289, 314], "distrobut": [171, 314], "almost": [171, 222, 313], "wekch": 171, "h_fx": 171, "hx1": [171, 314], "hx2": [171, 314], "hx1_se": [171, 314], "hx2_se": [171, 314], "hx1_n": [171, 314], "hx2_n": [171, 314], "hx1_se_n": [171, 314], "hx2_se_n": [171, 314], "label1": [171, 314], "label2": [171, 314], "p1x": [171, 314], "f1q": [171, 314], "p2x": [171, 314], "f2q": [171, 314], "889476342103717": 171, "7850662938305786": 171, "950686888274901": 171, "8204484006660255": 171, "9826348642134711": 171, "3972294995395931": 171, "8308686349524237": 171, "8445663920995877": 171, "h_svd": 172, "34210072132884417": 172, "394331263550738": 172, "f0err": 173, "return_cand": 173, "twm": 173, "shorter": [173, 238, 239, 243, 293], "resolt": [173, 235, 293], "upto": [173, 291, 292, 293], "neg": [173, 221, 222, 236, 237, 239, 242, 244, 245, 280], "maximim": 173, "f0cand": 173, "correspod": [173, 228], "f0_cand": 173, "f0_mag": 173, "set_label": 173, "perfect": 174, "iffrft": [174, 186, 227], "kind": [175, 176, 221, 222, 239, 313], "nearest": [175, 176, 200, 339, 349], "slinear": [175, 176], "quadrat": [175, 176], "cubic": [175, 176], "restore_original_valu": 176, "exter": 176, "polat": 176, "smoot": 176, "restor": 176, "denot": 176, "convol": 176, "conv_nan": 176, "odd": [176, 178, 183, 293], "l0": 176, "smotth": 176, "xk": 176, "x_fill": 176, "x_smooth": 176, "return_background": [177, 178, 324], "initialize_zero": 177, "remv": [177, 324], "drift": [177, 178, 183, 239, 243, 276, 339, 349], "implemenat": [177, 324], "initi": [177, 246], "slowli": 177, "savitzki": [177, 178, 179, 181, 182, 183, 184, 185, 239, 243, 276, 339, 349], "golai": [177, 178, 179, 181, 182, 183, 184, 185, 239, 243, 276, 339, 349], "employ": 177, "introduc": [177, 179, 314], "dc_bia": 177, "polyord": [178, 183, 239, 243, 324, 328], "interp": [178, 183], "cval": [178, 183], "fluctuat": [178, 183], "neget": [178, 183], "curvei": [178, 183], "savgol_filt": [178, 183], "xm": 178, "filterdc": [178, 185, 324], "93golay_filt": 178, "filtr_keywor": 179, "buttorworth": [179, 324], "basic": [179, 352, 353, 354], "wrapper": 179, "cut": [179, 185], "lowpass": [179, 180, 185, 339, 349], "bandstop": [179, 339, 349], "lfilter": 179, "sosfilt": 179, "sosfiltfilt": 179, "butterworth": [179, 180], "digit": 179, "cascad": 179, "filter_smooth_sgolai": [179, 181, 182, 184, 185, 276, 328, 352, 353, 354], "filter_smooth_gauss": [179, 182, 183, 184, 185, 221, 222, 276, 328, 352, 353, 354], "filter_smooth_mollifi": [179, 181, 183, 184, 266, 352, 353, 354], "mollifi": [179, 181, 182, 183, 184, 187, 266, 339, 349], "filter_with_kernel": [179, 181, 182, 183, 185, 187, 188, 276, 352, 353, 354], "filtering_pipelin": 179, "filter_powerlin": [179, 185], "powerlin": [179, 180, 185, 324, 339, 349], "interfer": [179, 339, 349], "butterworth_filt": 179, "4hz": 179, "12hz": 179, "interef": [180, 185], "equivil": 180, "interf": 180, "50hz": [180, 185], "60hz": [180, 185], "sigma_scal": [181, 184, 187, 188, 328], "xf2": [181, 183, 328], "xf3": [181, 183, 328], "wl": [181, 183, 255], "kurt": [182, 187, 188, 328], "otto": [182, 187, 188, 328], "friedrich": [182, 187, 188, 328], "sharp": [182, 187, 328], "remain": [182, 187, 328], "nonsmooth": [182, 187, 328], "intuit": [182, 187, 328], "irregular": [182, 187, 328], "infinit": [182, 187, 328], "analyt": [182, 187, 265, 328], "vanish": [182, 187, 328], "therefor": [182, 187, 242, 328], "middl": [182, 187, 238, 239, 245], "narrow": [182, 187], "flate": [182, 187], "triangular": [182, 187, 289], "kurt_otto_friedrich": [182, 187, 328], "x_n": 182, "shuffl": [182, 253, 256, 257], "retain": [183, 277], "sharpen": 184, "custamis": 184, "proces": 184, "kernel1": [184, 187, 188], "kernel2": [184, 187, 188], "friedrichs_mollifier_kernel": [184, 188], "window_s": [184, 187, 188], "kernel3": [184, 187, 188], "y3": [184, 187, 188, 199, 200, 223, 224, 269, 285, 286, 332], "231": [184, 187, 188], "trim": 185, "iir_alpha": 185, "sg_window": [185, 221, 222, 236, 237, 239, 243, 245, 276], "1001": 185, "sg_itr": 185, "filter_lpf": 185, "filter_pwrlin": 185, "last_filter_keyword": 185, "sgolai": [185, 221, 222, 236, 237], "interefer": [185, 324], "trime": [185, 302], "1sec": 185, "empti": [185, 228, 243, 247, 249, 306, 307], "ffrft": [186, 226, 227], "fractional_fourier_transform": 186, "ker_mol": 187, "ker": 188, "xy_loc": 189, "plane": [189, 194, 207], "get_imag": 189, "get_image2": 189, "triangul": [190, 195, 196, 198], "graph": [190, 223, 224, 285, 286, 339, 349], "getborder_edg": 190, "getedges_idx": 190, "get_tri_with_edg": 190, "indx2points_edg": 190, "isedge_intri": 190, "removetri_with_edg": 190, "seledg": 190, "get_edges_deg": 190, "deg": 190, "edg": [190, 245], "p1": [191, 242], "p2": [191, 242], "p3": 191, "triangl": 191, "spheric": [192, 216], "adjm": [193, 198, 199, 200, 223, 285], "ordin": 193, "adjac": [193, 198, 199, 200, 212, 223, 285, 339, 349], "v_i": 193, "v_j": 193, "vertex": 193, "connect": [193, 198, 199, 200, 223, 233, 285, 349], "cordin": 193, "lamda": 194, "face": [195, 196, 198, 230, 232, 233], "npoint_rot": 196, "zshift": 196, "remove_self_con": [198, 199, 200], "ignore_matrix": [198, 199, 200], "trianglut": 198, "node2c": [198, 199, 200, 212], "node_a": [198, 199, 200], "list_of_nodes_connected_to_node_a": [198, 199, 200], "euclidean": [199, 200], "get_ellipsoid": [199, 200, 223, 224, 285, 286], "rz": [199, 200, 204, 223, 224, 285, 286], "adjm1": [199, 200, 223, 285], "adjm2": [199, 200, 223, 285], "adjm3": [199, 200, 223, 285], "graph_filter_adj": [199, 200, 224, 285, 286, 352, 354], "exclude_self": [199, 200, 223, 224, 285, 286], "subplot_kw": [199, 200, 204, 223, 224, 285, 286], "scatter3d": [199, 200, 204, 223, 224, 285, 286], "view_init": [199, 200, 204, 223, 224, 285, 286], "elev": [199, 200, 204, 223, 224, 285, 286], "azim": [199, 200, 204, 223, 224, 285, 286], "roll": [199, 200, 204, 223, 224, 285, 286], "set_zlim": [199, 200, 204, 223, 224, 285, 286], "knn": 200, "neibhbour": 200, "neareast": 200, "neighbour": [200, 339, 349], "accend": 200, "rl": 203, "rmax": 203, "phi_rang": [204, 208], "283185307179586": [204, 208], "theta_rang": [204, 208], "ellipsoid": 204, "get_sphar": 204, "get_circl": 204, "get_circular_grid": 204, "get_squar": 204, "get_square_grid": 204, "neibour": [205, 223, 224, 285, 286], "lamd": 207, "r3": 208, "sphare": 208, "vl": 210, "hl": 210, "inpeterpol": 211, "xp1": 214, "xp1c": 214, "xp2": 214, "7853981633974483": 215, "cartesiancoordin": 216, "colormap_valu": 217, "value_rang": 217, "show_point": 217, "scale_factor": 217, "scale_mod": 217, "scalars_mag": 217, "colormap_arr": 217, "arr_rang": 217, "tip_length": 217, "tip_radiu": 217, "shaft_radiu": 217, "color_mod": 217, "color_by_scalar": 217, "fign": 217, "98": [217, 245], "surfac": [217, 218], "mayavi": 217, "shift_mean": 218, "only_out": 218, "recosntruct": 218, "detail_level": [220, 287], "return_nam": 220, "quick": [220, 290], "min_dvdt": [221, 222, 236, 237, 239, 245], "gradient_method": [221, 222, 236, 237, 239, 245], "fdiff": [221, 222, 236, 237, 239, 245, 276], "gauss_window": [221, 222, 236, 237, 239, 245, 276], "gauss_itr": [221, 222, 236, 237, 239, 245, 276], "gradient": [221, 222, 236, 237, 245, 255, 276, 319, 338, 349], "depolaris": [221, 236, 237], "heart": [221, 222, 236, 237], "occur": [221, 222, 236, 237, 239], "biolog": [221, 236, 237], "electorgram": [221, 236, 237], "deflect": [221, 222, 236, 237, 239, 242, 245], "dvdt": [221, 222, 236, 237], "volatg": [221, 222, 236, 237], "sometim": [221, 236, 237, 239, 245], "mislead": [221, 236, 237], "locatio": [221, 245], "action": 221, "potenti": 221, "max_dvdt": [221, 222, 236, 237, 238, 239, 245], "unipolar": 221, "consod": 221, "max_abs_dvdt": [221, 222, 236, 237], "liter": [221, 222], "agre": [221, 222], "fgrad": [221, 222, 236, 237, 245, 276], "sgdiff": [221, 222, 236, 237, 245, 276], "sgdrift_diff": [221, 222, 236, 237, 245, 276], "sgsmooth_diff": [221, 222, 236, 237, 245, 276], "gauss_diff": [221, 222, 236, 237, 245, 276], "npdiff": [221, 222, 236, 237, 245, 276, 295, 296], "signal_diff": [221, 222, 236, 237, 245, 352, 354], "mag": [221, 222, 245, 277], "get_repolarisation_tim": [221, 236, 237, 239], "pmc1458874": 221, "opencarp": 221, "02_ep_tissu": 221, "08_lat": 221, "idea": [56, 221, 238, 239, 313], "t_rang": [222, 236, 237, 242, 243], "contrast": [222, 236], "recoveri": [222, 236], "hard": [222, 236], "reliabl": [222, 236, 242], "lost": [222, 236], "restrict": [222, 236, 237], "search": [222, 236, 237, 238, 239, 242], "whole": [222, 236, 237, 249], "gap": 222, "alwai": [222, 276, 291, 292], "wyatt": 222, "diffrent": 222, "get_activation_tim": [222, 236, 237, 239, 245], "pmc10119409": 222, "pmc4315451": 222, "sort_with_dist": [223, 224, 285, 286], "default_valu": [223, 224, 285, 286], "media": [223, 224, 273, 285, 286], "invari": [223, 224, 285, 286], "iof": [223, 224, 285, 286], "mena": [223, 285], "sapc": [223, 224, 285, 286], "geomartri": [223, 224, 285, 286], "callabl": [223, 224, 285, 286], "newfun": [223, 224, 285, 286], "neigbour": [223, 224, 285, 286], "variant": [223, 224, 285, 286], "extra": [223, 224, 242, 285, 286], "home": [223, 285], "geometri": [223, 224, 232, 285, 286], "get_adjacency_matrix_knn": [223, 285], "proxim": [224, 286, 339, 349], "spatial_filter_adj": [224, 286], "spatial_filter_dist": 224, "disctribut": 225, "800": 225, "1200": 225, "count": [225, 253, 254, 257], "imaginari": [226, 227], "recostruct": [227, 266, 277], "readsign": 228, "fs_meth": 228, "getsamplefrequ": 228, "attr": [2, 228], "channel_axi": 228, "edf": [0, 5, 6, 7, 8, 9, 10, 13, 29, 30, 34, 147, 150, 179, 228, 302, 341, 345, 349], "bdf": [65, 228, 239, 341, 349], "medic": 228, "instrument": [228, 324], "my_signal_record": 228, "fileobj": 228, "ith": 228, "numnber": 228, "signals_in_fil": [2, 228], "attrs_default": 228, "patient": [2, 228], "methds_deafult": 228, "getsignallabel": 228, "ch_header": 228, "getsignalhead": 228, "gender": 228, "getgend": 228, "sex": 228, "getsex": 228, "getfiledur": 228, "cahnnel": 228, "attribu": 228, "read_surf": [228, 229, 232, 233, 311], "read_vtk": [228, 229, 230, 233, 311], "write_vtk": [228, 229, 230, 232, 311], "full_accessible_path": [228, 229, 230, 232, 233], "to_bdf_fil": 228, "max_volt": [229, 239], "base_kei": 229, "signal_hkei": 229, "recording_0": 229, "analogstream": 229, "stream_0": 229, "signal_kei": 229, "channeldata": 229, "info_kei": 229, "infochannel": 229, "ch_axi": 229, "hierarch": [229, 304, 343], "25khz": [229, 238, 239, 244, 245], "datatyp": [229, 239], "recoridng": [229, 239], "int32": [229, 239], "32768": [229, 239], "32767": [229, 239], "float32": [229, 239], "store": 229, "n_ch": [229, 238], "to_hdf_fil": 229, "surf": [230, 231, 341, 349], "geenrat": 230, "to_surf_fil": 230, "v_name": 232, "f_name": 232, "polygon": 232, "nv_idx": 232, "nf_idx": 232, "vtk": [232, 233, 341, 349], "contain": [232, 236, 237], "access": [232, 239], "to_vtk_fil": [232, 233], "filenam": 233, "paraview": 233, "kitwar": 233, "softwar": [233, 239], "reli": 233, "writer": 233, "legagi": 233, "ascii": 233, "mesh": 233, "disk": 233, "num": 234, "decim": [235, 246, 247, 248, 291, 292, 313, 332], "x_low": 235, "cdf_map": [235, 269], "2000": [235, 332], "reoolaris": 236, "seperatli": 236, "spike": [238, 239, 249], "1m": [238, 239, 244], "ve": [238, 239, 242, 245, 269], "1hz": [238, 239], "cylc": [238, 244], "n_sampl": 238, "n_cycl": 238, "repol_comput": 239, "recor": 239, "datafram": [239, 241, 287, 290, 291, 292], "export": 239, "argumet": 239, "well": [239, 245, 273, 276], "optimis": 239, "8x8": [239, 241, 248, 249], "datamanag": 239, "eg": 239, "mea_north_1000_1hz": 239, "mutipl": 239, "unnormalis": 239, "consol": 239, "silent": [239, 242, 249, 253, 255, 257], "stim_id_param": 239, "finit": [239, 276], "fist": 239, "id": 239, "2m": [239, 244], "safe": 239, "side": [239, 243, 244], "1st": 239, "2nd": 239, "3rd": [239, 288], "cancel": 239, "at_id_param": 239, "exctract": [239, 243], "egm_id_param": 239, "apply_aft": [239, 243], "10m": 239, "eletrogram": 239, "91": [239, 243], "enough": [239, 243], "appropri": [239, 243], "intermedi": [239, 243, 276], "egm_feat_param": 239, "energi": [239, 242], "overview": 239, "hight": [239, 242], "region": [239, 242, 249, 313], "explain": [239, 242, 292], "exce": [239, 242], "similarli": [239, 242], "goe": [239, 242], "mm": [239, 241], "epsilon": [239, 241], "dive": [239, 241], "boot": [239, 241], "longer": 239, "bad_ch_thr": 239, "valtag": 239, "threhold": [239, 291, 292], "descres": 239, "dfault": 239, "okai": 239, "grater": 239, "mention": 239, "alwasi": 239, "map_prop": 239, "customis": 239, "colormap": [239, 246, 247, 248], "p2p_rang": 239, "dur_rang": 239, "f_rang": 239, "cv_rang": 239, "apd_rang": 239, "at_cmap": 239, "countour_n": 239, "countour_clr": 239, "countour": 239, "conducnt": [239, 241], "across": 239, "labe": 239, "tab": 239, "fdf": 239, "fch": 239, "fmat": 239, "arrang": [240, 247, 248, 249, 250], "mea8x8": 240, "unarrange_mea_grid": 240, "elctrod": 241, "featir": 241, "matix": 241, "inpterpol": 241, "volateg": 242, "pictori": 242, "v1": 242, "v2": 242, "p12": 242, "p11": 242, "p22": 242, "p21": 242, "positive_peak_height": 242, "negative_peak_height": 242, "situat": 242, "everi": 242, "pair": [242, 289, 291], "positive_fr_peak": 242, "negative_fr_peak": 242, "fration": 242, "consider": 242, "6745": [242, 306, 307], "peak2peak": 242, "findex": 242, "85450567176613": 242, "872375332449366": 242, "0013948950132979746": 242, "3948950132979747": 242, "86761415086482": 242, "314866535924523": 242, "001132594661436981": 242, "132594661436981": 242, "0126410178332197": 242, "501": 243, "plot_toffset": 243, "______________________": 243, "cylcl": [243, 249], "over": [244, 280, 352, 353, 354], "\u00b5v": 244, "electod": 244, "ploot": 244, "bad_channels_idx": 244, "stimlu": 245, "number_sampl": 245, "abs_dvdt": 245, "transit": 245, "stim_mag": 245, "quarter": 245, "zoom": [245, 249], "precis": [246, 247, 248], "obj": [246, 289], "arrag": 247, "inclus": [248, 249], "showm": 248, "fx_bad": 248, "fxb": 248, "rep_spik": 249, "fill_apd": 249, "fill_color": 249, "limi": 249, "red": [249, 299, 300, 301, 303], "blue": [249, 299, 300, 301, 303], "green": [249, 299, 300], "shade": 249, "specif": 249, "y0": 249, "edit": [249, 305], "revers": 250, "chanel": 250, "compare_ms": 251, "plot_log": 251, "show_legend": 251, "mmse": 251, "mmins": 251, "sum_0": [251, 252], "min_samples_split": [253, 254, 257], "min_impur": [253, 254, 257], "thresholdfrommean": [253, 254, 257], "super": [253, 254, 257, 313], "decisiontre": [253, 257, 352, 353, 354], "decsion": [253, 257], "decreas": [253, 254], "impur": [253, 254], "selct": [253, 254], "concecut": [253, 254], "feaur": [253, 254], "mlend_happiness_dataset": [253, 256, 257], "happi": [253, 256, 257], "mlendhd_attribut": [253, 256, 257], "ag": [253, 256, 257], "happinesslevel": [253, 256, 257], "x_train": [253, 256, 257], "x_test": [253, 256, 257], "y_train": [253, 256, 257], "y_test": [253, 256, 257], "leaf_label": [253, 254, 257], "unhappi": 253, "dictdepth": [253, 254, 257], "fn": [253, 257], "trainign": [253, 254, 257], "get_tre": [253, 254, 257], "learnign": [253, 254, 257], "showdirect": [253, 254, 257], "hline": [253, 254, 257], "dcml": [253, 254, 257], "plottreepath": [253, 254, 257], "treepath": [253, 254, 257], "ttftft": [253, 254, 257], "label_count": [253, 254, 257], "returen": [253, 254, 257], "predic": [253, 254, 257], "y_prob": [253, 254, 257], "y_count": [253, 254, 257], "y_path": [253, 254, 257], "prunetre": [253, 254, 257], "prun": [253, 254, 257], "set_featurenam": [253, 254, 257], "set_xynod": [253, 254, 257], "lxy": [253, 254, 257], "rxy": [253, 254, 257], "ldiff": [253, 254, 257], "showtre": [253, 254, 257], "helper": [253, 254, 257], "fot": [253, 254, 257], "shrinktre": [253, 254, 257], "shink": [253, 254, 257], "treedepth": [253, 254, 257], "prune": [253, 254, 257], "y_p": 255, "sigmoid": 255, "softmax": 255, "decent": 255, "elast": 255, "intercept": 255, "toler": 255, "stop": 255, "n_class": 255, "n_featur": 255, "add_gridspec": 255, "add_subplot": 255, "alphap": 255, "8833333333333333": 255, "08365012491975303": 255, "polyfeatur": 255, "extrat": 255, "printat": 255, "warm": 255, "debug": 255, "reiniti": 255, "getweight": 255, "getweightsaslist": 255, "hardbound": 255, "alphab": 255, "probal": 255, "show_eq": 255, "dictionri": 256, "308": 256, "215": 256, "8558139534883721": 256, "8924731182795699": 256, "unappi": 256, "mlend": 256, "signma": 256, "probabiltii": 256, "mutut": 258, "i_xy1": [258, 259, 313, 314], "i_xy2": [258, 259, 313, 314], "29196123466326007": 258, "6874431530714116": 258, "i_": [259, 260, 349], "i_x1i": 259, "mutual_info_diff_self": [259, 274, 313], "i_x1x": [260, 313], "i_y1i": [260, 313], "entopri": [261, 274, 298], "te_": [261, 274, 297, 298, 349], "z_i": [261, 274, 298], "te_x2y1z": [261, 274, 298], "entropy_granger_caus": [261, 274, 297, 298, 352, 354], "te_x_y1_1z": [261, 298], "te_x_y2_1z": [261, 298], "te_y1_x_1z": [261, 298], "te_y2_x_1z": [261, 298], "te": [261, 297, 298], "ploc": [262, 263], "parabol": 263, "loction": 263, "kp_": 263, "kp": 263, "kp_new": 263, "iploc": 263, "ipmag": [263, 282], "ipphas": [263, 282], "peak_detect": 263, "peak_int": 263, "2500": 263, "showlog": 264, "return_frq": 264, "px1": 264, "px2": [264, 314], "tan": 265, "a_i": 265, "a_x": 265, "hilbert": 265, "ht": 265, "analytic_sign": 265, "amp_shift": 266, "amp_mult": 266, "cleaning_phas": 266, "mollier": 266, "substract": 266, "new_amplitud": 266, "old_amplitud": 266, "suddon": 266, "deatult": 266, "instanteni": 266, "x_e": 266, "venn": 267, "distplot": 267, "jointplot": 267, "printval": 267, "min_bin": 268, "keep_amp_scal": 268, "bin_method": [268, 269], "n_level": [269, 332], "keep_rang": 269, "bin_scal": 269, "min_level": 269, "equalis": [269, 332], "cummul": [269, 332], "optimum": 269, "bw_scale": 269, "compad": 269, "y_int": 269, "post": 269, "nonlinear": 269, "mu_law": 269, "yint": [269, 332], "m3": [269, 332], "all_arrow_prop": 273, "edgecolor": 273, "facecolor": 273, "avg_arrow_prop": 273, "045": 273, "ax_theta_avg": 273, "ax_theta_avg_bd": 273, "usu": [274, 313], "formula": 274, "h_x1xy": 274, "h_xy1xi": 274, "entropy_diff_joint_cond": [274, 313], "i_xx": 274, "i_xi": 274, "mutual_info_diff": [274, 313], "eq1": [274, 297], "eq2": [274, 297], "te_x2i": [274, 297], "gauss_sigscal": 276, "event": 276, "kernal": 276, "derivet": 276, "unnecessari": 276, "compl": 276, "1701": 276, "00439": 276, "023": 276, "dx1": 276, "dx2": 276, "singal": 276, "wave": [277, 280], "dirichlet": 278, "blackman_lob": 278, "sinc_funct": 278, "dirichlet_kernel": 278, "fxt": [280, 281], "synthesis": 281, "ipfreq": 282, "pphase": 283, "tfreq": [283, 284], "freqdevoffset": 283, "freqdevslop": 283, "current": [283, 299, 300], "incom": 283, "0hz": [283, 324], "tfreqn": [283, 284], "tmagn": 283, "tphasen": 283, "mintracklength": 284, "delet": 284, "fragment": 284, "special": [285, 286, 314], "graph_filter_dist": [286, 352, 354], "add_esp": 287, "q25": [287, 290], "q75": [287, 290], "kur": [287, 290], "skw": [287, 290], "gmean": 287, "stats_nam": 287, "sdf": [287, 290], "quick_stat": 287, "029575": 287, "016306": 287, "0001": 287, "522644": 287, "942269": 287, "726123": 287, "640879": 287, "367002": 287, "017887": 287, "007691": 287, "530046": 287, "945704": 287, "return_thr": 288, "beyond": 288, "l_t": 288, "u_t": 288, "eqaut": 288, "x_outlr": 288, "indentifi": 288, "tuppl": 288, "x_outlr1": 288, "lt1": 288, "ut1": 288, "x_outlr2": 288, "lt2": 288, "ut2": 288, "box_palett": 289, "dodg": 289, "notch": 289, "showmean": 289, "show_box": 289, "lines_group": 289, "group_color": 289, "boxplot": 289, "trend": 289, "tilt": 289, "palett": 289, "box": 289, "pastel": 289, "husl": 289, "set2": 289, "flare": 289, "meanprop": 289, "colour": 289, "line_kw": 289, "line_marker_kw": 289, "markerfacecolor": 289, "box_kw": 289, "color_palett": 289, "x4": 289, "unpair": [289, 291], "return_t": 290, "get_stat": 290, "003649": 290, "022257": 290, "000009": 290, "486239": 290, "938597": 290, "71816": 290, "66914": 290, "3873": 290, "029687": 290, "013038": 290, "declar": [291, 292], "cohen": 291, "statisit": 291, "interpret": 291, "avail": [291, 292, 347, 353], "doubl": 291, "df_test": [291, 292], "df_esiz": 291, "test_group": [291, 342], "view": [291, 304, 343], "27s_t": 291, "wilcoxon_sign": 291, "rank_test": 291, "wilk": 291, "93wilk_test": 291, "27s_test": 291, "anova": 292, "000111": 292, "388809": 292, "choic": 293, "del_f": 293, "def_f": 293, "poor": 293, "nframe": 294, "tv": 295, "sum_n": 295, "tv_x1": 295, "tv_x2": 295, "tv_win": 296, "total_vari": [296, 352, 354], "te_x_y1": 297, "te_x_y2": 297, "te_y1_x": 297, "te_y2_x": 297, "te_y1_y2": 297, "selftermin": [299, 300], "sym": [299, 300], "cyan": [299, 300], "yellow": [299, 300, 301, 303], "termin": [299, 300, 301, 303], "compat": [59, 300], "jupyterlab": 300, "progbar": [300, 314, 343], "txcolor": [301, 343], "cred": [301, 303], "font": [301, 303], "endc": [301, 303], "byellow": [301, 303], "cblue": [301, 303], "okgreen": [301, 303], "trimlength": 302, "pretti": 302, "seper": [302, 304, 328], "item": 302, "lpa": 302, "rpa": 302, "nz": 302, "fp1": 302, "fpz": 302, "fp2": 302, "af9": 302, "af7": 302, "af5": 302, "af1": 302, "afz": 302, "af2": 302, "af6": 302, "af8": 302, "af10": 302, "f9": 302, "f5": 302, "fz": 302, "f6": 302, "f10": 302, "ft9": 302, "ft7": 302, "fc3": 302, "fc1": 302, "fcz": 302, "fc2": 302, "fc4": 302, "ft8": 302, "ft10": 302, "t9": 302, "c5": 302, "c4": 302, "c6": 302, "t10": 302, "bcolor": 303, "file_obj": 304, "return_str": 304, "attribuet": 304, "printabl": 304, "dobj": 304, "plot_fin": 305, "w_1": 305, "w_2": 305, "sum_": [305, 314], "w_k": 305, "slow": [305, 324], "down": 305, "wpa_plot": [305, 309, 352, 354], "wavelet_transform": 305, "sf": [306, 307], "plot_abs_coef": [306, 307], "dwt": 306, "idwt": 306, "2logn": [306, 307], "kr": [306, 307], "threshold_l": [306, 307], "tukei": [306, 307], "fenc": [306, 307], "thompson": [306, 307], "tau": [306, 307], "coeefici": [306, 307, 308], "zere": [306, 307], "clipe": [306, 307], "obov": [306, 307], "global": [306, 307], "wintyp": 307, "windowing_befor": 307, "fumction": 307, "long": 309, "unlik": [313, 320], "fine": 313, "assig": 313, "think": 313, "belong": 313, "impliment": 313, "\u00b5": 313, "skipe": 313, "everu": 313, "hhave": 313, "third": [313, 353], "actual": 313, "deal": 313, "noth": 313, "eegsampl": 313, "log_": 313, "2774414315752844": 313, "patter": 313, "int64": 313, "86637389336799": 313, "de_tempor": 313, "scl": 313, "sacl": 313, "5456280627759336": 313, "6984938704051236": 313, "682837351130069": 313, "5585556625642476": 313, "7480275694000103": 313, "4767472897625806": 313, "543855087400606": 313, "greek": 314, "concept": 314, "infrom": 314, "disord": 314, "thermo": 314, "1803": 314, "1877": 314, "1948": 314, "claud": 314, "uncertian": 314, "surpris": 314, "rightarrow": [314, 349], "straighforward": 314, "4488156358175899": 314, "4488156357251847": 314, "stabil": 314, "computat": 314, "dit": 314, "hartlei": 314, "sphx_glr_auto_examples_information_theory_plot_it_discreet_exampl": [], "notion": 314, "ne": 314, "equip": 314, "minmum": 314, "5849625007211563": 314, "5093848128656548": 314, "366782329927496": 314, "2471013326629172": 314, "2223924209998192": 314, "elwood": 314, "mathemat": 314, "commun": 314, "journal": 314, "379": 314, "deminesion": 314, "rare": 314, "exact": 314, "mind": 314, "typic": 314, "though": 314, "cosid": 314, "characterst": 314, "indirect": 314, "propos": 314, "let": 314, "thicksim": 314, "aprroxim": 314, "23429": 314, "23462": 314, "59213": 314, "19315": 314, "67204": 314, "24992": 314, "11875": 314, "06139": 314, "1625": 314, "0159": 314, "now": [314, 349, 353], "px3": 314, "parenttoc": 319, "gausswav": 320, "mexican": 320, "exponenti": 320, "exploit": 320, "baselin": 324, "wonder": 324, "appear": 324, "carri": 324, "vital": 324, "major": [324, 350, 351, 352, 353, 354], "unintend": 324, "unimport": 324, "caus": 324, "underli": 324, "studi": 324, "wander": 324, "quantize_sign": [332, 352, 354], "sinasudol": [338, 349], "bandreject": [339, 349], "gropu": [341, 349], "statict": 342, "progross": 343, "view_hierarchical_ord": 343, "cours": 347, "introduct": 347, "mainli": 347, "focus": 347, "languag": 347, "sceinc": 347, "materi": 347, "hypothesi": 347, "roc": 347, "plan": 347, "tutori": 348, "enhanc": [350, 351, 352, 353, 354], "page": 350, "tip": 350, "subscrib": 350, "notifi": 350, "elbow_knee_point": [352, 354], "simplify_sign": [352, 354], "core": [352, 354], "infotheori": [352, 354], "geomatri": [352, 354], "functionaliet": [352, 353, 354], "artic": [352, 353, 354], "sciencedirect": [352, 353, 354], "pii": [352, 353, 354], "s1746809419302058": [352, 353, 354], "algorith": [352, 353, 354], "countinu": [352, 353, 354], "tar": [352, 353, 354], "gz": [352, 353, 354], "treat": 353, "nmf": 353, "minibatchnmf": 353, "25438": 353, "yotam": 353, "avidar": 353, "constantini": 353, "get_feature_names_out": 353, "notfittederror": 353, "metadata": 353, "rout": 353, "enable_metadata_rout": 353, "enabl": 353, "set_config": 353, "config_context": 353, "parti": 353, "prepar": 353, "strongli": 353, "hide": 353, "24027": 353, "adrin": 353, "jalali": 353, "benjamin": 353, "bossan": 353, "omar": 353, "salman": 353, "demo1": 33, "demo2": 33, "979": [], "467": [], "446": [], "ramajuna": 33, "992": [33, 35], "395": [34, 35], "387": 35, "45836212511516": 16, "050864252588681": 16, "9997601726826201": 16, "8586045779433459": 16, "878442630682764": 16, "874297680532265": 16, "836835178964307": 16, "241": [16, 18], "medium": [], "90myhbr8osb": [], "introdcut": 347, "dl": 347, "cu_fdp": [], "artifici": 347, "intellig": 347, "supervis": 347, "deliv": 347, "invit": 347, "talk": 347, "slide": 347, "ppt": 347, "tutorials_ml_dl": [], "intorduction_to_ml_": [], "_dl_30_07_21": [], "pptx": [], "26_dl_30_07_21": [], "nbviewer": 347, "mnist": 347, "deeplearn": 347, "googl": 347, "colab": 347, "tinyurl": 347, "mltutori": 347, "cu": 347, "fdp": 347, "chandigarh": 347, "univers": 347, "faculti": 347, "why": 56, "relseas": [], "pypi": 56, "histori": [], "glob": 2, "categori": 2, "resting_epocx_14ch_sample1": 2, "traceback": [], "recent": [], "plot_sp_edf_fil": [2, 9, 345], "spkit_loc": [], "io_util": [], "304": [], "importerror": [], "eeg_ch_nam": 2, "078": [], "41088": 2, "time_stamp_": 2, "time_stamp_m": 2, "or_time_stamp_": 2, "or_time_stamp_m": 2, "counter": 2, "raw_cq": 2, "batteri": 2, "battery_perc": 2, "markerindex": 2, "markertyp": 2, "markervalueint": 2, "marker_hardwar": 2, "cq_af3": 2, "cq_f7": 2, "cq_f3": 2, "cq_fc5": 2, "cq_t7": 2, "cq_p7": 2, "cq_o1": 2, "cq_o2": 2, "cq_p8": 2, "cq_t8": 2, "cq_fc6": 2, "cq_f4": 2, "cq_f8": 2, "cq_af4": 2, "cq_overal": 2, "eq_sampleratequa": 2, "eq_overal": 2, "eq_af3": 2, "eq_f7": 2, "eq_f3": 2, "eq_fc5": 2, "eq_t7": 2, "eq_p7": 2, "eq_o1": 2, "eq_o2": 2, "eq_p8": 2, "eq_t8": 2, "eq_fc6": 2, "eq_f4": 2, "eq_f8": 2, "eq_af4": 2, "cq_cm": 2, "cq_drl": 2, "557": [], "width_ratio": 2, "set_ytick": 2, "nameerror": [], "252": [], "525": [], "680": [], "comment": [], "696": [], "130": 2, "set_zord": 2, "670": [], "blues_r": 2, "712": [2, 9, 345]}, "objects": {"": [[68, 0, 0, "module-0", "spkit"]], "spkit": [[74, 1, 1, "", "A_law"], [76, 2, 1, "", "ICA"], [77, 1, 1, "", "Mu_law"], [78, 1, 1, "", "OutLiers"], [79, 2, 1, "", "PCA"], [80, 1, 1, "", "PeriodStrength"], [81, 1, 1, "", "RFB"], [82, 1, 1, "", "RFB_example_1"], [83, 1, 1, "", "RFB_example_2"], [84, 1, 1, "", "RFB_prange"], [85, 1, 1, "", "SVD"], [86, 1, 1, "", "TD_Embed"], [87, 1, 1, "", "TWM_algo"], [88, 1, 1, "", "TWM_f0"], [90, 1, 1, "", "WPA_temporal"], [91, 1, 1, "", "Wavelet_decompositions"], [92, 1, 1, "", "add_noise"], [93, 1, 1, "", "agg_angles"], [94, 1, 1, "", "bin_width"], [95, 1, 1, "", "blackman_lobe"], [96, 1, 1, "", "cdf_mapping"], [97, 1, 1, "", "clean_phase"], [98, 1, 1, "", "conv1d_fb"], [99, 1, 1, "", "conv1d_fft"], [100, 1, 1, "", "conv1d_nan"], [101, 1, 1, "", "conv2d_nan"], [75, 1, 1, "", "create_dictionary"], [102, 1, 1, "", "create_multidim_space_signal"], [103, 1, 1, "", "create_signal_1d"], [104, 1, 1, "", "create_signal_2d"], [68, 0, 0, "-", "data"], [133, 1, 1, "", "denorm_kernel"], [134, 1, 1, "", "dft_analysis"], [135, 1, 1, "", "dft_synthesis"], [136, 1, 1, "", "direction_flow_map"], [137, 1, 1, "", "dispersion_entropy"], [138, 1, 1, "", "dispersion_entropy_multiscale_refined"], [139, 1, 1, "", "dominent_freq"], [140, 1, 1, "", "dominent_freq_win"], [68, 0, 0, "module-1", "eeg"], [156, 1, 1, "", "elbow_knee_point"], [157, 1, 1, "", "entropy"], [158, 1, 1, "", "entropy_approx"], [159, 1, 1, "", "entropy_cond"], [160, 1, 1, "", "entropy_cross"], [161, 1, 1, "", "entropy_diff_cond"], [162, 1, 1, "", "entropy_diff_cond_self"], [163, 1, 1, "", "entropy_diff_joint"], [164, 1, 1, "", "entropy_diff_joint_cond"], [165, 1, 1, "", "entropy_differential"], [166, 1, 1, "", "entropy_granger_causality"], [167, 1, 1, "", "entropy_joint"], [168, 1, 1, "", "entropy_kld"], [169, 1, 1, "", "entropy_permutation"], [170, 1, 1, "", "entropy_sample"], [171, 1, 1, "", "entropy_spectral"], [172, 1, 1, "", "entropy_svd"], [173, 1, 1, "", "f0_detection"], [174, 1, 1, "", "ffrft"], [175, 1, 1, "", "fill_nans_1d"], [176, 1, 1, "", "fill_nans_2d"], [177, 1, 1, "", "filterDC"], [178, 1, 1, "", "filterDC_sGolay"], [179, 1, 1, "", "filter_X"], [180, 1, 1, "", "filter_powerline"], [181, 1, 1, "", "filter_smooth_gauss"], [182, 1, 1, "", "filter_smooth_mollifier"], [183, 1, 1, "", "filter_smooth_sGolay"], [184, 1, 1, "", "filter_with_kernel"], [185, 1, 1, "", "filtering_pipeline"], [186, 1, 1, "", "frft"], [187, 1, 1, "", "friedrichs_mollifier_kernel"], [188, 1, 1, "", "gaussian_kernel"], [219, 1, 1, "", "getQuickStats"], [220, 1, 1, "", "getStats"], [221, 1, 1, "", "get_activation_time"], [222, 1, 1, "", "get_repolarisation_time"], [223, 1, 1, "", "graph_filter_adj"], [224, 1, 1, "", "graph_filter_dist"], [225, 1, 1, "", "hist_plot"], [226, 1, 1, "", "iffrft"], [227, 1, 1, "", "ifrft"], [68, 0, 0, "-", "io"], [234, 1, 1, "", "is_power2"], [235, 1, 1, "", "low_resolution"], [251, 1, 1, "", "mean_minSE"], [252, 1, 1, "", "minMSE"], [68, 0, 0, "-", "ml"], [258, 1, 1, "", "mutual_info"], [259, 1, 1, "", "mutual_info_diff"], [260, 1, 1, "", "mutual_info_diff_self"], [261, 1, 1, "", "partial_transfer_entropy"], [262, 1, 1, "", "peak_detection"], [263, 1, 1, "", "peak_interp"], [264, 1, 1, "", "periodogram"], [265, 1, 1, "", "phase_map"], [266, 1, 1, "", "phase_map_reconstruction"], [267, 1, 1, "", "plotJointEntropyXY"], [268, 1, 1, "", "quantize_FD"], [269, 1, 1, "", "quantize_signal"], [270, 1, 1, "", "ramanujan_filter"], [271, 1, 1, "", "ramanujan_filter_prange"], [272, 1, 1, "", "regularised_period_estimation"], [273, 1, 1, "", "show_compass"], [274, 1, 1, "", "show_farmulas"], [275, 1, 1, "", "signal_delayed_space"], [276, 1, 1, "", "signal_diff"], [277, 1, 1, "", "simplify_signal"], [278, 1, 1, "", "sinc_dirichlet"], [279, 1, 1, "", "sinc_interp"], [280, 1, 1, "", "sineModel_analysis"], [281, 1, 1, "", "sineModel_synthesis"], [282, 1, 1, "", "sine_spectrum"], [283, 1, 1, "", "sine_tracking"], [284, 1, 1, "", "sinetracks_cleaning"], [285, 1, 1, "", "spatial_filter_adj"], [286, 1, 1, "", "spatial_filter_dist"], [293, 1, 1, "", "stft_analysis"], [294, 1, 1, "", "stft_synthesis"], [295, 1, 1, "", "total_variation"], [296, 1, 1, "", "total_variation_win"], [297, 1, 1, "", "transfer_entropy"], [298, 1, 1, "", "transfer_entropy_cond"], [305, 1, 1, "", "wavelet_decomposed_signals"], [306, 1, 1, "", "wavelet_filtering"], [307, 1, 1, "", "wavelet_filtering_win"], [308, 1, 1, "", "wpa_coeff"], [309, 1, 1, "", "wpa_coeff_win"], [89, 1, 1, "", "wpa_plot"]], "spkit.ICA": [[76, 3, 1, "", "fit"], [76, 3, 1, "", "get_sMatrix"], [76, 3, 1, "", "get_tMatrix"], [76, 3, 1, "", "transform"], [76, 3, 1, "", "whitening"]], "spkit.PCA": [[79, 3, 1, "", "fit"], [79, 3, 1, "", "fit_transform"], [79, 3, 1, "", "transform"], [79, 3, 1, "", "whitening"]], "spkit.cwt": [[105, 1, 1, "", "GaborWave"], [106, 1, 1, "", "GaussWave"], [107, 1, 1, "", "MorlateWave"], [108, 1, 1, "", "PoissonWave"], [109, 1, 1, "", "ScalogramCWT"], [110, 1, 1, "", "ShannonWave"], [111, 1, 1, "", "WavePSD"], [112, 1, 1, "", "cMaxicanHatWave"], [113, 1, 1, "", "compare_cwt_example"]], "spkit.data": [[114, 1, 1, "", "create_dataset"], [115, 1, 1, "", "ecg_sample"], [116, 1, 1, "", "ecg_sample_12leads"], [117, 1, 1, "", "eda_sample"], [118, 1, 1, "", "eeg_sample_14ch"], [119, 1, 1, "", "eeg_sample_1ch"], [120, 1, 1, "", "eeg_sample_artifact"], [121, 1, 1, "", "egm_sample"], [122, 1, 1, "", "gaussian"], [123, 1, 1, "", "gsr_sample"], [124, 1, 1, "", "linear"], [125, 1, 1, "", "linear_data"], [126, 1, 1, "", "mclass_gauss"], [127, 1, 1, "", "moons"], [128, 1, 1, "", "optical_sample"], [129, 1, 1, "", "ppg_sample"], [130, 1, 1, "", "primitive_polynomials"], [131, 1, 1, "", "sinusoidal"], [132, 1, 1, "", "spiral"]], "spkit.eeg": [[141, 1, 1, "", "ATAR"], [142, 1, 1, "", "ATAR_1Ch"], [143, 1, 1, "", "ATAR_mCh"], [145, 1, 1, "", "ICA_filtering"], [146, 1, 1, "", "RhythmicDecomposition"], [148, 1, 1, "", "TopoMap_Zi"], [149, 1, 1, "", "display_topo_RGB"], [144, 1, 1, "", "gen_ssfi"], [150, 1, 1, "", "rhythmic_powers"], [151, 1, 1, "", "rhythmic_powers_win"], [152, 1, 1, "", "s1005_get_epos2d"], [153, 1, 1, "", "s1010_get_epos2d"], [154, 1, 1, "", "s1020_get_epos2d"], [155, 1, 1, "", "showTOPO"], [147, 1, 1, "", "topomap"]], "spkit.geometry": [[189, 2, 1, "", "Inter2DPlane"], [190, 2, 1, "", "TriAng"], [191, 1, 1, "", "area_tri"], [192, 1, 1, "", "car2spar"], [193, 1, 1, "", "dir_vectors"], [194, 1, 1, "", "divide_space"], [195, 1, 1, "", "getTriFaces"], [196, 1, 1, "", "getTriFaces_V2"], [197, 1, 1, "", "get_PCA"], [198, 1, 1, "", "get_adjacency_matrix_depth"], [199, 1, 1, "", "get_adjacency_matrix_dist"], [200, 1, 1, "", "get_adjacency_matrix_kNN"], [201, 1, 1, "", "get_center"], [202, 1, 1, "", "get_circle"], [203, 1, 1, "", "get_circular_grid"], [204, 1, 1, "", "get_ellipsoid"], [205, 1, 1, "", "get_neibours"], [206, 1, 1, "", "get_optimal_projection"], [207, 1, 1, "", "get_plane"], [208, 1, 1, "", "get_sphare"], [209, 1, 1, "", "get_square"], [210, 1, 1, "", "get_square_grid"], [211, 1, 1, "", "lin_inter"], [212, 1, 1, "", "node2C_to_adjacency_matrix"], [213, 1, 1, "", "opt_project"], [214, 1, 1, "", "plot_proj"], [215, 1, 1, "", "rotation_matrix"], [216, 1, 1, "", "spar2car"], [217, 1, 1, "", "surface_plot_mayavi"], [218, 1, 1, "", "surface_reconstruction"]], "spkit.geometry.TriAng": [[190, 3, 1, "", "get_edges_deg"]], "spkit.io": [[228, 1, 1, "", "read_bdf"], [229, 1, 1, "", "read_hdf"], [230, 1, 1, "", "read_surf"], [231, 1, 1, "", "read_surf_file"], [232, 1, 1, "", "read_vtk"], [233, 1, 1, "", "write_vtk"]], "spkit.mea": [[236, 1, 1, "", "activation_repol_time_loc"], [237, 1, 1, "", "activation_time_loc"], [238, 1, 1, "", "align_cycles"], [239, 1, 1, "", "analyse_mea_file"], [240, 1, 1, "", "arrange_mea_grid"], [241, 1, 1, "", "compute_cv"], [242, 1, 1, "", "egm_features"], [243, 1, 1, "", "extract_egm"], [244, 1, 1, "", "find_bad_channels_idx"], [245, 1, 1, "", "get_stim_loc"], [246, 1, 1, "", "mat_1_show"], [247, 1, 1, "", "mat_list_show"], [248, 1, 1, "", "mea_feature_map"], [249, 1, 1, "", "plot_mea_grid"], [250, 1, 1, "", "unarrange_mea_grid"]], "spkit.ml": [[253, 2, 1, "", "ClassificationTree"], [254, 2, 1, "", "DecisionTree"], [255, 2, 1, "", "LogisticRegression"], [256, 2, 1, "", "NaiveBayes"], [257, 2, 1, "", "RegressionTree"]], "spkit.ml.ClassificationTree": [[253, 3, 1, "", "DictDepth"], [253, 3, 1, "", "fit"], [253, 3, 1, "", "getLcurve"], [253, 3, 1, "", "getTreeDepth"], [253, 3, 1, "", "get_tree"], [253, 3, 1, "", "plotLcurve"], [253, 3, 1, "", "plotTree"], [253, 3, 1, "", "plotTreePath"], [253, 3, 1, "", "predict"], [253, 3, 1, "", "predict_proba"], [253, 3, 1, "", "pruneTree"], [253, 3, 1, "", "set_featureNames"], [253, 3, 1, "", "set_xyNode"], [253, 3, 1, "", "showTree"], [253, 3, 1, "", "shrinkTree"], [253, 3, 1, "", "treeDepth"], [253, 3, 1, "", "updateTree"]], "spkit.ml.DecisionTree": [[254, 3, 1, "", "DictDepth"], [254, 3, 1, "", "fit"], [254, 3, 1, "", "getLcurve"], [254, 3, 1, "", "getTreeDepth"], [254, 3, 1, "", "get_tree"], [254, 3, 1, "", "plotLcurve"], [254, 3, 1, "", "plotTree"], [254, 3, 1, "", "plotTreePath"], [254, 3, 1, "", "predict"], [254, 3, 1, "", "predict_proba"], [254, 3, 1, "", "pruneTree"], [254, 3, 1, "", "set_featureNames"], [254, 3, 1, "", "set_xyNode"], [254, 3, 1, "", "showTree"], [254, 3, 1, "", "shrinkTree"], [254, 3, 1, "", "treeDepth"], [254, 3, 1, "", "updateTree"]], "spkit.ml.LogisticRegression": [[255, 3, 1, "", "Loss"], [255, 3, 1, "", "Normalize"], [255, 3, 1, "", "PolyFeature"], [255, 3, 1, "", "fit"], [255, 3, 1, "", "getWeights"], [255, 3, 1, "", "getWeightsAsList"], [255, 3, 1, "", "oneHot"], [255, 3, 1, "", "plot_Lcurve"], [255, 3, 1, "", "plot_boundries"], [255, 3, 1, "", "plot_weights"], [255, 3, 1, "", "plot_weights2"], [255, 3, 1, "", "predict"], [255, 3, 1, "", "predict_proba"], [255, 3, 1, "", "regularization"], [255, 3, 1, "", "sigmoid"], [255, 3, 1, "", "softmax"]], "spkit.ml.NaiveBayes": [[256, 3, 1, "", "VizPx"], [256, 3, 1, "", "fit"], [256, 3, 1, "", "predict"], [256, 3, 1, "", "predict_prob"], [256, 3, 1, "", "set_class_labels"], [256, 3, 1, "", "set_feature_names"]], "spkit.ml.RegressionTree": [[257, 3, 1, "", "DictDepth"], [257, 3, 1, "", "fit"], [257, 3, 1, "", "getLcurve"], [257, 3, 1, "", "getTreeDepth"], [257, 3, 1, "", "get_tree"], [257, 3, 1, "", "plotLcurve"], [257, 3, 1, "", "plotTree"], [257, 3, 1, "", "plotTreePath"], [257, 3, 1, "", "predict"], [257, 3, 1, "", "predict_proba"], [257, 3, 1, "", "pruneTree"], [257, 3, 1, "", "set_featureNames"], [257, 3, 1, "", "set_xyNode"], [257, 3, 1, "", "showTree"], [257, 3, 1, "", "shrinkTree"], [257, 3, 1, "", "treeDepth"], [257, 3, 1, "", "updateTree"]], "spkit.stats": [[287, 1, 1, "", "get_stats"], [288, 1, 1, "", "outliers"], [289, 1, 1, "", "plot_groups_boxes"], [290, 1, 1, "", "quick_stats"], [291, 1, 1, "", "test_2groups"], [292, 1, 1, "", "test_groups"]], "spkit.utils": [[299, 1, 1, "", "ProgBar"], [300, 1, 1, "", "ProgBar_JL"], [301, 2, 1, "", "bcolors"], [302, 1, 1, "", "pretty_print"], [303, 2, 1, "", "txcolors"], [304, 1, 1, "", "view_hierarchical_order"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"electroencephalographi": [0, 10, 65], "eeg": [0, 2, 3, 4, 5, 6, 7, 8, 10, 15, 65, 68, 71, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 320, 353], "atar": [1, 4, 6, 65, 141], "automat": 1, "tunabl": 1, "artifact": [1, 4, 5, 6, 65, 71], "remov": [1, 4, 5, 6, 65, 324, 327], "algorithm": [1, 55, 65], "appli": [1, 3], "soft": 1, "threshold": [1, 52], "linear": [1, 4, 124, 332], "attenu": [1, 4], "elimin": [1, 4], "tune": 1, "beta": 1, "control": 1, "aggress": 1, "elim": 1, "other": 1, "set": [1, 29], "chang": [1, 314], "wavelet": [1, 10, 34, 50, 51, 52, 68, 319, 320, 323, 328, 333, 340, 348], "function": [1, 55, 68, 313, 320], "upper": 1, "lower": 1, "bound": 1, "k_1": 1, "k_2": 1, "ipr": 1, "interpercentil": 1, "rang": [1, 39, 320], "us": [1, 4, 5, 6, 76, 82, 83, 92, 94, 100, 101, 103, 104, 109, 113, 114, 116, 118, 119, 134, 135, 136, 137, 141, 145, 147, 150, 151, 152, 153, 154, 157, 158, 159, 160, 167, 168, 170, 175, 176, 178, 179, 186, 225, 227, 228, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 255, 256, 257, 258, 270, 271, 272, 280, 281, 289, 291, 293, 294, 300, 302, 305, 306, 325, 329, 335], "fix": [1, 55], "theta_": 1, "alpha": [1, 314], "window": [1, 8, 313], "length": 1, "5": [1, 30, 67, 352, 353, 354], "sec": 1, "independ": 3, "principl": 3, "compon": 3, "analysi": [3, 10, 30, 41, 43, 50, 66, 67, 68, 312, 319, 320, 321, 323, 331, 334, 336, 337, 338, 340, 348], "load": [3, 4, 5, 6, 8], "filter": [3, 4, 5, 6, 8, 38, 39, 52, 64, 65, 66, 68, 323, 324, 325, 326, 327, 328, 329, 330, 339, 348], "signal": [3, 4, 5, 6, 8, 10, 15, 34, 37, 39, 40, 63, 68, 72, 319, 320, 322, 323, 332, 335, 338, 339, 347, 348], "ica": [3, 5, 6, 65, 76], "plot": [2, 3, 4, 6, 7, 47, 67, 320], "decomposit": [3, 34, 52, 68], "construct": 3, "matric": 3, "extend": 3, "infomax": 3, "mode": [4, 6], "On": 5, "smaller": 5, "segment": 5, "three": 6, "correct": [6, 34], "residu": [6, 43], "comput": [7, 9, 18, 27, 30, 31, 35, 36, 45, 49, 53, 65, 67, 345], "rhythmic": [7, 8, 65], "featur": [7, 20, 30, 65, 67, 316], "phyaat": 7, "semant": 7, "dataset": [7, 26], "extract": [2, 7, 30, 67], "compar": 7, "topograph": [8, 34, 65], "map": [8, 30, 34, 65, 67, 68, 332], "power": [8, 65], "topomap": [8, 147], "total": 8, "specif": [8, 39], "time": [8, 9, 18, 27, 30, 31, 35, 36, 45, 49, 53, 66, 67, 314, 337, 345, 348], "exampl": [10, 22, 23, 26, 29, 30, 34, 38, 39, 43, 48, 51, 58, 65, 67, 76, 82, 83, 92, 94, 100, 101, 103, 104, 109, 113, 114, 116, 118, 119, 134, 135, 136, 137, 141, 145, 147, 150, 151, 152, 153, 154, 157, 158, 159, 160, 167, 168, 170, 175, 176, 178, 179, 186, 225, 227, 228, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 255, 256, 257, 258, 270, 271, 272, 280, 281, 289, 291, 293, 294, 300, 302, 305, 306, 313, 314, 321, 323, 331, 336, 337], "multi": [10, 15, 28, 33, 34, 66, 67, 68, 313], "electrod": [10, 28, 33, 34, 67, 68], "arrai": [10, 28, 33, 34, 67, 68], "mea": [10, 28, 29, 30, 33, 34, 67, 68, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 353], "releas": [10, 32, 33, 34, 59, 350], "highlight": [10, 32, 33, 34], "inform": [10, 11, 68, 310, 313, 314, 347], "theori": [10, 11, 68, 310, 347], "machin": [10, 19, 68, 315, 347], "learn": [10, 19, 68, 315, 347], "process": [2, 10, 33, 34, 37, 63, 67, 68, 319, 347, 348, 353], "statist": [10, 46, 68, 341, 342], "dispers": [12, 13, 313], "entropi": [12, 13, 14, 15, 16, 17, 68, 157, 312, 313, 314], "embed": [12, 313], "dim": 12, "top": 13, "pattern": 13, "discreet": [14, 314, 323], "sourc": [14, 16, 314], "channel": [15, 30, 66, 67, 71], "real": [16, 68, 71, 314], "valu": [16, 34, 314], "sampl": [17, 58, 68, 69, 70, 71, 313, 314], "approxim": [17, 314], "comparison": [17, 51], "decis": [20, 21, 22, 23, 24, 316], "tree": [20, 21, 22, 23, 24, 316], "without": 20, "convert": 20, "catogor": 20, "classif": [21, 22, 26, 316, 317], "depth": 21, "boundari": 21, "shrink": [22, 23, 316], "capabl": [22, 23], "regress": [23, 25, 316, 317], "visualis": [24, 25, 26, 316], "while": 24, "buid": 24, "logist": [25, 317], "naiv": [26, 318], "bay": [26, 318], "classifi": 26, "1": [26, 30, 38, 41, 48, 67, 313, 320, 324, 352, 353, 354], "iri": 26, "2": [26, 30, 34, 38, 41, 48, 52, 67, 320, 352, 353, 354], "breast": 26, "cancer": 26, "3": [26, 30, 40, 41, 67, 320, 352, 353, 354], "digit": 26, "minim": 29, "result": 29, "step": [30, 67], "wise": [30, 67], "read": [2, 30, 65, 67, 68, 311], "file": [2, 30, 43, 65, 67, 68, 311], "stim": [30, 67], "localis": [30, 67], "align": [30, 67], "cycl": [30, 67], "4": [30, 41, 67, 313, 352, 353, 354], "averag": [30, 67], "select": [30, 67], "one": [30, 67], "6": [30, 33, 67, 352, 353, 354], "activ": [30, 66, 67], "repolaris": [30, 67], "7": [30, 34, 67, 352, 353, 354], "apd": [30, 67], "8": [30, 67, 352, 353, 354], "egm": [30, 66, 67], "9": [30, 33, 34, 67, 352, 353, 354], "10": [30, 34, 39, 40, 67], "bad": [30, 67], "11": [30, 67], "matrix": [30, 67, 68, 325, 329], "12": [30, 67, 71], "interpol": [30, 67], "13": [30, 67], "conduct": [30, 67], "veloc": [30, 67], "spkit": [33, 34, 59, 68, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 353], "0": [33, 34, 39, 352, 353, 354], "20": [34, 43], "system": 34, "locat": 34, "all": 34, "eletrod": 34, "05": 34, "convolut": [34, 348], "miss": 34, "nan": 34, "fill": 34, "inter": 34, "exterpol": 34, "decomp": 34, "ramanujan": [33, 38, 39, 40, 68, 334], "bank": [38, 39], "demo": 38, "diff": 38, "period": [33, 38, 39, 40, 334], "snr": [39, 40], "estim": [33, 39], "from": [2, 39, 43, 65], "multipl": 39, "dictionari": 40, "spars": 40, "penalti": 40, "synthesi": [41, 43, 44, 321, 331, 336, 337], "model": [41, 43, 44, 68, 335, 336], "dft": [41, 335], "stft": [41, 43], "fraction": [41, 42, 331], "fourier": [41, 42, 321, 331, 337, 348], "transform": [41, 42, 68, 320, 323, 331, 333, 337], "frft": [41, 42, 186], "sinasodu": 41, "audio": [41, 43, 44, 320], "sinusoid": [43, 44, 131, 336], "download": [2, 43], "onli": 43, "sinusod": 43, "track": 43, "discard": 43, "part": 43, "mostli": 43, "hiss": 43, "sound": 43, "save": 43, "plai": 43, "jupyt": 43, "auditori": 47, "attent": 47, "group": [47, 48, 342], "data": [2, 47, 58, 68, 69, 71, 72, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 347], "test": [48, 55, 342], "two": [48, 342], "pair": 48, "unpair": 48, "scalogram": [51, 320], "cwt": [51, 68, 105, 106, 107, 108, 109, 110, 111, 112, 113], "gauss": [51, 320], "morlet": [51, 320], "gabor": [51, 320], "poisson": [51, 320], "complex": [51, 335], "maxican": [51, 320], "shannon": [51, 313, 314, 320], "optim": 52, "an": [52, 313], "db3": 52, "With": [52, 320], "sd": 52, "iqr": 52, "limit": 52, "number": 52, "level": 52, "db12": 52, "symlet": 52, "sym4": 52, "coiflet": 52, "coif4": 52, "contribut": 54, "how": 54, "contibut": 54, "involv": 54, "develop": [55, 68, 349, 352, 354], "bug": 55, "document": 55, "improv": 55, "user": [55, 349], "guid": [55, 349], "tutori": [55, 347], "ad": 55, "new": [55, 68], "version": [56, 352, 353, 354], "empti": [57, 344], "page": [57, 344], "head": [57, 344], "get": 58, "start": 58, "instal": [58, 59, 349], "api": [58, 68], "latest": 59, "troubleshoot": 59, "option": [59, 67], "tabl": 60, "Of": 60, "content": 60, "biomed": 63, "electrocardiographi": 64, "clean": 64, "r": 64, "peak": 64, "detect": 64, "preprocess": 65, "electrogram": [66, 73], "phase": [66, 68], "complet": 67, "record": 67, "hdf": [67, 311], "rt": 67, "i": [67, 68, 313, 314, 348], "identifi": 67, "creat": 67, "figur": 67, "refer": [68, 314, 323, 328, 332], "funtion": 68, "core": [68, 353], "advanc": 68, "sythesi": 68, "advnace_techniqu": 68, "dwt": 68, "method": [33, 68, 334], "simul": [68, 72], "event": 68, "angl": 68, "domin": 68, "frequenc": [68, 320, 348], "ml": [68, 72, 253, 254, 255, 256, 257, 353], "For": 68, "statistist": 68, "stat": [68, 287, 288, 289, 290, 291, 292, 353], "write": [68, 311], "o": 68, "io": [68, 228, 229, 230, 231, 232, 233, 311], "util": [68, 299, 300, 301, 302, 303, 304, 341, 343], "geometr": 68, "under": [68, 349, 352, 354], "geometri": [68, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "TO": 68, "BE": 68, "deprec": 68, "data2": 70, "world": 71, "14": 71, "singl": 71, "ecg": [64, 71], "lead": 71, "optic": 71, "rabbit": 71, "heart": 71, "ppg": 71, "photoplethysmogram": 71, "gsr": 71, "eda": 71, "galvan": 71, "skin": 71, "respons": 71, "1d": 72, "arbitari": 72, "2d": 72, "imag": 72, "patch": 72, "a_law": 74, "create_dictionari": 75, "mu_law": 77, "outlier": [78, 288], "pca": 79, "periodstrength": 80, "rfb": 81, "rfb_example_1": 82, "rfb_example_2": 83, "rfb_prang": 84, "svd": [85, 314], "td_emb": 86, "twm_algo": 87, "twm_f0": 88, "wpa_plot": 89, "wpa_tempor": 90, "wavelet_decomposit": 91, "add_nois": 92, "agg_angl": 93, "bin_width": 94, "blackman_lob": 95, "cdf_map": 96, "clean_phas": 97, "conv1d_fb": 98, "conv1d_fft": 99, "conv1d_nan": 100, "conv2d_nan": 101, "create_multidim_space_sign": 102, "create_signal_1d": 103, "create_signal_2d": 104, "gaborwav": 105, "gausswav": 106, "morlatewav": 107, "poissonwav": 108, "scalogramcwt": 109, "shannonwav": 110, "wavepsd": 111, "cmaxicanhatwav": 112, "compare_cwt_exampl": 113, "create_dataset": 114, "ecg_sampl": 115, "ecg_sample_12lead": 116, "eda_sampl": 117, "eeg_sample_14ch": 118, "eeg_sample_1ch": 119, "eeg_sample_artifact": 120, "egm_sampl": 121, "gaussian": [122, 328], "gsr_sampl": 123, "linear_data": 125, "mclass_gauss": 126, "moon": 127, "optical_sampl": 128, "ppg_sampl": 129, "primitive_polynomi": 130, "spiral": 132, "denorm_kernel": 133, "dft_analysi": 134, "dft_synthesi": 135, "direction_flow_map": 136, "dispersion_entropi": 137, "dispersion_entropy_multiscale_refin": 138, "dominent_freq": 139, "dominent_freq_win": 140, "atar_1ch": 142, "atar_mch": 143, "gen_ssfi": 144, "ica_filt": 145, "rhythmicdecomposit": 146, "topomap_zi": 148, "display_topo_rgb": 149, "rhythmic_pow": 150, "rhythmic_powers_win": 151, "s1005_get_epos2d": 152, "s1010_get_epos2d": 153, "s1020_get_epos2d": 154, "showtopo": 155, "elbow_knee_point": 156, "entropy_approx": 158, "entropy_cond": 159, "entropy_cross": 160, "entropy_diff_cond": 161, "entropy_diff_cond_self": 162, "entropy_diff_joint": 163, "entropy_diff_joint_cond": 164, "entropy_differenti": 165, "entropy_granger_caus": 166, "entropy_joint": 167, "entropy_kld": 168, "entropy_permut": 169, "entropy_sampl": 170, "entropy_spectr": 171, "entropy_svd": 172, "f0_detect": 173, "ffrft": 174, "fill_nans_1d": 175, "fill_nans_2d": 176, "filterdc": 177, "filterdc_sgolai": 178, "filter_x": 179, "filter_powerlin": 180, "filter_smooth_gauss": 181, "filter_smooth_mollifi": 182, "filter_smooth_sgolai": 183, "filter_with_kernel": 184, "filtering_pipelin": 185, "friedrichs_mollifier_kernel": 187, "gaussian_kernel": 188, "inter2dplan": 189, "triang": 190, "area_tri": 191, "car2spar": 192, "dir_vector": 193, "divide_spac": 194, "gettrifac": 195, "gettrifaces_v2": 196, "get_pca": 197, "get_adjacency_matrix_depth": 198, "get_adjacency_matrix_dist": 199, "get_adjacency_matrix_knn": 200, "get_cent": 201, "get_circl": 202, "get_circular_grid": 203, "get_ellipsoid": 204, "get_neibour": 205, "get_optimal_project": 206, "get_plan": 207, "get_sphar": 208, "get_squar": 209, "get_square_grid": 210, "lin_int": 211, "node2c_to_adjacency_matrix": 212, "opt_project": 213, "plot_proj": 214, "rotation_matrix": 215, "spar2car": 216, "surface_plot_mayavi": 217, "surface_reconstruct": 218, "getquickstat": 219, "getstat": 220, "get_activation_tim": 221, "get_repolarisation_tim": 222, "graph_filter_adj": 223, "graph_filter_dist": 224, "hist_plot": 225, "iffrft": 226, "ifrft": 227, "read_bdf": 228, "read_hdf": 229, "read_surf": 230, "read_surf_fil": 231, "read_vtk": 232, "write_vtk": 233, "is_power2": 234, "low_resolut": 235, "activation_repol_time_loc": 236, "activation_time_loc": 237, "align_cycl": 238, "analyse_mea_fil": 239, "arrange_mea_grid": 240, "compute_cv": 241, "egm_featur": 242, "extract_egm": 243, "find_bad_channels_idx": 244, "get_stim_loc": 245, "mat_1_show": 246, "mat_list_show": 247, "mea_feature_map": 248, "plot_mea_grid": 249, "unarrange_mea_grid": 250, "mean_mins": 251, "minms": 252, "classificationtre": 253, "decisiontre": 254, "logisticregress": 255, "naivebay": 256, "regressiontre": 257, "mutual_info": 258, "mutual_info_diff": 259, "mutual_info_diff_self": 260, "partial_transfer_entropi": 261, "peak_detect": 262, "peak_interp": 263, "periodogram": 264, "phase_map": 265, "phase_map_reconstruct": 266, "plotjointentropyxi": 267, "quantize_fd": 268, "quantize_sign": 269, "ramanujan_filt": 270, "ramanujan_filter_prang": 271, "regularised_period_estim": 272, "show_compass": 273, "show_farmula": 274, "signal_delayed_spac": 275, "signal_diff": 276, "simplify_sign": 277, "sinc_dirichlet": 278, "sinc_interp": 279, "sinemodel_analysi": 280, "sinemodel_synthesi": 281, "sine_spectrum": 282, "sine_track": 283, "sinetracks_clean": 284, "spatial_filter_adj": 285, "spatial_filter_dist": 286, "get_stat": 287, "plot_groups_box": 289, "quick_stat": 290, "test_2group": 291, "test_group": 292, "stft_analysi": 293, "stft_synthesi": 294, "total_vari": 295, "total_variation_win": 296, "transfer_entropi": 297, "transfer_entropy_cond": 298, "progbar": 299, "progbar_jl": 300, "bcolor": 301, "pretty_print": 302, "txcolor": 303, "view_hierarchical_ord": 304, "wavelet_decomposed_sign": 305, "wavelet_filt": 306, "wavelet_filtering_win": 307, "wpa_coeff": 308, "wpa_coeff_win": 309, "edf": [2, 65, 311], "bdf": 311, "surf": 311, "vtk": 311, "applic": 312, "transfer": [312, 321], "te_": 312, "x": [312, 313, 314], "rightarrow": 312, "y": [312, 313, 314], "partial": [312, 313], "z": 312, "granger": 312, "causal": 312, "gc_": 312, "connect": 312, "differenti": [313, 322], "h_": [313, 314], "de": 313, "background": 313, "dimens": 313, "slide": 313, "scale": [313, 320], "multiscal": 313, "cdot": 313, "self": 313, "condit": [313, 314], "x_": 313, "y_": 313, "joint": [313, 314], "mutual": [313, 314], "i_": 313, "base": 314, "r\u00e9nyi": 314, "order": [314, 324], "h": 314, "cross": 314, "xy": 314, "kl": 314, "diverg": 314, "ae": 314, "se": 314, "spectral": [314, 324, 328, 330], "f": 314, "sigma": 314, "permut": 314, "pi": 314, "prone": 316, "catogori": 316, "continu": [320, 333], "paramet": 320, "default": 320, "q": 320, "speech": 320, "type": 320, "n": 320, "discret": 321, "gradient": 322, "shrinkag": 323, "packag": 323, "decompos": 323, "tempor": [323, 332], "drift": 324, "iir": 324, "savitzki": [324, 328], "golai": [324, 328], "graph": 325, "adjac": [325, 329], "proxim": [325, 329], "distanc": [325, 329], "nearest": [325, 329], "neighbour": [325, 329], "kernel": 326, "pipelin": 327, "powerlin": 327, "interfer": 327, "smooth": 328, "mollifi": 328, "spatial": 329, "3d": 329, "lowpass": 330, "highpass": 330, "bandpass": 330, "bandreject": 330, "bandstop": 330, "custom": 330, "quantiz": 332, "low": 332, "resolut": 332, "non": 332, "A": 332, "law": 332, "\u03bc": 332, "cdf": 332, "simplifi": 335, "sinasudol": 335, "short": 337, "gropu": 342, "scienc": 347, "program": 347, "interact": 347, "wigdet": 347, "what": 348, "domain": 348, "histori": 350, "experiment": [352, 354], "infotheori": 353, "geomatri": 353, "packet": 34, "blog": 347, "session": 347, "samepl": 2, "cover": 2}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"ATAR: Automatic and Tunable Artifact Removal Algorithm": [[1, "atar-automatic-and-tunable-artifact-removal-algorithm"]], "Applying ATAR Algorithm": [[1, "applying-atar-algorithm"]], "Soft Thresholding:": [[1, "soft-thresholding"]], "Linear Attenuation:": [[1, "linear-attenuation"]], "Elimination:": [[1, "elimination"]], "Tuning \\beta with \u2018soft\u2019 : Controlling the aggressiveness": [[1, "tuning-beta-with-soft-controlling-the-aggressiveness"]], "Tuning \\beta with \u2018elim\u2019": [[1, "tuning-beta-with-elim"]], "Other settings": [[1, "other-settings"]], "Changing wavelet function": [[1, "changing-wavelet-function"]], "Changing upper and lower bounds: k_1, k_2": [[1, "changing-upper-and-lower-bounds-k-1-k-2"]], "Changing IPR -  Interpercentile range": [[1, "changing-ipr-interpercentile-range"]], "Using the fix threshold \\theta_\\alpha": [[1, "using-the-fix-threshold-theta-alpha"]], "Changing window length (5 sec)": [[1, "changing-window-length-5-sec"]], "Independed Principle Component analysis": [[3, "independed-principle-component-analysis"]], "Load and filter EEG Signal": [[3, "load-and-filter-eeg-signal"], [4, "load-and-filter-eeg-signal"], [5, "load-and-filter-eeg-signal"], [6, "load-and-filter-eeg-signal"], [8, "load-and-filter-eeg-signal"]], "Applying ICA": [[3, "applying-ica"]], "Plots": [[3, "plots"], [4, "plots"]], "Decomposition and Construction matrices (Extended InfoMax)": [[3, "decomposition-and-construction-matrices-extended-infomax"]], "EEG Artifact removal using ATAR": [[4, "eeg-artifact-removal-using-atar"]], "ATAR: Linear Attenuation Mode": [[4, "atar-linear-attenuation-mode"]], "ATAR - Elimination Mode": [[4, "atar-elimination-mode"]], "Information Theory": [[11, "information-theory"], [310, "information-theory"], [347, "information-theory"], [10, "information-theory"]], "Entropy  -  Discreet Source": [[14, "entropy-discreet-source"]], "Entropy  -  Real-Valued Source": [[16, "entropy-real-valued-source"]], "Sample and Approximate Entropy: Comparison": [[17, "sample-and-approximate-entropy-comparison"]], "Computation times": [[18, "computation-times"], [27, "computation-times"], [31, "computation-times"], [35, "computation-times"], [36, "computation-times"], [45, "computation-times"], [49, "computation-times"], [53, "computation-times"], [9, "computation-times"], [345, "computation-times"]], "Machine Learning": [[19, "machine-learning"], [68, "machine-learning"], [315, "machine-learning"], [347, "machine-learning"], [10, "machine-learning"]], "Decision Trees without converting Catogorical Features": [[20, "decision-trees-without-converting-catogorical-features"]], "Classification Trees: Depth & Decision boundaries": [[21, "classification-trees-depth-decision-boundaries"]], "Decision Trees with shrinking capability - Classification example": [[22, "decision-trees-with-shrinking-capability-classification-example"]], "Decision Trees with shrinking capability - Regression example": [[23, "decision-trees-with-shrinking-capability-regression-example"]], "Decision Trees with visualisations while buiding tree": [[24, "decision-trees-with-visualisations-while-buiding-tree"]], "Logistic Regression -  Visualisation": [[25, "logistic-regression-visualisation"]], "Naive Bayes classifier -  Visualisation": [[26, "naive-bayes-classifier-visualisation"]], "Example 1 : Iris dataset": [[26, "example-1-iris-dataset"]], "Example 2: Breast Cancer": [[26, "example-2-breast-cancer"]], "Example 3:: Digit Classification": [[26, "example-3-digit-classification"]], "Multi-Electrode-Array (MEA)": [[28, "multi-electrode-array-mea"], [10, "multi-electrode-array-mea"]], "Release Highlights": [[32, "release-highlights"], [10, "release-highlights"]], "Signal Processing": [[37, "signal-processing"], [348, "signal-processing"], [347, "signal-processing"], [10, "signal-processing"], [319, "signal-processing"]], "Ramanujan Filter Banks Example": [[39, "ramanujan-filter-banks-example"]], "Signal with period 10 and SNR = 0": [[39, "signal-with-period-10-and-snr-0"]], "Period Estimation from specific range of period": [[39, "period-estimation-from-specific-range-of-period"]], "Multiple Periods": [[39, "multiple-periods"]], "Ramanujan Dictionary  - with sparse penalty": [[40, "ramanujan-dictionary-with-sparse-penalty"]], "Signal with 3-periods and SNR=10": [[40, "signal-with-3-periods-and-snr-10"]], "Fractional Fourier Transform: FRFT": [[42, "fractional-fourier-transform-frft"]], "Sinusoidal Model:  Analysis and Synthesis": [[43, "sinusoidal-model-analysis-and-synthesis"]], "Example": [[43, "example"]], "Download audio file": [[43, "download-audio-file"]], "STFT of Audio": [[43, "stft-of-audio"]], "Analysis of Audio with only 20 sinusodal tracks": [[43, "analysis-of-audio-with-only-20-sinusodal-tracks"]], "Synthesis of Audio from 20 sinusodal tracks": [[43, "synthesis-of-audio-from-20-sinusodal-tracks"]], "Residual: Discarded part of Audio - mostly hissing sound": [[43, "residual-discarded-part-of-audio-mostly-hissing-sound"]], "Save files and Play with Jupyter": [[43, "save-files-and-play-with-jupyter"]], "Sinusoidal Model : Synthesis : Audio": [[44, "sinusoidal-model-synthesis-audio"]], "Statistics": [[46, "statistics"], [68, "statistics"], [342, "statistics"], [10, "statistics"]], "Auditory Attention: Plot Group Data": [[47, "auditory-attention-plot-group-data"]], "Wavelet Analysis": [[50, "wavelet-analysis"], [68, "wavelet-analysis"], [68, "id4"], [340, "wavelet-analysis"], [348, "wavelet-analysis"], [10, "wavelet-analysis"], [319, "wavelet-analysis"]], "Contributing": [[54, "contributing"]], "How to contibute or Involve?": [[54, "how-to-contibute-or-involve"]], "Development": [[55, "development"]], "Testing functions and fixing bugs": [[55, "testing-functions-and-fixing-bugs"]], "Documentation Improving": [[55, "documentation-improving"]], "User Guide Improving": [[55, "user-guide-improving"]], "Developing Tutorials": [[55, "developing-tutorials"]], "Adding new algorithms": [[55, "adding-new-algorithms"]], "Versions": [[56, "versions"]], "Empty Page": [[57, "empty-page"], [344, "empty-page"]], "Heading": [[57, "heading"], [344, "heading"]], "Getting Started": [[58, "getting-started"]], "Install": [[58, "install"]], "Sample Data": [[58, "sample-data"]], "Examples": [[58, "examples"], [10, "examples"]], "API": [[58, "api"]], "Table Of Contents": [[60, "table-of-contents"]], "API Reference": [[68, "api-reference"]], "Entropy Funtions": [[68, "entropy-funtions"]], "spkit.core": [[68, "spkit-core"], [68, "id1"], [68, "id2"], [68, "id3"]], "Information Theory - Advanced": [[68, "information-theory-advanced"]], "Filtering - Signal Processing": [[68, "filtering-signal-processing"]], "spkit.core.processing": [[68, "spkit-core-processing"], [353, "spkit-core-processing"]], "Analysis & Sythesis Models": [[68, "analysis-sythesis-models"]], "spkit.core.advnace_techniques": [[68, "spkit-core-advnace-techniques"]], "spkit.core : DWT": [[68, "spkit-core-dwt"]], "spkit.cwt: CWT": [[68, "spkit-cwt-cwt"]], "Ramanujan Methods": [[68, "ramanujan-methods"], [68, "id5"], [334, "ramanujan-methods"]], "Simulate Signals": [[68, "simulate-signals"]], "EEG Signal Processing": [[68, "eeg-signal-processing"], [68, "id6"]], "spkit.eeg": [[68, "module-spkit.eeg"], [353, "spkit-eeg"]], "MEA  - Multi-Electrode Array": [[68, "mea-multi-electrode-array"]], "spkit.mea": [[68, "spkit-mea"], [353, "spkit-mea"]], "Signal Analysis and Processing": [[68, "signal-analysis-and-processing"]], "New Methods": [[68, "new-methods"]], "Signal Transformations/Mapping": [[68, "signal-transformations-mapping"]], "Event Analysis": [[68, "event-analysis"]], "Phase, Angles, Dominent Frequencies": [[68, "phase-angles-dominent-frequencies"]], "spkit.ml": [[68, "module-spkit.ml"], [353, "spkit-ml"]], "Sample Data & Simulate": [[68, "sample-data-simulate"]], "spkit.data": [[68, "module-spkit.data"]], "Sample of real data/signal": [[68, "sample-of-real-data-signal"]], "Simulation of Data": [[68, "simulation-of-data"]], "For Machine Learning": [[68, "for-machine-learning"]], "For Signal Processing": [[68, "for-signal-processing"]], "Matrix Decomposition": [[68, "matrix-decomposition"]], "Statististics": [[68, "statististics"]], "spkit.stats": [[68, "spkit-stats"], [353, "spkit-stats"]], "Read/Write Files I/O": [[68, "read-write-files-i-o"]], "spkit.io": [[68, "module-spkit.io"]], "Utilities": [[68, "utilities"], [343, "utilities"]], "spkit.utils": [[68, "spkit-utils"]], "Geometrical functions [UNDER DEVELOPMENT]": [[68, "geometrical-functions-under-development"]], "spkit.geometry": [[68, "spkit-geometry"]], "TO BE DEPRECATED": [[68, "to-be-deprecated"]], "IO Utilities": [[68, "io-utilities"]], "Data": [[68, "data"]], "Data Samples": [[69, "data-samples"]], "Real-world-Samples": [[71, "real-world-samples"]], "EEG-Sample": [[71, "eeg-sample"]], "14-Channel": [[71, "channel"]], "Single-Channel": [[71, "single-channel"]], "Artifact-Sample": [[71, "artifact-sample"]], "ECG-Sample": [[71, "ecg-sample"]], "12-lead ECG": [[71, "lead-ecg"]], "Single-lead ECG": [[71, "single-lead-ecg"], [71, "id1"]], "Optical Data": [[71, "optical-data"]], "Rabbit-Heart": [[71, "rabbit-heart"]], "PPG:  Photoplethysmogram": [[71, "ppg-photoplethysmogram"]], "GSR/EDA: Galvanic Skin Response": [[71, "gsr-eda-galvanic-skin-response"]], "Simulation": [[72, "simulation"]], "1D- Arbitary signal": [[72, "d-arbitary-signal"]], "2D-Image Patch": [[72, "d-image-patch"]], "2D-Data for ML": [[72, "d-data-for-ml"]], "Electrogram": [[73, "electrogram"]], "spkit.A_law": [[74, "spkit-a-law"]], "spkit.ICA": [[76, "spkit-ica"]], "Examples using spkit.ICA": [[76, "examples-using-spkit-ica"]], "spkit.Mu_law": [[77, "spkit-mu-law"]], "spkit.OutLiers": [[78, "spkit-outliers"]], "spkit.PCA": [[79, "spkit-pca"]], "spkit.PeriodStrength": [[80, "spkit-periodstrength"]], "spkit.RFB": [[81, "spkit-rfb"]], "spkit.RFB_example_1": [[82, "spkit-rfb-example-1"]], "Examples using spkit.RFB_example_1": [[82, "examples-using-spkit-rfb-example-1"]], "spkit.RFB_example_2": [[83, "spkit-rfb-example-2"]], "Examples using spkit.RFB_example_2": [[83, "examples-using-spkit-rfb-example-2"]], "spkit.RFB_prange": [[84, "spkit-rfb-prange"]], "spkit.SVD": [[85, "spkit-svd"]], "spkit.TD_Embed": [[86, "spkit-td-embed"]], "spkit.TWM_algo": [[87, "spkit-twm-algo"]], "spkit.TWM_f0": [[88, "spkit-twm-f0"]], "spkit.WPA_temporal": [[90, "spkit-wpa-temporal"]], "spkit.Wavelet_decompositions": [[91, "spkit-wavelet-decompositions"]], "spkit.add_noise": [[92, "spkit-add-noise"]], "Examples using spkit.add_noise": [[92, "examples-using-spkit-add-noise"]], "spkit.agg_angles": [[93, "spkit-agg-angles"]], "spkit.bin_width": [[94, "spkit-bin-width"]], "Examples using spkit.bin_width": [[94, "examples-using-spkit-bin-width"]], "spkit.blackman_lobe": [[95, "spkit-blackman-lobe"]], "spkit.cdf_mapping": [[96, "spkit-cdf-mapping"]], "spkit.clean_phase": [[97, "spkit-clean-phase"]], "spkit.conv1d_fb": [[98, "spkit-conv1d-fb"]], "spkit.conv1d_fft": [[99, "spkit-conv1d-fft"]], "spkit.conv1d_nan": [[100, "spkit-conv1d-nan"]], "Examples using spkit.conv1d_nan": [[100, "examples-using-spkit-conv1d-nan"]], "spkit.conv2d_nan": [[101, "spkit-conv2d-nan"]], "Examples using spkit.conv2d_nan": [[101, "examples-using-spkit-conv2d-nan"]], "spkit.create_multidim_space_signal": [[102, "spkit-create-multidim-space-signal"]], "spkit.create_signal_1d": [[103, "spkit-create-signal-1d"]], "Examples using spkit.create_signal_1d": [[103, "examples-using-spkit-create-signal-1d"]], "spkit.create_signal_2d": [[104, "spkit-create-signal-2d"]], "Examples using spkit.create_signal_2d": [[104, "examples-using-spkit-create-signal-2d"]], "spkit.cwt.GaborWave": [[105, "spkit-cwt-gaborwave"]], "spkit.cwt.GaussWave": [[106, "spkit-cwt-gausswave"]], "spkit.cwt.MorlateWave": [[107, "spkit-cwt-morlatewave"]], "spkit.cwt.PoissonWave": [[108, "spkit-cwt-poissonwave"]], "spkit.cwt.ScalogramCWT": [[109, "spkit-cwt-scalogramcwt"]], "Examples using spkit.cwt.ScalogramCWT": [[109, "examples-using-spkit-cwt-scalogramcwt"]], "spkit.cwt.ShannonWave": [[110, "spkit-cwt-shannonwave"]], "spkit.cwt.WavePSD": [[111, "spkit-cwt-wavepsd"]], "spkit.cwt.cMaxicanHatWave": [[112, "spkit-cwt-cmaxicanhatwave"]], "spkit.cwt.compare_cwt_example": [[113, "spkit-cwt-compare-cwt-example"]], "Examples using spkit.cwt.compare_cwt_example": [[113, "examples-using-spkit-cwt-compare-cwt-example"]], "spkit.data.create_dataset": [[114, "spkit-data-create-dataset"]], "Examples using spkit.data.create_dataset": [[114, "examples-using-spkit-data-create-dataset"]], "spkit.data.ecg_sample": [[115, "spkit-data-ecg-sample"]], "spkit.data.ecg_sample_12leads": [[116, "spkit-data-ecg-sample-12leads"]], "Examples using spkit.data.ecg_sample_12leads": [[116, "examples-using-spkit-data-ecg-sample-12leads"]], "spkit.data.eda_sample": [[117, "spkit-data-eda-sample"]], "spkit.data.eeg_sample_14ch": [[118, "spkit-data-eeg-sample-14ch"]], "Examples using spkit.data.eeg_sample_14ch": [[118, "examples-using-spkit-data-eeg-sample-14ch"]], "spkit.data.eeg_sample_1ch": [[119, "spkit-data-eeg-sample-1ch"]], "Examples using spkit.data.eeg_sample_1ch": [[119, "examples-using-spkit-data-eeg-sample-1ch"]], "spkit.data.eeg_sample_artifact": [[120, "spkit-data-eeg-sample-artifact"]], "spkit.data.egm_sample": [[121, "spkit-data-egm-sample"]], "spkit.data.gaussian": [[122, "spkit-data-gaussian"]], "spkit.data.gsr_sample": [[123, "spkit-data-gsr-sample"]], "spkit.data.linear": [[124, "spkit-data-linear"]], "spkit.data.linear_data": [[125, "spkit-data-linear-data"]], "spkit.data.mclass_gauss": [[126, "spkit-data-mclass-gauss"]], "spkit.data.moons": [[127, "spkit-data-moons"]], "spkit.data.optical_sample": [[128, "spkit-data-optical-sample"]], "spkit.data.ppg_sample": [[129, "spkit-data-ppg-sample"]], "spkit.data.primitive_polynomials": [[130, "spkit-data-primitive-polynomials"]], "spkit.data.sinusoidal": [[131, "spkit-data-sinusoidal"]], "spkit.data.spiral": [[132, "spkit-data-spiral"]], "spkit.denorm_kernel": [[133, "spkit-denorm-kernel"]], "spkit.dft_analysis": [[134, "spkit-dft-analysis"]], "Examples using spkit.dft_analysis": [[134, "examples-using-spkit-dft-analysis"]], "spkit.dft_synthesis": [[135, "spkit-dft-synthesis"]], "Examples using spkit.dft_synthesis": [[135, "examples-using-spkit-dft-synthesis"]], "spkit.direction_flow_map": [[136, "spkit-direction-flow-map"]], "Examples using spkit.direction_flow_map": [[136, "examples-using-spkit-direction-flow-map"]], "spkit.dispersion_entropy": [[137, "spkit-dispersion-entropy"]], "Examples using spkit.dispersion_entropy": [[137, "examples-using-spkit-dispersion-entropy"]], "spkit.dispersion_entropy_multiscale_refined": [[138, "spkit-dispersion-entropy-multiscale-refined"]], "spkit.dominent_freq": [[139, "spkit-dominent-freq"]], "spkit.dominent_freq_win": [[140, "spkit-dominent-freq-win"]], "spkit.eeg.ATAR": [[141, "spkit-eeg-atar"]], "Examples using spkit.eeg.ATAR": [[141, "examples-using-spkit-eeg-atar"]], "spkit.eeg.ATAR_1Ch": [[142, "spkit-eeg-atar-1ch"]], "spkit.eeg.ATAR_mCh": [[143, "spkit-eeg-atar-mch"]], "spkit.eeg.ICA_filtering": [[145, "spkit-eeg-ica-filtering"]], "Examples using spkit.eeg.ICA_filtering": [[145, "examples-using-spkit-eeg-ica-filtering"]], "spkit.eeg.RhythmicDecomposition": [[146, "spkit-eeg-rhythmicdecomposition"]], "spkit.eeg.TopoMap_Zi": [[148, "spkit-eeg-topomap-zi"]], "spkit.eeg.display_topo_RGB": [[149, "spkit-eeg-display-topo-rgb"]], "spkit.eeg.rhythmic_powers_win": [[151, "spkit-eeg-rhythmic-powers-win"]], "Examples using spkit.eeg.rhythmic_powers_win": [[151, "examples-using-spkit-eeg-rhythmic-powers-win"]], "spkit.eeg.s1005_get_epos2d": [[152, "spkit-eeg-s1005-get-epos2d"]], "Examples using spkit.eeg.s1005_get_epos2d": [[152, "examples-using-spkit-eeg-s1005-get-epos2d"]], "spkit.eeg.s1010_get_epos2d": [[153, "spkit-eeg-s1010-get-epos2d"]], "Examples using spkit.eeg.s1010_get_epos2d": [[153, "examples-using-spkit-eeg-s1010-get-epos2d"]], "spkit.eeg.s1020_get_epos2d": [[154, "spkit-eeg-s1020-get-epos2d"]], "Examples using spkit.eeg.s1020_get_epos2d": [[154, "examples-using-spkit-eeg-s1020-get-epos2d"]], "spkit.eeg.showTOPO": [[155, "spkit-eeg-showtopo"]], "spkit.elbow_knee_point": [[156, "spkit-elbow-knee-point"]], "spkit.entropy": [[157, "spkit-entropy"]], "Examples using spkit.entropy": [[157, "examples-using-spkit-entropy"]], "spkit.entropy_approx": [[158, "spkit-entropy-approx"]], "Examples using spkit.entropy_approx": [[158, "examples-using-spkit-entropy-approx"]], "spkit.entropy_cond": [[159, "spkit-entropy-cond"]], "Examples using spkit.entropy_cond": [[159, "examples-using-spkit-entropy-cond"]], "spkit.entropy_cross": [[160, "spkit-entropy-cross"]], "Examples using spkit.entropy_cross": [[160, "examples-using-spkit-entropy-cross"]], "spkit.entropy_diff_cond": [[161, "spkit-entropy-diff-cond"]], "spkit.entropy_diff_cond_self": [[162, "spkit-entropy-diff-cond-self"]], "spkit.entropy_diff_joint": [[163, "spkit-entropy-diff-joint"]], "spkit.entropy_diff_joint_cond": [[164, "spkit-entropy-diff-joint-cond"]], "spkit.entropy_differential": [[165, "spkit-entropy-differential"]], "spkit.entropy_granger_causality": [[166, "spkit-entropy-granger-causality"]], "spkit.entropy_joint": [[167, "spkit-entropy-joint"]], "Examples using spkit.entropy_joint": [[167, "examples-using-spkit-entropy-joint"]], "spkit.entropy_kld": [[168, "spkit-entropy-kld"]], "Examples using spkit.entropy_kld": [[168, "examples-using-spkit-entropy-kld"]], "spkit.entropy_permutation": [[169, "spkit-entropy-permutation"]], "spkit.entropy_sample": [[170, "spkit-entropy-sample"]], "Examples using spkit.entropy_sample": [[170, "examples-using-spkit-entropy-sample"]], "spkit.entropy_spectral": [[171, "spkit-entropy-spectral"]], "spkit.entropy_svd": [[172, "spkit-entropy-svd"]], "spkit.f0_detection": [[173, "spkit-f0-detection"]], "spkit.ffrft": [[174, "spkit-ffrft"]], "spkit.fill_nans_1d": [[175, "spkit-fill-nans-1d"]], "Examples using spkit.fill_nans_1d": [[175, "examples-using-spkit-fill-nans-1d"]], "spkit.fill_nans_2d": [[176, "spkit-fill-nans-2d"]], "Examples using spkit.fill_nans_2d": [[176, "examples-using-spkit-fill-nans-2d"]], "spkit.filterDC": [[177, "spkit-filterdc"]], "spkit.filterDC_sGolay": [[178, "spkit-filterdc-sgolay"]], "Examples using spkit.filterDC_sGolay": [[178, "examples-using-spkit-filterdc-sgolay"]], "spkit.filter_powerline": [[180, "spkit-filter-powerline"]], "spkit.filter_smooth_gauss": [[181, "spkit-filter-smooth-gauss"]], "spkit.filter_smooth_mollifier": [[182, "spkit-filter-smooth-mollifier"]], "spkit.filter_smooth_sGolay": [[183, "spkit-filter-smooth-sgolay"]], "spkit.filter_with_kernel": [[184, "spkit-filter-with-kernel"]], "spkit.filtering_pipeline": [[185, "spkit-filtering-pipeline"]], "spkit.frft": [[186, "spkit-frft"]], "Examples using spkit.frft": [[186, "examples-using-spkit-frft"]], "spkit.friedrichs_mollifier_kernel": [[187, "spkit-friedrichs-mollifier-kernel"]], "spkit.gaussian_kernel": [[188, "spkit-gaussian-kernel"]], "spkit.geometry.get_circle": [[202, "spkit-geometry-get-circle"]], "spkit.geometry.get_circular_grid": [[203, "spkit-geometry-get-circular-grid"]], "spkit.geometry.get_ellipsoid": [[204, "spkit-geometry-get-ellipsoid"]], "spkit.geometry.get_sphare": [[208, "spkit-geometry-get-sphare"]], "spkit.geometry.get_square": [[209, "spkit-geometry-get-square"]], "spkit.geometry.get_square_grid": [[210, "spkit-geometry-get-square-grid"]], "spkit.geometry.lin_inter": [[211, "spkit-geometry-lin-inter"]], "spkit.getQuickStats": [[219, "spkit-getquickstats"]], "spkit.getStats": [[220, "spkit-getstats"]], "spkit.get_activation_time": [[221, "spkit-get-activation-time"]], "spkit.get_repolarisation_time": [[222, "spkit-get-repolarisation-time"]], "spkit.graph_filter_adj": [[223, "spkit-graph-filter-adj"]], "spkit.graph_filter_dist": [[224, "spkit-graph-filter-dist"]], "spkit.hist_plot": [[225, "spkit-hist-plot"]], "Examples using spkit.hist_plot": [[225, "examples-using-spkit-hist-plot"]], "spkit.iffrft": [[226, "spkit-iffrft"]], "spkit.ifrft": [[227, "spkit-ifrft"]], "Examples using spkit.ifrft": [[227, "examples-using-spkit-ifrft"]], "spkit.io.read_hdf": [[229, "spkit-io-read-hdf"]], "Examples using spkit.io.read_hdf": [[229, "examples-using-spkit-io-read-hdf"]], "spkit.io.read_surf": [[230, "spkit-io-read-surf"]], "spkit.io.read_surf_file": [[231, "spkit-io-read-surf-file"]], "spkit.io.read_vtk": [[232, "spkit-io-read-vtk"]], "spkit.io.write_vtk": [[233, "spkit-io-write-vtk"]], "spkit.is_power2": [[234, "spkit-is-power2"]], "spkit.low_resolution": [[235, "spkit-low-resolution"]], "spkit.mea.activation_repol_time_loc": [[236, "spkit-mea-activation-repol-time-loc"]], "Examples using spkit.mea.activation_repol_time_loc": [[236, "examples-using-spkit-mea-activation-repol-time-loc"]], "spkit.mea.activation_time_loc": [[237, "spkit-mea-activation-time-loc"]], "Examples using spkit.mea.activation_time_loc": [[237, "examples-using-spkit-mea-activation-time-loc"]], "spkit.mea.align_cycles": [[238, "spkit-mea-align-cycles"]], "Examples using spkit.mea.align_cycles": [[238, "examples-using-spkit-mea-align-cycles"]], "spkit.mea.analyse_mea_file": [[239, "spkit-mea-analyse-mea-file"]], "Examples using spkit.mea.analyse_mea_file": [[239, "examples-using-spkit-mea-analyse-mea-file"]], "spkit.mea.arrange_mea_grid": [[240, "spkit-mea-arrange-mea-grid"]], "Examples using spkit.mea.arrange_mea_grid": [[240, "examples-using-spkit-mea-arrange-mea-grid"]], "spkit.mea.compute_cv": [[241, "spkit-mea-compute-cv"]], "Examples using spkit.mea.compute_cv": [[241, "examples-using-spkit-mea-compute-cv"]], "spkit.mea.egm_features": [[242, "spkit-mea-egm-features"]], "Examples using spkit.mea.egm_features": [[242, "examples-using-spkit-mea-egm-features"]], "spkit.mea.extract_egm": [[243, "spkit-mea-extract-egm"]], "Examples using spkit.mea.extract_egm": [[243, "examples-using-spkit-mea-extract-egm"]], "spkit.mea.find_bad_channels_idx": [[244, "spkit-mea-find-bad-channels-idx"]], "Examples using spkit.mea.find_bad_channels_idx": [[244, "examples-using-spkit-mea-find-bad-channels-idx"]], "spkit.mea.get_stim_loc": [[245, "spkit-mea-get-stim-loc"]], "Examples using spkit.mea.get_stim_loc": [[245, "examples-using-spkit-mea-get-stim-loc"]], "spkit.mea.mat_1_show": [[246, "spkit-mea-mat-1-show"]], "Examples using spkit.mea.mat_1_show": [[246, "examples-using-spkit-mea-mat-1-show"]], "spkit.mea.mat_list_show": [[247, "spkit-mea-mat-list-show"]], "Examples using spkit.mea.mat_list_show": [[247, "examples-using-spkit-mea-mat-list-show"]], "spkit.mea.mea_feature_map": [[248, "spkit-mea-mea-feature-map"]], "Examples using spkit.mea.mea_feature_map": [[248, "examples-using-spkit-mea-mea-feature-map"]], "spkit.mea.plot_mea_grid": [[249, "spkit-mea-plot-mea-grid"]], "Examples using spkit.mea.plot_mea_grid": [[249, "examples-using-spkit-mea-plot-mea-grid"]], "spkit.mea.unarrange_mea_grid": [[250, "spkit-mea-unarrange-mea-grid"]], "spkit.mean_minSE": [[251, "spkit-mean-minse"]], "spkit.minMSE": [[252, "spkit-minmse"]], "spkit.ml.ClassificationTree": [[253, "spkit-ml-classificationtree"]], "Examples using spkit.ml.ClassificationTree": [[253, "examples-using-spkit-ml-classificationtree"]], "spkit.ml.DecisionTree": [[254, "spkit-ml-decisiontree"]], "spkit.ml.LogisticRegression": [[255, "spkit-ml-logisticregression"]], "Examples using spkit.ml.LogisticRegression": [[255, "examples-using-spkit-ml-logisticregression"]], "spkit.ml.NaiveBayes": [[256, "spkit-ml-naivebayes"]], "Examples using spkit.ml.NaiveBayes": [[256, "examples-using-spkit-ml-naivebayes"]], "spkit.ml.RegressionTree": [[257, "spkit-ml-regressiontree"]], "Examples using spkit.ml.RegressionTree": [[257, "examples-using-spkit-ml-regressiontree"]], "spkit.mutual_info": [[258, "spkit-mutual-info"]], "Examples using spkit.mutual_info": [[258, "examples-using-spkit-mutual-info"]], "spkit.mutual_info_diff": [[259, "spkit-mutual-info-diff"]], "spkit.mutual_info_diff_self": [[260, "spkit-mutual-info-diff-self"]], "spkit.partial_transfer_entropy": [[261, "spkit-partial-transfer-entropy"]], "spkit.peak_detection": [[262, "spkit-peak-detection"]], "spkit.peak_interp": [[263, "spkit-peak-interp"]], "spkit.periodogram": [[264, "spkit-periodogram"]], "spkit.phase_map": [[265, "spkit-phase-map"]], "spkit.phase_map_reconstruction": [[266, "spkit-phase-map-reconstruction"]], "spkit.plotJointEntropyXY": [[267, "spkit-plotjointentropyxy"]], "spkit.quantize_FD": [[268, "spkit-quantize-fd"]], "spkit.quantize_signal": [[269, "spkit-quantize-signal"]], "spkit.ramanujan_filter": [[270, "spkit-ramanujan-filter"]], "Examples using spkit.ramanujan_filter": [[270, "examples-using-spkit-ramanujan-filter"]], "spkit.ramanujan_filter_prange": [[271, "spkit-ramanujan-filter-prange"]], "Examples using spkit.ramanujan_filter_prange": [[271, "examples-using-spkit-ramanujan-filter-prange"]], "spkit.regularised_period_estimation": [[272, "spkit-regularised-period-estimation"]], "Examples using spkit.regularised_period_estimation": [[272, "examples-using-spkit-regularised-period-estimation"]], "spkit.show_compass": [[273, "spkit-show-compass"]], "spkit.show_farmulas": [[274, "spkit-show-farmulas"]], "spkit.signal_delayed_space": [[275, "spkit-signal-delayed-space"]], "spkit.signal_diff": [[276, "spkit-signal-diff"]], "spkit.simplify_signal": [[277, "spkit-simplify-signal"]], "spkit.sinc_dirichlet": [[278, "spkit-sinc-dirichlet"]], "spkit.sinc_interp": [[279, "spkit-sinc-interp"]], "spkit.sineModel_analysis": [[280, "spkit-sinemodel-analysis"]], "Examples using spkit.sineModel_analysis": [[280, "examples-using-spkit-sinemodel-analysis"]], "spkit.sineModel_synthesis": [[281, "spkit-sinemodel-synthesis"]], "Examples using spkit.sineModel_synthesis": [[281, "examples-using-spkit-sinemodel-synthesis"]], "spkit.sine_spectrum": [[282, "spkit-sine-spectrum"]], "spkit.sine_tracking": [[283, "spkit-sine-tracking"]], "spkit.sinetracks_cleaning": [[284, "spkit-sinetracks-cleaning"]], "spkit.spatial_filter_adj": [[285, "spkit-spatial-filter-adj"]], "spkit.spatial_filter_dist": [[286, "spkit-spatial-filter-dist"]], "spkit.stats.get_stats": [[287, "spkit-stats-get-stats"]], "spkit.stats.outliers": [[288, "spkit-stats-outliers"]], "spkit.stats.plot_groups_boxes": [[289, "spkit-stats-plot-groups-boxes"]], "Examples using spkit.stats.plot_groups_boxes": [[289, "examples-using-spkit-stats-plot-groups-boxes"]], "spkit.stats.quick_stats": [[290, "spkit-stats-quick-stats"]], "spkit.stats.test_2groups": [[291, "spkit-stats-test-2groups"]], "Examples using spkit.stats.test_2groups": [[291, "examples-using-spkit-stats-test-2groups"]], "spkit.stats.test_groups": [[292, "spkit-stats-test-groups"]], "spkit.stft_analysis": [[293, "spkit-stft-analysis"]], "Examples using spkit.stft_analysis": [[293, "examples-using-spkit-stft-analysis"]], "spkit.stft_synthesis": [[294, "spkit-stft-synthesis"]], "Examples using spkit.stft_synthesis": [[294, "examples-using-spkit-stft-synthesis"]], "spkit.total_variation": [[295, "spkit-total-variation"]], "spkit.total_variation_win": [[296, "spkit-total-variation-win"]], "spkit.transfer_entropy": [[297, "spkit-transfer-entropy"]], "spkit.transfer_entropy_cond": [[298, "spkit-transfer-entropy-cond"]], "spkit.utils.ProgBar": [[299, "spkit-utils-progbar"]], "spkit.utils.ProgBar_JL": [[300, "spkit-utils-progbar-jl"]], "Examples using spkit.utils.ProgBar_JL": [[300, "examples-using-spkit-utils-progbar-jl"]], "spkit.utils.bcolors": [[301, "spkit-utils-bcolors"]], "spkit.utils.txcolors": [[303, "spkit-utils-txcolors"]], "spkit.utils.view_hierarchical_order": [[304, "spkit-utils-view-hierarchical-order"]], "spkit.wavelet_decomposed_signals": [[305, "spkit-wavelet-decomposed-signals"]], "Examples using spkit.wavelet_decomposed_signals": [[305, "examples-using-spkit-wavelet-decomposed-signals"]], "spkit.wavelet_filtering": [[306, "spkit-wavelet-filtering"]], "Examples using spkit.wavelet_filtering": [[306, "examples-using-spkit-wavelet-filtering"]], "spkit.wavelet_filtering_win": [[307, "spkit-wavelet-filtering-win"]], "spkit.wpa_coeff": [[308, "spkit-wpa-coeff"]], "spkit.wpa_coeff_win": [[309, "spkit-wpa-coeff-win"]], "IO Read/Write": [[311, "io-read-write"]], "Read HDF/EDF file": [[311, "read-hdf-edf-file"]], "Read BDF file": [[311, "read-bdf-file"]], "Read Surf file": [[311, "read-surf-file"]], "Read VTK file": [[311, "read-vtk-file"]], "Write VTK File": [[311, "write-vtk-file"]], "Applications": [[312, "applications"]], "Transfer Entropy  TE_{X \\rightarrow Y}": [[312, "transfer-entropy-te-x-rightarrow-y"]], "Partial Transfer Entropy  TE_{X \\rightarrow Y | Z}": [[312, "partial-transfer-entropy-te-x-rightarrow-y-z"]], "Granger Causality  GC_{X \\rightarrow Y}": [[312, "granger-causality-gc-x-rightarrow-y"]], "Connectivity Analysis  {X \\rightarrow Y}": [[312, "connectivity-analysis-x-rightarrow-y"]], "Naive Bayes": [[318, "naive-bayes"]], "Differentiation": [[322, "differentiation"]], "Signal Gradient": [[322, "signal-gradient"]], "Drift Removing": [[324, "drift-removing"]], "IIR Filters of Order 1": [[324, "iir-filters-of-order-1"]], "Spectral filter - IIR Filters": [[324, "spectral-filter-iir-filters"]], "Savitzky-Golay filter": [[324, "savitzky-golay-filter"], [328, "savitzky-golay-filter"]], "Graph Filtering": [[325, "graph-filtering"]], "Using Adjacency matrix": [[325, "using-adjacency-matrix"], [329, "using-adjacency-matrix"]], "Using Proximity (distance)": [[325, "using-proximity-distance"], [329, "using-proximity-distance"]], "Using Nearest Neighbours": [[325, "using-nearest-neighbours"], [329, "using-nearest-neighbours"]], "Kernel Filtering": [[326, "kernel-filtering"], [326, "id1"]], "Filtering Pipeline": [[327, "filtering-pipeline"], [327, "id2"]], "Powerline Interference removal": [[327, "powerline-interference-removal"]], "Spatial Filtering (3D)": [[329, "spatial-filtering-3d"]], "Spectral Filtering": [[330, "spectral-filtering"]], "Lowpass filtering": [[330, "lowpass-filtering"]], "Highpass filtering": [[330, "highpass-filtering"]], "Bandpass filtering": [[330, "bandpass-filtering"]], "Bandreject/bandstop filtering": [[330, "bandreject-bandstop-filtering"]], "Custom filtering": [[330, "custom-filtering"]], "Continues Wavelet Transform": [[333, "continues-wavelet-transform"], [320, "continues-wavelet-transform"]], "Simplifying a complex signal": [[335, "simplifying-a-complex-signal"]], "Simplifying using Sinasudol Models": [[335, "simplifying-using-sinasudol-models"]], "Simplifying using DFT": [[335, "simplifying-using-dft"]], "Sinusoidal Model": [[336, "sinusoidal-model"]], "Analysis": [[336, "analysis"], [321, "analysis"], [331, "analysis"], [337, "analysis"]], "Synthesis": [[336, "synthesis"], [321, "synthesis"], [331, "synthesis"], [337, "synthesis"]], "Examples:": [[336, null], [67, null], [67, null], [321, null], [323, null], [331, null], [337, null], [314, null], [314, null], [314, null], [314, null], [314, null], [65, null], [65, null], [65, null], [65, null], [65, null]], "Signal Analysis": [[338, "signal-analysis"]], "Testing Two Groups": [[342, "testing-two-groups"]], "Testing gropus": [[342, "testing-gropus"], [342, "id1"]], "What is signal?": [[348, "what-is-signal"]], "Time and Frequency": [[348, "time-and-frequency"]], "Fourier": [[348, "fourier"]], "Convolution": [[348, "convolution"]], "Filtering": [[348, "filtering"], [66, "filtering"], [65, "filtering"]], "Time-domain Analysis": [[348, "time-domain-analysis"]], "Frequency-domain Analysis": [[348, "frequency-domain-analysis"]], "Time-Frequency Analysis": [[348, "time-frequency-analysis"]], "User Guide": [[349, "user-guide"]], "Under Development - Install": [[349, "under-development-install"]], "Release History": [[350, "release-history"]], "Version 0.0.9.7": [[352, "version-0-0-9-7"], [354, "version-0-0-9-7"]], "Version 0.0.9.6": [[352, "version-0-0-9-6"], [353, "version-0-0-9-6"], [354, "version-0-0-9-6"]], "Version 0.0.9.5": [[352, "version-0-0-9-5"], [353, "version-0-0-9-5"], [354, "version-0-0-9-5"]], "Version 0.0.9.4": [[352, "version-0-0-9-4"], [353, "version-0-0-9-4"], [354, "version-0-0-9-4"]], "Version 0.0.9.3": [[352, "version-0-0-9-3"], [353, "version-0-0-9-3"], [354, "version-0-0-9-3"]], "Version 0.0.9.2": [[352, "version-0-0-9-2"], [353, "version-0-0-9-2"], [354, "version-0-0-9-2"]], "Version 0.0.9.1": [[352, "version-0-0-9-1"], [353, "version-0-0-9-1"], [354, "version-0-0-9-1"]], "Version 0.0.8": [[352, "version-0-0-8"], [353, "version-0-0-8"], [354, "version-0-0-8"]], "Version 0.0.7": [[352, "version-0-0-7"], [353, "version-0-0-7"], [354, "version-0-0-7"]], "Version 0.0.6": [[352, "version-0-0-6"], [353, "version-0-0-6"], [354, "version-0-0-6"]], "Version 0.0.5": [[352, "version-0-0-5"], [353, "version-0-0-5"], [354, "version-0-0-5"]], "Version 0.0.4": [[352, "version-0-0-4"], [353, "version-0-0-4"], [354, "version-0-0-4"]], "Version 0.0.2": [[352, "version-0-0-2"], [353, "version-0-0-2"], [354, "version-0-0-2"]], "Version 0.0.1": [[352, "version-0-0-1"], [353, "version-0-0-1"], [354, "version-0-0-1"]], "Experimental / Under Development": [[352, "experimental-under-development"], [354, "experimental-under-development"]], "spkit.core.infotheory": [[353, "spkit-core-infotheory"]], "spkit.geomatry": [[353, "spkit-geomatry"]], "ECG: Electrocardiography": [[64, "ecg-electrocardiography"]], "Filtering (cleaning)": [[64, "filtering-cleaning"]], "R Peak Detection": [[64, "r-peak-detection"]], "EGM: Electrogram": [[66, "egm-electrogram"]], "Activation Time": [[66, "activation-time"]], "Phase Analysis": [[66, "phase-analysis"]], "Multi-Channel EGMs": [[66, "multi-channel-egms"]], "Decision Trees": [[316, "decision-trees"]], "Classification Trees": [[316, "classification-trees"]], "Visualising Trees": [[316, "visualising-trees"]], "Shrinking/proning Trees": [[316, "shrinking-proning-trees"]], "Tree for catogories features": [[316, "tree-for-catogories-features"]], "Regression Trees": [[316, "regression-trees"]], "Logistic Regression": [[317, "logistic-regression"]], "Classification": [[317, "classification"]], "Gauss wavelet": [[320, "gauss-wavelet"], [51, "gauss-wavelet"]], "Plot wavelet functions": [[320, "plot-wavelet-functions"]], "With a range of scale parameters": [[320, "with-a-range-of-scale-parameters"]], "Signal Analysis - EEG": [[320, "signal-analysis-eeg"]], "Scalogram with default parameters": [[320, "scalogram-with-default-parameters"]], "With a range of frequency and Q": [[320, "with-a-range-of-frequency-and-q"]], "With a plot of analysis wavelets": [[320, "with-a-plot-of-analysis-wavelets"]], "Speech": [[320, "speech"]], "Audio": [[320, "audio"]], "Morlet wavelet": [[320, "morlet-wavelet"], [51, "morlet-wavelet"]], "Gabor wavelet": [[320, "gabor-wavelet"], [51, "gabor-wavelet"]], "Poisson wavelet": [[320, "poisson-wavelet"], [51, "poisson-wavelet"]], "#Type 1 (n)": [[320, "type-1-n"]], "#Type 2": [[320, "type-2"]], "#Type 3 (n)": [[320, "type-3-n"]], "Maxican wavelet": [[320, "maxican-wavelet"]], "Shannon wavelet": [[320, "shannon-wavelet"]], "Period Analysis": [[334, "period-analysis"]], "MEA: Multi-Electrode Array Processing": [[67, "mea-multi-electrode-array-processing"], [33, "mea-multi-electrode-array-processing"], [34, "mea-multi-electrode-array-processing"]], "Complete Analysis of a recording": [[67, "complete-analysis-of-a-recording"]], "Step-wise Analysis": [[67, "step-wise-analysis"]], "1. Read HDF File": [[67, "read-hdf-file"]], "2. Stim Localisation": [[67, "stim-localisation"]], "3. Alignment of Stim Cycles": [[67, "alignment-of-stim-cycles"]], "4. Averaging Cycles or Selecting one": [[67, "averaging-cycles-or-selecting-one"]], "5. Activation Time": [[67, "activation-time"]], "6. Repolarisation Time (optional)": [[67, "repolarisation-time-optional"]], "7. APD (if RT is computed)": [[67, "apd-if-rt-is-computed"]], "8. Extracting EGM": [[67, "extracting-egm"]], "9. EGM Feature Extraction": [[67, "egm-feature-extraction"]], "10. Identifying BAD Channels/electrodes": [[67, "identifying-bad-channels-electrodes"]], "11. Creating Feature Matrix": [[67, "creating-feature-matrix"]], "12. Interpolation": [[67, "interpolation"]], "13. Conduction Velocity": [[67, "conduction-velocity"]], "Plots and Figures": [[67, "plots-and-figures"]], "Extracting EGM": [[67, "id1"]], "EGM Processing & Feature Extractions": [[67, "egm-processing-feature-extractions"]], "Conduction and Activation Map": [[67, "conduction-and-activation-map"]], "Dispersion and Differential Entropy": [[313, "dispersion-and-differential-entropy"]], "Dispersion Entropy H_{de}(X)": [[313, "dispersion-entropy-h-de-x"]], "Background": [[313, "background"]], "An Example": [[313, "an-example"]], "Embedding dimension 4": [[313, "embedding-dimension-4"]], "Dispersion Entropy with sliding window": [[313, "dispersion-entropy-with-sliding-window"]], "Multi-scale Dispersion Entropy": [[313, "multi-scale-dispersion-entropy"]], "Dispersion Entropy multiscale": [[313, "dispersion-entropy-multiscale"]], "Dispersion Entropy & Shannon Entropy": [[313, "dispersion-entropy-shannon-entropy"]], "Dispersion Entropy & Sample Entropy": [[313, "dispersion-entropy-sample-entropy"]], "Differential Entropy Functions H_{\\partial}(\\cdot)": [[313, "differential-entropy-functions-h-partial-cdot"]], "Differential Entropy H_{\\partial}(X)": [[313, "differential-entropy-h-partial-x"]], "Self-Conditional Entropy H_{\\partial}(X_{i+1}|X_{i})": [[313, "self-conditional-entropy-h-partial-x-i-1-x-i"]], "Conditional Entropy H_{\\partial}(X_{i+1}|X_{i},Y_{i})": [[313, "conditional-entropy-h-partial-x-i-1-x-i-y-i"]], "Joint Entropy H_{\\partial}(X,Y)": [[313, "joint-entropy-h-partial-x-y"]], "Self-Mutual Information I_{\\partial}(X_{i+1}|X_{i})": [[313, "self-mutual-information-i-partial-x-i-1-x-i"]], "Mutual Information I_{\\partial}(X,Y)": [[313, "mutual-information-i-partial-x-y"]], "Discrete Fourier Transfer": [[321, "discrete-fourier-transfer"]], "Discreet Wavelet Transform": [[323, "discreet-wavelet-transform"]], "Wavelet Filtering & Shrinkage": [[323, "wavelet-filtering-shrinkage"]], "References:": [[323, null], [314, null], [314, null], [332, null]], "Wavelet Package Analysis": [[323, "wavelet-package-analysis"]], "Wavelet decomposed signals": [[323, "wavelet-decomposed-signals"]], "Temporal analysis": [[323, "temporal-analysis"]], "Smoothing": [[328, "smoothing"]], "Spectral Filters": [[328, "spectral-filters"]], "Gaussian Filter": [[328, "gaussian-filter"]], "Mollifier": [[328, "mollifier"]], "Wavelet Filtering": [[328, "wavelet-filtering"], [52, "wavelet-filtering"]], "References": [[328, null]], "Fractional Fourier Transform": [[331, "fractional-fourier-transform"]], "Short-Time Fourier Transform": [[337, "short-time-fourier-transform"]], "Signal Filtering": [[339, "signal-filtering"]], "Statistics/Utilities": [[341, "statistics-utilities"]], "Entropy": [[314, "entropy"]], "Entropy with discreet source": [[314, "entropy-with-discreet-source"]], "Change of base": [[314, "change-of-base"]], "R\u00e9nyi entropy of order \\alpha": [[314, "renyi-entropy-of-order-alpha"]], "Entropy for real-valued source": [[314, "entropy-for-real-valued-source"]], "Shannon Entropy H(X)": [[314, "shannon-entropy-h-x"]], "Mutual Information I(X;Y)": [[314, "mutual-information-i-x-y"]], "Joint-Entropy H(X;Y)": [[314, "joint-entropy-h-x-y"]], "Conditional Entropy H(X|Y)": [[314, "conditional-entropy-h-x-y"]], "Cross Entropy H_{xy}(X,Y)": [[314, "cross-entropy-h-xy-x-y"]], "Cross Entropy: KL-Divergence H_{kl}(X,Y)": [[314, "cross-entropy-kl-divergence-h-kl-x-y"]], "Approximate Entropy H_{ae}(X)": [[314, "approximate-entropy-h-ae-x"]], "Sample Entropy H_{se}(X)": [[314, "sample-entropy-h-se-x"]], "Spectral Entropy H_{f}(X)": [[314, "spectral-entropy-h-f-x"]], "SVD Entropy H_{\\Sigma}(X)": [[314, "svd-entropy-h-sigma-x"]], "Permutation Entropy H_{\\pi}(X)": [[314, "permutation-entropy-h-pi-x"]], "Sample Entropy &  Approximate Entropy": [[314, "sample-entropy-approximate-entropy"]], "Approximate and Sample Entropy": [[314, "id17"]], "Approximate and Sample Entropy : Time": [[314, "id18"]], "Spectral Entropy & Permutation Entropy": [[314, "spectral-entropy-permutation-entropy"]], "Signal Temporal Mapping": [[332, "signal-temporal-mapping"]], "Linear mapping": [[332, "linear-mapping"]], "Quantization": [[332, "quantization"]], "Low resolution": [[332, "low-resolution"]], "Non-linear mapping": [[332, "non-linear-mapping"]], "A-Law": [[332, "a-law"]], "\u03bc-Law": [[332, "law"]], "CDF Mapping": [[332, "cdf-mapping"]], "Dispersion Entropy with Embedding dim": [[12, "dispersion-entropy-with-embedding-dim"]], "Entropy  -  EEG Signal - Multi-Channel": [[15, "entropy-eeg-signal-multi-channel"]], "Release Highlights for spkit 0.0.9.6": [[33, "release-highlights-for-spkit-0-0-9-6"]], "Ramanujan Methods for period estimation": [[33, "ramanujan-methods-for-period-estimation"]], "Ramanujan Filter Banks -  Demos": [[38, "ramanujan-filter-banks-demos"]], "Example demo 1": [[38, "example-demo-1"]], "Example demo 2": [[38, "example-demo-2"]], "Example demo 2 with diff periods": [[38, "example-demo-2-with-diff-periods"]], "Analysis and Synthesis Models": [[41, "analysis-and-synthesis-models"]], "1 DFT Model": [[41, "dft-model"]], "2 STFT Model": [[41, "stft-model"]], "3 Fractional Fourier Transform: FRFT": [[41, "fractional-fourier-transform-frft"]], "4 Sinasodual Model: Audio": [[41, "sinasodual-model-audio"]], "Testing two groups": [[48, "testing-two-groups"]], "Example 1: Paired": [[48, "example-1-paired"]], "Example 2: Unpaired": [[48, "example-2-unpaired"]], "Scalogram CWT": [[51, "scalogram-cwt"]], "Comparison Example": [[51, "comparison-example"]], "Complex Maxican wavelet": [[51, "complex-maxican-wavelet"]], "Complex Shannon wavelet": [[51, "complex-shannon-wavelet"]], "Installing spkit": [[59, "installing-spkit"]], "Installing the latest release": [[59, "installing-the-latest-release"]], "Troubleshooting": [[59, "troubleshooting"]], "Optional": [[59, "optional"]], "spkit.geometry.Inter2DPlane": [[189, "spkit-geometry-inter2dplane"]], "spkit.geometry.TriAng": [[190, "spkit-geometry-triang"]], "spkit.geometry.area_tri": [[191, "spkit-geometry-area-tri"]], "spkit.geometry.car2spar": [[192, "spkit-geometry-car2spar"]], "spkit.geometry.dir_vectors": [[193, "spkit-geometry-dir-vectors"]], "spkit.geometry.divide_space": [[194, "spkit-geometry-divide-space"]], "spkit.geometry.getTriFaces": [[195, "spkit-geometry-gettrifaces"]], "spkit.geometry.getTriFaces_V2": [[196, "spkit-geometry-gettrifaces-v2"]], "spkit.geometry.get_PCA": [[197, "spkit-geometry-get-pca"]], "spkit.geometry.get_adjacency_matrix_depth": [[198, "spkit-geometry-get-adjacency-matrix-depth"]], "spkit.geometry.get_adjacency_matrix_dist": [[199, "spkit-geometry-get-adjacency-matrix-dist"]], "spkit.geometry.get_adjacency_matrix_kNN": [[200, "spkit-geometry-get-adjacency-matrix-knn"]], "spkit.geometry.get_center": [[201, "spkit-geometry-get-center"]], "spkit.geometry.get_neibours": [[205, "spkit-geometry-get-neibours"]], "spkit.geometry.get_optimal_projection": [[206, "spkit-geometry-get-optimal-projection"]], "spkit.geometry.get_plane": [[207, "spkit-geometry-get-plane"]], "spkit.geometry.node2C_to_adjacency_matrix": [[212, "spkit-geometry-node2c-to-adjacency-matrix"]], "spkit.geometry.opt_project": [[213, "spkit-geometry-opt-project"]], "spkit.geometry.plot_proj": [[214, "spkit-geometry-plot-proj"]], "spkit.geometry.rotation_matrix": [[215, "spkit-geometry-rotation-matrix"]], "spkit.geometry.spar2car": [[216, "spkit-geometry-spar2car"]], "spkit.geometry.surface_plot_mayavi": [[217, "spkit-geometry-surface-plot-mayavi"]], "spkit.geometry.surface_reconstruction": [[218, "spkit-geometry-surface-reconstruction"]], "Tutorials": [[347, "tutorials"]], "Data Science Programming": [[347, "data-science-programming"]], "Interactive Wigdets": [[347, "interactive-wigdets"]], "Blogs/Tutorial-sessions": [[347, "blogs-tutorial-sessions"]], "Wavelet filtering with optimal threshold ans db3": [[52, "wavelet-filtering-with-optimal-threshold-ans-db3"]], "With SD threshold": [[52, "with-sd-threshold"]], "With IQR": [[52, "with-iqr"]], "Limit the number of levels for decomposition to 2": [[52, "limit-the-number-of-levels-for-decomposition-to-2"]], "With db12": [[52, "with-db12"]], "With Symlet - sym4": [[52, "with-symlet-sym4"]], "With Coiflet - coif4": [[52, "with-coiflet-coif4"]], "Electroencephalography (EEG)": [[0, "electroencephalography-eeg"], [10, "electroencephalography-eeg"]], "EEG Data from EDF File": [[2, "eeg-data-from-edf-file"]], "Download sameple file": [[2, "download-sameple-file"]], "Read EDF File": [[2, "read-edf-file"]], "Extract EEG Data and process": [[2, "extract-eeg-data-and-process"]], "Plot - cover": [[2, "plot-cover"]], "Plot": [[2, "plot"]], "EEG Artifact removal using ICA": [[5, "eeg-artifact-removal-using-ica"]], "Artifact removal using ICA": [[5, "artifact-removal-using-ica"], [6, "artifact-removal-using-ica"]], "On smaller segment": [[5, "on-smaller-segment"]], "EEG Artifact: ATAR and ICA": [[6, "eeg-artifact-atar-and-ica"]], "ATAR - three modes": [[6, "atar-three-modes"]], "Plots of Corrections": [[6, "plots-of-corrections"]], "Plots of Residuals": [[6, "plots-of-residuals"]], "EEG Computing Rhythmic Features - PhyAAt - Semanticity": [[7, "eeg-computing-rhythmic-features-phyaat-semanticity"]], "PhyAAt Dataset": [[7, "phyaat-dataset"]], "Extract Rhythmic Features": [[7, "extract-rhythmic-features"]], "Plots to compare": [[7, "plots-to-compare"]], "EEG Topographic Map": [[8, "eeg-topographic-map"]], "Rhythmic Powers,": [[8, "rhythmic-powers"]], "Topomap of Total power": [[8, "topomap-of-total-power"]], "Topomap for specific time-windows": [[8, "topomap-for-specific-time-windows"]], "Dispersion Entropy with top patterns": [[13, "dispersion-entropy-with-top-patterns"]], "MEA: Minimal Setting: Example": [[29, "mea-minimal-setting-example"]], "Results": [[29, "results"]], "MEA: Step-wise Analysis: Example": [[30, "mea-step-wise-analysis-example"]], "Step 1: Read File": [[30, "step-1-read-file"]], "Step 2: Stim Localisation": [[30, "step-2-stim-localisation"]], "Step 3: Align Cycles": [[30, "step-3-align-cycles"]], "Step 4: Average Cycles or Select one": [[30, "step-4-average-cycles-or-select-one"]], "Step 5-6: Activation and Repolarisation Time": [[30, "step-5-6-activation-and-repolarisation-time"]], "Step 7: APD Computation": [[30, "step-7-apd-computation"]], "Step 8: Extract EGMs": [[30, "step-8-extract-egms"]], "Step 9: EGM Feature Extraction": [[30, "step-9-egm-feature-extraction"]], "Step 10: BAD Channels": [[30, "step-10-bad-channels"]], "Step 11: Feature Matrix": [[30, "step-11-feature-matrix"]], "Step 12: Interpolating Activation Map": [[30, "step-12-interpolating-activation-map"]], "Step 13: Computing Conduction Velocity and maps": [[30, "step-13-computing-conduction-velocity-and-maps"]], "Release Highlights for spkit 0.0.9.7": [[34, "release-highlights-for-spkit-0-0-9-7"]], "Topographic Map correction: 10-20 System": [[34, "topographic-map-correction-10-20-system"]], "Location of all the eletrodes": [[34, "location-of-all-the-eletrodes"]], "Topographic Map 10-10 System": [[34, "topographic-map-10-10-system"]], "Topographic Map 10-05 System": [[34, "topographic-map-10-05-system"]], "Convolution with missing values (NaNs)": [[34, "convolution-with-missing-values-nans"]], "Filling Missing values with inter/exterpolation": [[34, "filling-missing-values-with-inter-exterpolation"]], "Wavelet Decomped Signals": [[34, "wavelet-decomped-signals"]], "Example 2: Wavelet Packet Decomposition": [[34, "example-2-wavelet-packet-decomposition"]], "EEG: Electroencephalography": [[65, "eeg-electroencephalography"]], "Preprocessing": [[65, "preprocessing"]], "Power computation": [[65, "power-computation"]], "Rhythmic Features": [[65, "rhythmic-features"]], "Topographic Map": [[65, "topographic-map"]], "Read from EDF Files": [[65, "read-from-edf-files"]], "Removing Artifacts": [[65, "removing-artifacts"]], "ATAR Algorithm": [[65, "atar-algorithm"]], "ICA Algorithm": [[65, "ica-algorithm"]], "spkit.eeg.rhythmic_powers": [[150, "spkit-eeg-rhythmic-powers"]], "Examples using spkit.eeg.rhythmic_powers": [[150, "examples-using-spkit-eeg-rhythmic-powers"]], "spkit.filter_X": [[179, "spkit-filter-x"]], "Examples using spkit.filter_X": [[179, "examples-using-spkit-filter-x"]], "spkit.io.read_bdf": [[228, "spkit-io-read-bdf"]], "Examples using spkit.io.read_bdf": [[228, "examples-using-spkit-io-read-bdf"]], "spkit.utils.pretty_print": [[302, "spkit-utils-pretty-print"]], "Examples using spkit.utils.pretty_print": [[302, "examples-using-spkit-utils-pretty-print"]], "Biomedical Signal Processing": [[63, "biomedical-signal-processing"]], "Data2 Samples": [[70, "data2-samples"]], "spkit.create_dictionary": [[75, "spkit-create-dictionary"]], "spkit.wpa_plot": [[89, "spkit-wpa-plot"]], "spkit.eeg.gen_ssfi": [[144, "spkit-eeg-gen-ssfi"]], "spkit.eeg.topomap": [[147, "spkit-eeg-topomap"]], "Examples using spkit.eeg.topomap": [[147, "examples-using-spkit-eeg-topomap"]]}, "indexentries": {"module": [[68, "module-0"], [68, "module-1"], [68, "module-spkit"], [68, "module-spkit.data"], [68, "module-spkit.eeg"], [68, "module-spkit.io"], [68, "module-spkit.ml"]], "spkit": [[68, "module-0"], [68, "module-spkit"]], "spkit.data": [[68, "module-spkit.data"]], "spkit.eeg": [[68, "module-1"], [68, "module-spkit.eeg"]], "spkit.io": [[68, "module-spkit.io"]], "spkit.ml": [[68, "module-spkit.ml"]], "a_law() (in module spkit)": [[74, "spkit.A_law"]], "create_dictionary() (in module spkit)": [[75, "spkit.create_dictionary"]], "ica (class in spkit)": [[76, "spkit.ICA"]], "fit() (spkit.ica method)": [[76, "spkit.ICA.fit"]], "get_smatrix() (spkit.ica method)": [[76, "spkit.ICA.get_sMatrix"]], "get_tmatrix() (spkit.ica method)": [[76, "spkit.ICA.get_tMatrix"]], "transform() (spkit.ica method)": [[76, "spkit.ICA.transform"]], "whitening() (spkit.ica method)": [[76, "spkit.ICA.whitening"]], "mu_law() (in module spkit)": [[77, "spkit.Mu_law"]], "outliers() (in module spkit)": [[78, "spkit.OutLiers"]], "pca (class in spkit)": [[79, "spkit.PCA"]], "fit() (spkit.pca method)": [[79, "spkit.PCA.fit"]], "fit_transform() (spkit.pca method)": [[79, "spkit.PCA.fit_transform"]], "transform() (spkit.pca method)": [[79, "spkit.PCA.transform"]], "whitening() (spkit.pca method)": [[79, "spkit.PCA.whitening"]], "periodstrength() (in module spkit)": [[80, "spkit.PeriodStrength"]], "rfb() (in module spkit)": [[81, "spkit.RFB"]], "rfb_example_1() (in module spkit)": [[82, "spkit.RFB_example_1"]], "rfb_example_2() (in module spkit)": [[83, "spkit.RFB_example_2"]], "rfb_prange() (in module spkit)": [[84, "spkit.RFB_prange"]], "svd() (in module spkit)": [[85, "spkit.SVD"]], "td_embed() (in module spkit)": [[86, "spkit.TD_Embed"]], "twm_algo() (in module spkit)": [[87, "spkit.TWM_algo"]], "twm_f0() (in module spkit)": [[88, "spkit.TWM_f0"]], "wpa_plot() (in module spkit)": [[89, "spkit.wpa_plot"]], "wpa_temporal() (in module spkit)": [[90, "spkit.WPA_temporal"]], "wavelet_decompositions() (in module spkit)": [[91, "spkit.Wavelet_decompositions"]], "add_noise() (in module spkit)": [[92, "spkit.add_noise"]], "agg_angles() (in module spkit)": [[93, "spkit.agg_angles"]], "bin_width() (in module spkit)": [[94, "spkit.bin_width"]], "blackman_lobe() (in module spkit)": [[95, "spkit.blackman_lobe"]], "cdf_mapping() (in module spkit)": [[96, "spkit.cdf_mapping"]], "clean_phase() (in module spkit)": [[97, "spkit.clean_phase"]], "conv1d_fb() (in module spkit)": [[98, "spkit.conv1d_fb"]], "conv1d_fft() (in module spkit)": [[99, "spkit.conv1d_fft"]], "conv1d_nan() (in module spkit)": [[100, "spkit.conv1d_nan"]], "conv2d_nan() (in module spkit)": [[101, "spkit.conv2d_nan"]], "create_multidim_space_signal() (in module spkit)": [[102, "spkit.create_multidim_space_signal"]], "create_signal_1d() (in module spkit)": [[103, "spkit.create_signal_1d"]], "create_signal_2d() (in module spkit)": [[104, "spkit.create_signal_2d"]], "gaborwave() (in module spkit.cwt)": [[105, "spkit.cwt.GaborWave"]], "gausswave() (in module spkit.cwt)": [[106, "spkit.cwt.GaussWave"]], "morlatewave() (in module spkit.cwt)": [[107, "spkit.cwt.MorlateWave"]], "poissonwave() (in module spkit.cwt)": [[108, "spkit.cwt.PoissonWave"]], "scalogramcwt() (in module spkit.cwt)": [[109, "spkit.cwt.ScalogramCWT"]], "shannonwave() (in module spkit.cwt)": [[110, "spkit.cwt.ShannonWave"]], "wavepsd() (in module spkit.cwt)": [[111, "spkit.cwt.WavePSD"]], "cmaxicanhatwave() (in module spkit.cwt)": [[112, "spkit.cwt.cMaxicanHatWave"]], "compare_cwt_example() (in module spkit.cwt)": [[113, "spkit.cwt.compare_cwt_example"]], "create_dataset() (in module spkit.data)": [[114, "spkit.data.create_dataset"]], "ecg_sample() (in module spkit.data)": [[115, "spkit.data.ecg_sample"]], "ecg_sample_12leads() (in module spkit.data)": [[116, "spkit.data.ecg_sample_12leads"]], "eda_sample() (in module spkit.data)": [[117, "spkit.data.eda_sample"]], "eeg_sample_14ch() (in module spkit.data)": [[118, "spkit.data.eeg_sample_14ch"]], "eeg_sample_1ch() (in module spkit.data)": [[119, "spkit.data.eeg_sample_1ch"]], "eeg_sample_artifact() (in module spkit.data)": [[120, "spkit.data.eeg_sample_artifact"]], "egm_sample() (in module spkit.data)": [[121, "spkit.data.egm_sample"]], "gaussian() (in module spkit.data)": [[122, "spkit.data.gaussian"]], "gsr_sample() (in module spkit.data)": [[123, "spkit.data.gsr_sample"]], "linear() (in module spkit.data)": [[124, "spkit.data.linear"]], "linear_data() (in module spkit.data)": [[125, "spkit.data.linear_data"]], "mclass_gauss() (in module spkit.data)": [[126, "spkit.data.mclass_gauss"]], "moons() (in module spkit.data)": [[127, "spkit.data.moons"]], "optical_sample() (in module spkit.data)": [[128, "spkit.data.optical_sample"]], "ppg_sample() (in module spkit.data)": [[129, "spkit.data.ppg_sample"]], "primitive_polynomials() (in module spkit.data)": [[130, "spkit.data.primitive_polynomials"]], "sinusoidal() (in module spkit.data)": [[131, "spkit.data.sinusoidal"]], "spiral() (in module spkit.data)": [[132, "spkit.data.spiral"]], "denorm_kernel() (in module spkit)": [[133, "spkit.denorm_kernel"]], "dft_analysis() (in module spkit)": [[134, "spkit.dft_analysis"]], "dft_synthesis() (in module spkit)": [[135, "spkit.dft_synthesis"]], "direction_flow_map() (in module spkit)": [[136, "spkit.direction_flow_map"]], "dispersion_entropy() (in module spkit)": [[137, "spkit.dispersion_entropy"]], "dispersion_entropy_multiscale_refined() (in module spkit)": [[138, "spkit.dispersion_entropy_multiscale_refined"]], "dominent_freq() (in module spkit)": [[139, "spkit.dominent_freq"]], "dominent_freq_win() (in module spkit)": [[140, "spkit.dominent_freq_win"]], "atar() (in module spkit.eeg)": [[141, "spkit.eeg.ATAR"]], "atar_1ch() (in module spkit.eeg)": [[142, "spkit.eeg.ATAR_1Ch"]], "atar_mch() (in module spkit.eeg)": [[143, "spkit.eeg.ATAR_mCh"]], "gen_ssfi() (in module spkit.eeg)": [[144, "spkit.eeg.gen_ssfi"]], "ica_filtering() (in module spkit.eeg)": [[145, "spkit.eeg.ICA_filtering"]], "rhythmicdecomposition() (in module spkit.eeg)": [[146, "spkit.eeg.RhythmicDecomposition"]], "topomap() (in module spkit.eeg)": [[147, "spkit.eeg.topomap"]], "topomap_zi() (in module spkit.eeg)": [[148, "spkit.eeg.TopoMap_Zi"]], "display_topo_rgb() (in module spkit.eeg)": [[149, "spkit.eeg.display_topo_RGB"]], "rhythmic_powers() (in module spkit.eeg)": [[150, "spkit.eeg.rhythmic_powers"]], "rhythmic_powers_win() (in module spkit.eeg)": [[151, "spkit.eeg.rhythmic_powers_win"]], "s1005_get_epos2d() (in module spkit.eeg)": [[152, "spkit.eeg.s1005_get_epos2d"]], "s1010_get_epos2d() (in module spkit.eeg)": [[153, "spkit.eeg.s1010_get_epos2d"]], "s1020_get_epos2d() (in module spkit.eeg)": [[154, "spkit.eeg.s1020_get_epos2d"]], "showtopo() (in module spkit.eeg)": [[155, "spkit.eeg.showTOPO"]], "elbow_knee_point() (in module spkit)": [[156, "spkit.elbow_knee_point"]], "entropy() (in module spkit)": [[157, "spkit.entropy"]], "entropy_approx() (in module spkit)": [[158, "spkit.entropy_approx"]], "entropy_cond() (in module spkit)": [[159, "spkit.entropy_cond"]], "entropy_cross() (in module spkit)": [[160, "spkit.entropy_cross"]], "entropy_diff_cond() (in module spkit)": [[161, "spkit.entropy_diff_cond"]], "entropy_diff_cond_self() (in module spkit)": [[162, "spkit.entropy_diff_cond_self"]], "entropy_diff_joint() (in module spkit)": [[163, "spkit.entropy_diff_joint"]], "entropy_diff_joint_cond() (in module spkit)": [[164, "spkit.entropy_diff_joint_cond"]], "entropy_differential() (in module spkit)": [[165, "spkit.entropy_differential"]], "entropy_granger_causality() (in module spkit)": [[166, "spkit.entropy_granger_causality"]], "entropy_joint() (in module spkit)": [[167, "spkit.entropy_joint"]], "entropy_kld() (in module spkit)": [[168, "spkit.entropy_kld"]], "entropy_permutation() (in module spkit)": [[169, "spkit.entropy_permutation"]], "entropy_sample() (in module spkit)": [[170, "spkit.entropy_sample"]], "entropy_spectral() (in module spkit)": [[171, "spkit.entropy_spectral"]], "entropy_svd() (in module spkit)": [[172, "spkit.entropy_svd"]], "f0_detection() (in module spkit)": [[173, "spkit.f0_detection"]], "ffrft() (in module spkit)": [[174, "spkit.ffrft"]], "fill_nans_1d() (in module spkit)": [[175, "spkit.fill_nans_1d"]], "fill_nans_2d() (in module spkit)": [[176, "spkit.fill_nans_2d"]], "filterdc() (in module spkit)": [[177, "spkit.filterDC"]], "filterdc_sgolay() (in module spkit)": [[178, "spkit.filterDC_sGolay"]], "filter_x() (in module spkit)": [[179, "spkit.filter_X"]], "filter_powerline() (in module spkit)": [[180, "spkit.filter_powerline"]], "filter_smooth_gauss() (in module spkit)": [[181, "spkit.filter_smooth_gauss"]], "filter_smooth_mollifier() (in module spkit)": [[182, "spkit.filter_smooth_mollifier"]], "filter_smooth_sgolay() (in module spkit)": [[183, "spkit.filter_smooth_sGolay"]], "filter_with_kernel() (in module spkit)": [[184, "spkit.filter_with_kernel"]], "filtering_pipeline() (in module spkit)": [[185, "spkit.filtering_pipeline"]], "frft() (in module spkit)": [[186, "spkit.frft"]], "friedrichs_mollifier_kernel() (in module spkit)": [[187, "spkit.friedrichs_mollifier_kernel"]], "gaussian_kernel() (in module spkit)": [[188, "spkit.gaussian_kernel"]], "inter2dplane (class in spkit.geometry)": [[189, "spkit.geometry.Inter2DPlane"]], "triang (class in spkit.geometry)": [[190, "spkit.geometry.TriAng"]], "get_edges_deg() (spkit.geometry.triang method)": [[190, "spkit.geometry.TriAng.get_edges_deg"]], "area_tri() (in module spkit.geometry)": [[191, "spkit.geometry.area_tri"]], "car2spar() (in module spkit.geometry)": [[192, "spkit.geometry.car2spar"]], "dir_vectors() (in module spkit.geometry)": [[193, "spkit.geometry.dir_vectors"]], "divide_space() (in module spkit.geometry)": [[194, "spkit.geometry.divide_space"]], "gettrifaces() (in module spkit.geometry)": [[195, "spkit.geometry.getTriFaces"]], "gettrifaces_v2() (in module spkit.geometry)": [[196, "spkit.geometry.getTriFaces_V2"]], "get_pca() (in module spkit.geometry)": [[197, "spkit.geometry.get_PCA"]], "get_adjacency_matrix_depth() (in module spkit.geometry)": [[198, "spkit.geometry.get_adjacency_matrix_depth"]], "get_adjacency_matrix_dist() (in module spkit.geometry)": [[199, "spkit.geometry.get_adjacency_matrix_dist"]], "get_adjacency_matrix_knn() (in module spkit.geometry)": [[200, "spkit.geometry.get_adjacency_matrix_kNN"]], "get_center() (in module spkit.geometry)": [[201, "spkit.geometry.get_center"]], "get_circle() (in module spkit.geometry)": [[202, "spkit.geometry.get_circle"]], "get_circular_grid() (in module spkit.geometry)": [[203, "spkit.geometry.get_circular_grid"]], "get_ellipsoid() (in module spkit.geometry)": [[204, "spkit.geometry.get_ellipsoid"]], "get_neibours() (in module spkit.geometry)": [[205, "spkit.geometry.get_neibours"]], "get_optimal_projection() (in module spkit.geometry)": [[206, "spkit.geometry.get_optimal_projection"]], "get_plane() (in module spkit.geometry)": [[207, "spkit.geometry.get_plane"]], "get_sphare() (in module spkit.geometry)": [[208, "spkit.geometry.get_sphare"]], "get_square() (in module spkit.geometry)": [[209, "spkit.geometry.get_square"]], "get_square_grid() (in module spkit.geometry)": [[210, "spkit.geometry.get_square_grid"]], "lin_inter() (in module spkit.geometry)": [[211, "spkit.geometry.lin_inter"]], "node2c_to_adjacency_matrix() (in module spkit.geometry)": [[212, "spkit.geometry.node2C_to_adjacency_matrix"]], "opt_project() (in module spkit.geometry)": [[213, "spkit.geometry.opt_project"]], "plot_proj() (in module spkit.geometry)": [[214, "spkit.geometry.plot_proj"]], "rotation_matrix() (in module spkit.geometry)": [[215, "spkit.geometry.rotation_matrix"]], "spar2car() (in module spkit.geometry)": [[216, "spkit.geometry.spar2car"]], "surface_plot_mayavi() (in module spkit.geometry)": [[217, "spkit.geometry.surface_plot_mayavi"]], "surface_reconstruction() (in module spkit.geometry)": [[218, "spkit.geometry.surface_reconstruction"]], "getquickstats() (in module spkit)": [[219, "spkit.getQuickStats"]], "getstats() (in module spkit)": [[220, "spkit.getStats"]], "get_activation_time() (in module spkit)": [[221, "spkit.get_activation_time"]], "get_repolarisation_time() (in module spkit)": [[222, "spkit.get_repolarisation_time"]], "graph_filter_adj() (in module spkit)": [[223, "spkit.graph_filter_adj"]], "graph_filter_dist() (in module spkit)": [[224, "spkit.graph_filter_dist"]], "hist_plot() (in module spkit)": [[225, "spkit.hist_plot"]], "iffrft() (in module spkit)": [[226, "spkit.iffrft"]], "ifrft() (in module spkit)": [[227, "spkit.ifrft"]], "read_bdf() (in module spkit.io)": [[228, "spkit.io.read_bdf"]], "read_hdf() (in module spkit.io)": [[229, "spkit.io.read_hdf"]], "read_surf() (in module spkit.io)": [[230, "spkit.io.read_surf"]], "read_surf_file() (in module spkit.io)": [[231, "spkit.io.read_surf_file"]], "read_vtk() (in module spkit.io)": [[232, "spkit.io.read_vtk"]], "write_vtk() (in module spkit.io)": [[233, "spkit.io.write_vtk"]], "is_power2() (in module spkit)": [[234, "spkit.is_power2"]], "low_resolution() (in module spkit)": [[235, "spkit.low_resolution"]], "activation_repol_time_loc() (in module spkit.mea)": [[236, "spkit.mea.activation_repol_time_loc"]], "activation_time_loc() (in module spkit.mea)": [[237, "spkit.mea.activation_time_loc"]], "align_cycles() (in module spkit.mea)": [[238, "spkit.mea.align_cycles"]], "analyse_mea_file() (in module spkit.mea)": [[239, "spkit.mea.analyse_mea_file"]], "arrange_mea_grid() (in module spkit.mea)": [[240, "spkit.mea.arrange_mea_grid"]], "compute_cv() (in module spkit.mea)": [[241, "spkit.mea.compute_cv"]], "egm_features() (in module spkit.mea)": [[242, "spkit.mea.egm_features"]], "extract_egm() (in module spkit.mea)": [[243, "spkit.mea.extract_egm"]], "find_bad_channels_idx() (in module spkit.mea)": [[244, "spkit.mea.find_bad_channels_idx"]], "get_stim_loc() (in module spkit.mea)": [[245, "spkit.mea.get_stim_loc"]], "mat_1_show() (in module spkit.mea)": [[246, "spkit.mea.mat_1_show"]], "mat_list_show() (in module spkit.mea)": [[247, "spkit.mea.mat_list_show"]], "mea_feature_map() (in module spkit.mea)": [[248, "spkit.mea.mea_feature_map"]], "plot_mea_grid() (in module spkit.mea)": [[249, "spkit.mea.plot_mea_grid"]], "unarrange_mea_grid() (in module spkit.mea)": [[250, "spkit.mea.unarrange_mea_grid"]], "mean_minse() (in module spkit)": [[251, "spkit.mean_minSE"]], "minmse() (in module spkit)": [[252, "spkit.minMSE"]], "classificationtree (class in spkit.ml)": [[253, "spkit.ml.ClassificationTree"]], "dictdepth() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.DictDepth"]], "fit() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.fit"]], "getlcurve() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.getLcurve"]], "gettreedepth() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.getTreeDepth"]], "get_tree() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.get_tree"]], "plotlcurve() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.plotLcurve"]], "plottree() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.plotTree"]], "plottreepath() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.plotTreePath"]], "predict() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.predict"]], "predict_proba() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.predict_proba"]], "prunetree() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.pruneTree"]], "set_featurenames() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.set_featureNames"]], "set_xynode() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.set_xyNode"]], "showtree() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.showTree"]], "shrinktree() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.shrinkTree"]], "treedepth() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.treeDepth"]], "updatetree() (spkit.ml.classificationtree method)": [[253, "spkit.ml.ClassificationTree.updateTree"]], "decisiontree (class in spkit.ml)": [[254, "spkit.ml.DecisionTree"]], "dictdepth() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.DictDepth"]], "fit() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.fit"]], "getlcurve() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.getLcurve"]], "gettreedepth() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.getTreeDepth"]], "get_tree() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.get_tree"]], "plotlcurve() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.plotLcurve"]], "plottree() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.plotTree"]], "plottreepath() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.plotTreePath"]], "predict() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.predict"]], "predict_proba() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.predict_proba"]], "prunetree() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.pruneTree"]], "set_featurenames() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.set_featureNames"]], "set_xynode() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.set_xyNode"]], "showtree() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.showTree"]], "shrinktree() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.shrinkTree"]], "treedepth() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.treeDepth"]], "updatetree() (spkit.ml.decisiontree method)": [[254, "spkit.ml.DecisionTree.updateTree"]], "logisticregression (class in spkit.ml)": [[255, "spkit.ml.LogisticRegression"]], "loss() (spkit.ml.logisticregression method)": [[255, "spkit.ml.LogisticRegression.Loss"]], "normalize() (spkit.ml.logisticregression method)": [[255, "spkit.ml.LogisticRegression.Normalize"]], "polyfeature() (spkit.ml.logisticregression method)": [[255, "spkit.ml.LogisticRegression.PolyFeature"]], "fit() (spkit.ml.logisticregression method)": [[255, "spkit.ml.LogisticRegression.fit"]], "getweights() (spkit.ml.logisticregression method)": [[255, "spkit.ml.LogisticRegression.getWeights"]], "getweightsaslist() (spkit.ml.logisticregression method)": [[255, "spkit.ml.LogisticRegression.getWeightsAsList"]], "onehot() (spkit.ml.logisticregression method)": [[255, "spkit.ml.LogisticRegression.oneHot"]], "plot_lcurve() (spkit.ml.logisticregression method)": [[255, "spkit.ml.LogisticRegression.plot_Lcurve"]], "plot_boundries() (spkit.ml.logisticregression method)": [[255, "spkit.ml.LogisticRegression.plot_boundries"]], "plot_weights() (spkit.ml.logisticregression method)": [[255, "spkit.ml.LogisticRegression.plot_weights"]], "plot_weights2() (spkit.ml.logisticregression method)": [[255, "spkit.ml.LogisticRegression.plot_weights2"]], "predict() (spkit.ml.logisticregression method)": [[255, "spkit.ml.LogisticRegression.predict"]], "predict_proba() (spkit.ml.logisticregression method)": [[255, "spkit.ml.LogisticRegression.predict_proba"]], "regularization() (spkit.ml.logisticregression method)": [[255, "spkit.ml.LogisticRegression.regularization"]], "sigmoid() (spkit.ml.logisticregression method)": [[255, "spkit.ml.LogisticRegression.sigmoid"]], "softmax() (spkit.ml.logisticregression method)": [[255, "spkit.ml.LogisticRegression.softmax"]], "naivebayes (class in spkit.ml)": [[256, "spkit.ml.NaiveBayes"]], "vizpx() (spkit.ml.naivebayes method)": [[256, "spkit.ml.NaiveBayes.VizPx"]], "fit() (spkit.ml.naivebayes method)": [[256, "spkit.ml.NaiveBayes.fit"]], "predict() (spkit.ml.naivebayes method)": [[256, "spkit.ml.NaiveBayes.predict"]], "predict_prob() (spkit.ml.naivebayes method)": [[256, "spkit.ml.NaiveBayes.predict_prob"]], "set_class_labels() (spkit.ml.naivebayes method)": [[256, "spkit.ml.NaiveBayes.set_class_labels"]], "set_feature_names() (spkit.ml.naivebayes method)": [[256, "spkit.ml.NaiveBayes.set_feature_names"]], "dictdepth() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.DictDepth"]], "regressiontree (class in spkit.ml)": [[257, "spkit.ml.RegressionTree"]], "fit() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.fit"]], "getlcurve() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.getLcurve"]], "gettreedepth() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.getTreeDepth"]], "get_tree() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.get_tree"]], "plotlcurve() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.plotLcurve"]], "plottree() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.plotTree"]], "plottreepath() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.plotTreePath"]], "predict() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.predict"]], "predict_proba() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.predict_proba"]], "prunetree() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.pruneTree"]], "set_featurenames() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.set_featureNames"]], "set_xynode() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.set_xyNode"]], "showtree() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.showTree"]], "shrinktree() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.shrinkTree"]], "treedepth() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.treeDepth"]], "updatetree() (spkit.ml.regressiontree method)": [[257, "spkit.ml.RegressionTree.updateTree"]], "mutual_info() (in module spkit)": [[258, "spkit.mutual_info"]], "mutual_info_diff() (in module spkit)": [[259, "spkit.mutual_info_diff"]], "mutual_info_diff_self() (in module spkit)": [[260, "spkit.mutual_info_diff_self"]], "partial_transfer_entropy() (in module spkit)": [[261, "spkit.partial_transfer_entropy"]], "peak_detection() (in module spkit)": [[262, "spkit.peak_detection"]], "peak_interp() (in module spkit)": [[263, "spkit.peak_interp"]], "periodogram() (in module spkit)": [[264, "spkit.periodogram"]], "phase_map() (in module spkit)": [[265, "spkit.phase_map"]], "phase_map_reconstruction() (in module spkit)": [[266, "spkit.phase_map_reconstruction"]], "plotjointentropyxy() (in module spkit)": [[267, "spkit.plotJointEntropyXY"]], "quantize_fd() (in module spkit)": [[268, "spkit.quantize_FD"]], "quantize_signal() (in module spkit)": [[269, "spkit.quantize_signal"]], "ramanujan_filter() (in module spkit)": [[270, "spkit.ramanujan_filter"]], "ramanujan_filter_prange() (in module spkit)": [[271, "spkit.ramanujan_filter_prange"]], "regularised_period_estimation() (in module spkit)": [[272, "spkit.regularised_period_estimation"]], "show_compass() (in module spkit)": [[273, "spkit.show_compass"]], "show_farmulas() (in module spkit)": [[274, "spkit.show_farmulas"]], "signal_delayed_space() (in module spkit)": [[275, "spkit.signal_delayed_space"]], "signal_diff() (in module spkit)": [[276, "spkit.signal_diff"]], "simplify_signal() (in module spkit)": [[277, "spkit.simplify_signal"]], "sinc_dirichlet() (in module spkit)": [[278, "spkit.sinc_dirichlet"]], "sinc_interp() (in module spkit)": [[279, "spkit.sinc_interp"]], "sinemodel_analysis() (in module spkit)": [[280, "spkit.sineModel_analysis"]], "sinemodel_synthesis() (in module spkit)": [[281, "spkit.sineModel_synthesis"]], "sine_spectrum() (in module spkit)": [[282, "spkit.sine_spectrum"]], "sine_tracking() (in module spkit)": [[283, "spkit.sine_tracking"]], "sinetracks_cleaning() (in module spkit)": [[284, "spkit.sinetracks_cleaning"]], "spatial_filter_adj() (in module spkit)": [[285, "spkit.spatial_filter_adj"]], "spatial_filter_dist() (in module spkit)": [[286, "spkit.spatial_filter_dist"]], "get_stats() (in module spkit.stats)": [[287, "spkit.stats.get_stats"]], "outliers() (in module spkit.stats)": [[288, "spkit.stats.outliers"]], "plot_groups_boxes() (in module spkit.stats)": [[289, "spkit.stats.plot_groups_boxes"]], "quick_stats() (in module spkit.stats)": [[290, "spkit.stats.quick_stats"]], "test_2groups() (in module spkit.stats)": [[291, "spkit.stats.test_2groups"]], "test_groups() (in module spkit.stats)": [[292, "spkit.stats.test_groups"]], "stft_analysis() (in module spkit)": [[293, "spkit.stft_analysis"]], "stft_synthesis() (in module spkit)": [[294, "spkit.stft_synthesis"]], "total_variation() (in module spkit)": [[295, "spkit.total_variation"]], "total_variation_win() (in module spkit)": [[296, "spkit.total_variation_win"]], "transfer_entropy() (in module spkit)": [[297, "spkit.transfer_entropy"]], "transfer_entropy_cond() (in module spkit)": [[298, "spkit.transfer_entropy_cond"]], "progbar() (in module spkit.utils)": [[299, "spkit.utils.ProgBar"]], "progbar_jl() (in module spkit.utils)": [[300, "spkit.utils.ProgBar_JL"]], "bcolors (class in spkit.utils)": [[301, "spkit.utils.bcolors"]], "pretty_print() (in module spkit.utils)": [[302, "spkit.utils.pretty_print"]], "txcolors (class in spkit.utils)": [[303, "spkit.utils.txcolors"]], "view_hierarchical_order() (in module spkit.utils)": [[304, "spkit.utils.view_hierarchical_order"]], "wavelet_decomposed_signals() (in module spkit)": [[305, "spkit.wavelet_decomposed_signals"]], "wavelet_filtering() (in module spkit)": [[306, "spkit.wavelet_filtering"]], "wavelet_filtering_win() (in module spkit)": [[307, "spkit.wavelet_filtering_win"]], "wpa_coeff() (in module spkit)": [[308, "spkit.wpa_coeff"]], "wpa_coeff_win() (in module spkit)": [[309, "spkit.wpa_coeff_win"]]}})