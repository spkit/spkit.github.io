Search.setIndex({"docnames": ["auto_examples/electroencephalogram/index", "auto_examples/electroencephalogram/plot_sp_ATAR_algorithm_tuning", "auto_examples/electroencephalogram/plot_sp_ICA_eeg_example", "auto_examples/electroencephalogram/plot_sp_eeg_artifact_removal_ATAR_algorithm", "auto_examples/electroencephalogram/plot_sp_eeg_artifact_removal_ICA", "auto_examples/electroencephalogram/plot_sp_eeg_artifact_removal_ICA_ATAR", "auto_examples/electroencephalogram/plot_sp_eeg_rhythmic_features", "auto_examples/electroencephalogram/plot_sp_eeg_topomaps", "auto_examples/electroencephalogram/sg_execution_times", "auto_examples/index", "auto_examples/information_theory/index", "auto_examples/information_theory/plot_it_dispersion_entropy_eeg_emb2", "auto_examples/information_theory/plot_it_dispersion_entropy_top_patterns", "auto_examples/information_theory/plot_it_entropy_discreet_example", "auto_examples/information_theory/plot_it_entropy_eeg_multi_channel", "auto_examples/information_theory/plot_it_entropy_real_valued_example", "auto_examples/information_theory/plot_it_sample_approx_entropy_comp", "auto_examples/information_theory/sg_execution_times", "auto_examples/machine_learning/index", "auto_examples/machine_learning/plot_ml_decision_tree_catogorical_features", "auto_examples/machine_learning/plot_ml_decision_tree_classification", "auto_examples/machine_learning/plot_ml_decision_tree_shrinking_capability_cls", "auto_examples/machine_learning/plot_ml_decision_tree_shrinking_capability_reg", "auto_examples/machine_learning/plot_ml_decision_tree_visualisation", "auto_examples/machine_learning/plot_ml_logistic_regression_examples", "auto_examples/machine_learning/plot_ml_naive_bayes_examples", "auto_examples/machine_learning/sg_execution_times", "auto_examples/multielectrode-array/index", "auto_examples/multielectrode-array/plot_mea_minimal_setting_example", "auto_examples/multielectrode-array/plot_mea_stepwise_example", "auto_examples/multielectrode-array/sg_execution_times", "auto_examples/release_highlights/index", "auto_examples/release_highlights/plot_release_highlights_0_0_9_6", "auto_examples/release_highlights/plot_release_highlights_0_0_9_7", "auto_examples/release_highlights/sg_execution_times", "auto_examples/sg_execution_times", "auto_examples/signal_processing/index", "auto_examples/signal_processing/plot_sp_RFB_for_period_estimation_demo_examples", "auto_examples/signal_processing/plot_sp_RFB_for_period_estimation_from_signal", "auto_examples/signal_processing/plot_sp_RFB_for_period_estimation_with_sparse_penalty", "auto_examples/signal_processing/plot_sp_analysis_sythesis_models", "auto_examples/signal_processing/plot_sp_fractional_fourier_transform", "auto_examples/signal_processing/plot_sp_sinusodal_model_analysis_synthesis", "auto_examples/signal_processing/plot_sp_sinusodal_model_example_sound", "auto_examples/signal_processing/sg_execution_times", "auto_examples/statistics/index", "auto_examples/statistics/plot_stats_group_boxplotes", "auto_examples/statistics/plot_stats_testing_2groups_demo", "auto_examples/statistics/sg_execution_times", "auto_examples/wavelet_analysis/index", "auto_examples/wavelet_analysis/plot_sp_scalogram_cwt_example", "auto_examples/wavelet_analysis/plot_sp_wavelet_filtering_example", "auto_examples/wavelet_analysis/sg_execution_times", "dev/contributing", "dev/index", "dev/versions", "empty_test", "getting_started", "install", "main_root", "min_dependency_substitutions", "min_dependency_table", "modules/biomedical_signals", "modules/bsp_ecg", "modules/bsp_eeg", "modules/bsp_egm", "modules/bsp_mea", "modules/classes", "modules/data", "modules/data2", "modules/data_samples", "modules/data_simulation", "modules/egm copy", "modules/generated/spkit.A_law", "modules/generated/spkit.Create_Dictionary", "modules/generated/spkit.ICA", "modules/generated/spkit.Mu_law", "modules/generated/spkit.OutLiers", "modules/generated/spkit.PCA", "modules/generated/spkit.PeriodStrength", "modules/generated/spkit.RFB", "modules/generated/spkit.RFB_example_1", "modules/generated/spkit.RFB_example_2", "modules/generated/spkit.RFB_prange", "modules/generated/spkit.SVD", "modules/generated/spkit.TD_Embed", "modules/generated/spkit.TWM_algo", "modules/generated/spkit.TWM_f0", "modules/generated/spkit.WPA_plot", "modules/generated/spkit.WPA_temporal", "modules/generated/spkit.Wavelet_decompositions", "modules/generated/spkit.add_noise", "modules/generated/spkit.agg_angles", "modules/generated/spkit.bin_width", "modules/generated/spkit.blackman_lobe", "modules/generated/spkit.cdf_mapping", "modules/generated/spkit.clean_phase", "modules/generated/spkit.conv1d_fb", "modules/generated/spkit.conv1d_fft", "modules/generated/spkit.conv1d_nan", "modules/generated/spkit.conv2d_nan", "modules/generated/spkit.create_multidim_space_signal", "modules/generated/spkit.create_signal_1d", "modules/generated/spkit.create_signal_2d", "modules/generated/spkit.cwt.GaborWave", "modules/generated/spkit.cwt.GaussWave", "modules/generated/spkit.cwt.MorlateWave", "modules/generated/spkit.cwt.PoissonWave", "modules/generated/spkit.cwt.ScalogramCWT", "modules/generated/spkit.cwt.ShannonWave", "modules/generated/spkit.cwt.WavePSD", "modules/generated/spkit.cwt.cMaxicanHatWave", "modules/generated/spkit.cwt.compare_cwt_example", "modules/generated/spkit.data.create_dataset", "modules/generated/spkit.data.ecg_sample", "modules/generated/spkit.data.ecg_sample_12leads", "modules/generated/spkit.data.eda_sample", "modules/generated/spkit.data.eeg_sample_14ch", "modules/generated/spkit.data.eeg_sample_1ch", "modules/generated/spkit.data.eeg_sample_artifact", "modules/generated/spkit.data.egm_sample", "modules/generated/spkit.data.gaussian", "modules/generated/spkit.data.gsr_sample", "modules/generated/spkit.data.linear", "modules/generated/spkit.data.linear_data", "modules/generated/spkit.data.mclass_gauss", "modules/generated/spkit.data.moons", "modules/generated/spkit.data.optical_sample", "modules/generated/spkit.data.ppg_sample", "modules/generated/spkit.data.primitive_polynomials", "modules/generated/spkit.data.sinusoidal", "modules/generated/spkit.data.spiral", "modules/generated/spkit.denorm_kernel", "modules/generated/spkit.dft_analysis", "modules/generated/spkit.dft_synthesis", "modules/generated/spkit.direction_flow_map", "modules/generated/spkit.dispersion_entropy", "modules/generated/spkit.dispersion_entropy_multiscale_refined", "modules/generated/spkit.dominent_freq", "modules/generated/spkit.dominent_freq_win", "modules/generated/spkit.eeg.ATAR", "modules/generated/spkit.eeg.ATAR_1Ch", "modules/generated/spkit.eeg.ATAR_mCh", "modules/generated/spkit.eeg.Gen_SSFI", "modules/generated/spkit.eeg.ICA_filtering", "modules/generated/spkit.eeg.RhythmicDecomposition", "modules/generated/spkit.eeg.TopoMap", "modules/generated/spkit.eeg.TopoMap_Zi", "modules/generated/spkit.eeg.display_topo_RGB", "modules/generated/spkit.eeg.rhythmic_powers", "modules/generated/spkit.eeg.rhythmic_powers_win", "modules/generated/spkit.eeg.s1005_get_epos2d", "modules/generated/spkit.eeg.s1010_get_epos2d", "modules/generated/spkit.eeg.s1020_get_epos2d", "modules/generated/spkit.eeg.showTOPO", "modules/generated/spkit.elbow_knee_point", "modules/generated/spkit.entropy", "modules/generated/spkit.entropy_approx", "modules/generated/spkit.entropy_cond", "modules/generated/spkit.entropy_cross", "modules/generated/spkit.entropy_diff_cond", "modules/generated/spkit.entropy_diff_cond_self", "modules/generated/spkit.entropy_diff_joint", "modules/generated/spkit.entropy_diff_joint_cond", "modules/generated/spkit.entropy_differential", "modules/generated/spkit.entropy_granger_causality", "modules/generated/spkit.entropy_joint", "modules/generated/spkit.entropy_kld", "modules/generated/spkit.entropy_permutation", "modules/generated/spkit.entropy_sample", "modules/generated/spkit.entropy_spectral", "modules/generated/spkit.entropy_svd", "modules/generated/spkit.f0_detection", "modules/generated/spkit.ffrft", "modules/generated/spkit.fill_nans_1d", "modules/generated/spkit.fill_nans_2d", "modules/generated/spkit.filterDC", "modules/generated/spkit.filterDC_sGolay", "modules/generated/spkit.filter_X", "modules/generated/spkit.filter_powerline", "modules/generated/spkit.filter_smooth_gauss", "modules/generated/spkit.filter_smooth_mollifier", "modules/generated/spkit.filter_smooth_sGolay", "modules/generated/spkit.filter_with_kernel", "modules/generated/spkit.filtering_pipeline", "modules/generated/spkit.frft", "modules/generated/spkit.friedrichs_mollifier_kernel", "modules/generated/spkit.gaussian_kernel", "modules/generated/spkit.geometry.Inter2DPlane", "modules/generated/spkit.geometry.TriAng", "modules/generated/spkit.geometry.area_tri", "modules/generated/spkit.geometry.car2spar", "modules/generated/spkit.geometry.dir_vectors", "modules/generated/spkit.geometry.divide_space", "modules/generated/spkit.geometry.getTriFaces", "modules/generated/spkit.geometry.getTriFaces_V2", "modules/generated/spkit.geometry.get_PCA", "modules/generated/spkit.geometry.get_adjacency_matrix_depth", "modules/generated/spkit.geometry.get_adjacency_matrix_dist", "modules/generated/spkit.geometry.get_adjacency_matrix_kNN", "modules/generated/spkit.geometry.get_center", "modules/generated/spkit.geometry.get_circle", "modules/generated/spkit.geometry.get_circular_grid", "modules/generated/spkit.geometry.get_ellipsoid", "modules/generated/spkit.geometry.get_neibours", "modules/generated/spkit.geometry.get_optimal_projection", "modules/generated/spkit.geometry.get_plane", "modules/generated/spkit.geometry.get_sphare", "modules/generated/spkit.geometry.get_square", "modules/generated/spkit.geometry.get_square_grid", "modules/generated/spkit.geometry.lin_inter", "modules/generated/spkit.geometry.node2C_to_adjacency_matrix", "modules/generated/spkit.geometry.opt_project", "modules/generated/spkit.geometry.plot_proj", "modules/generated/spkit.geometry.rotation_matrix", "modules/generated/spkit.geometry.spar2car", "modules/generated/spkit.geometry.surface_plot_mayavi", "modules/generated/spkit.geometry.surface_reconstruction", "modules/generated/spkit.getQuickStats", "modules/generated/spkit.getStats", "modules/generated/spkit.get_activation_time", "modules/generated/spkit.get_repolarisation_time", "modules/generated/spkit.graph_filter_adj", "modules/generated/spkit.graph_filter_dist", "modules/generated/spkit.hist_plot", "modules/generated/spkit.iffrft", "modules/generated/spkit.ifrft", "modules/generated/spkit.io.read_bdf", "modules/generated/spkit.io.read_hdf", "modules/generated/spkit.io.read_surf", "modules/generated/spkit.io.read_surf_file", "modules/generated/spkit.io.read_vtk", "modules/generated/spkit.io.write_vtk", "modules/generated/spkit.is_power2", "modules/generated/spkit.low_resolution", "modules/generated/spkit.mea.activation_repol_time_loc", "modules/generated/spkit.mea.activation_time_loc", "modules/generated/spkit.mea.align_cycles", "modules/generated/spkit.mea.analyse_mea_file", "modules/generated/spkit.mea.arrange_mea_grid", "modules/generated/spkit.mea.compute_cv", "modules/generated/spkit.mea.egm_features", "modules/generated/spkit.mea.extract_egm", "modules/generated/spkit.mea.find_bad_channels_idx", "modules/generated/spkit.mea.get_stim_loc", "modules/generated/spkit.mea.mat_1_show", "modules/generated/spkit.mea.mat_list_show", "modules/generated/spkit.mea.mea_feature_map", "modules/generated/spkit.mea.plot_mea_grid", "modules/generated/spkit.mea.unarrange_mea_grid", "modules/generated/spkit.mean_minSE", "modules/generated/spkit.minMSE", "modules/generated/spkit.ml.ClassificationTree", "modules/generated/spkit.ml.DecisionTree", "modules/generated/spkit.ml.LogisticRegression", "modules/generated/spkit.ml.NaiveBayes", "modules/generated/spkit.ml.RegressionTree", "modules/generated/spkit.mutual_info", "modules/generated/spkit.mutual_info_diff", "modules/generated/spkit.mutual_info_diff_self", "modules/generated/spkit.partial_transfer_entropy", "modules/generated/spkit.peak_detection", "modules/generated/spkit.peak_interp", "modules/generated/spkit.periodogram", "modules/generated/spkit.phase_map", "modules/generated/spkit.phase_map_reconstruction", "modules/generated/spkit.plotJointEntropyXY", "modules/generated/spkit.quantize_FD", "modules/generated/spkit.quantize_signal", "modules/generated/spkit.ramanujan_filter", "modules/generated/spkit.ramanujan_filter_prange", "modules/generated/spkit.regularised_period_estimation", "modules/generated/spkit.show_compass", "modules/generated/spkit.show_farmulas", "modules/generated/spkit.signal_delayed_space", "modules/generated/spkit.signal_diff", "modules/generated/spkit.simplify_signal", "modules/generated/spkit.sinc_dirichlet", "modules/generated/spkit.sinc_interp", "modules/generated/spkit.sineModel_analysis", "modules/generated/spkit.sineModel_synthesis", "modules/generated/spkit.sine_spectrum", "modules/generated/spkit.sine_tracking", "modules/generated/spkit.sinetracks_cleaning", "modules/generated/spkit.spatial_filter_adj", "modules/generated/spkit.spatial_filter_dist", "modules/generated/spkit.stats.get_stats", "modules/generated/spkit.stats.outliers", "modules/generated/spkit.stats.plot_groups_boxes", "modules/generated/spkit.stats.quick_stats", "modules/generated/spkit.stats.test_2groups", "modules/generated/spkit.stats.test_groups", "modules/generated/spkit.stft_analysis", "modules/generated/spkit.stft_synthesis", "modules/generated/spkit.total_variation", "modules/generated/spkit.total_variation_win", "modules/generated/spkit.transfer_entropy", "modules/generated/spkit.transfer_entropy_cond", "modules/generated/spkit.utils.ProgBar", "modules/generated/spkit.utils.ProgBar_JL", "modules/generated/spkit.utils.bcolors", "modules/generated/spkit.utils.pretty_print", "modules/generated/spkit.utils.txcolors", "modules/generated/spkit.utils.view_hierarchical_order", "modules/generated/spkit.wavelet_decomposed_signals", "modules/generated/spkit.wavelet_filtering", "modules/generated/spkit.wavelet_filtering_win", "modules/generated/spkit.wpa_coeff", "modules/generated/spkit.wpa_coeff_win", "modules/information_theory", "modules/ioutils", "modules/it_apps", "modules/it_disperssion_differential", "modules/it_entropy", "modules/machine_learning", "modules/ml_decision_trees", "modules/ml_logistic_regression", "modules/ml_naive_bayes", "modules/signal_processing", "modules/sp_cwt", "modules/sp_dft", "modules/sp_differentiation", "modules/sp_dwt", "modules/sp_filtering_drift", "modules/sp_filtering_graph", "modules/sp_filtering_kernel", "modules/sp_filtering_pipe", "modules/sp_filtering_smooth", "modules/sp_filtering_spatial", "modules/sp_filtering_spectral", "modules/sp_frft", "modules/sp_mapping", "modules/sp_more", "modules/sp_ramanujan", "modules/sp_simplify", "modules/sp_sinusoidal", "modules/sp_stft", "modules/spsignal_analysis", "modules/spsignal_filtering", "modules/spwavelet_analysis", "modules/statisticsutils", "modules/statsfun", "modules/utils", "related_projects", "sg_execution_times", "tune_toc", "tutorials/index", "tutorials/signal_processing/index", "user_guide", "whats_new", "whats_new/_contributors", "whats_new/index", "whats_new/v0.0.9.6", "whats_new/v0.0.9.7"], "filenames": ["auto_examples/electroencephalogram/index.rst", "auto_examples/electroencephalogram/plot_sp_ATAR_algorithm_tuning.rst", "auto_examples/electroencephalogram/plot_sp_ICA_eeg_example.rst", "auto_examples/electroencephalogram/plot_sp_eeg_artifact_removal_ATAR_algorithm.rst", "auto_examples/electroencephalogram/plot_sp_eeg_artifact_removal_ICA.rst", "auto_examples/electroencephalogram/plot_sp_eeg_artifact_removal_ICA_ATAR.rst", "auto_examples/electroencephalogram/plot_sp_eeg_rhythmic_features.rst", "auto_examples/electroencephalogram/plot_sp_eeg_topomaps.rst", "auto_examples/electroencephalogram/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/information_theory/index.rst", "auto_examples/information_theory/plot_it_dispersion_entropy_eeg_emb2.rst", "auto_examples/information_theory/plot_it_dispersion_entropy_top_patterns.rst", "auto_examples/information_theory/plot_it_entropy_discreet_example.rst", "auto_examples/information_theory/plot_it_entropy_eeg_multi_channel.rst", "auto_examples/information_theory/plot_it_entropy_real_valued_example.rst", "auto_examples/information_theory/plot_it_sample_approx_entropy_comp.rst", "auto_examples/information_theory/sg_execution_times.rst", "auto_examples/machine_learning/index.rst", "auto_examples/machine_learning/plot_ml_decision_tree_catogorical_features.rst", "auto_examples/machine_learning/plot_ml_decision_tree_classification.rst", "auto_examples/machine_learning/plot_ml_decision_tree_shrinking_capability_cls.rst", "auto_examples/machine_learning/plot_ml_decision_tree_shrinking_capability_reg.rst", "auto_examples/machine_learning/plot_ml_decision_tree_visualisation.rst", "auto_examples/machine_learning/plot_ml_logistic_regression_examples.rst", "auto_examples/machine_learning/plot_ml_naive_bayes_examples.rst", "auto_examples/machine_learning/sg_execution_times.rst", "auto_examples/multielectrode-array/index.rst", "auto_examples/multielectrode-array/plot_mea_minimal_setting_example.rst", "auto_examples/multielectrode-array/plot_mea_stepwise_example.rst", "auto_examples/multielectrode-array/sg_execution_times.rst", "auto_examples/release_highlights/index.rst", "auto_examples/release_highlights/plot_release_highlights_0_0_9_6.rst", "auto_examples/release_highlights/plot_release_highlights_0_0_9_7.rst", "auto_examples/release_highlights/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "auto_examples/signal_processing/index.rst", "auto_examples/signal_processing/plot_sp_RFB_for_period_estimation_demo_examples.rst", "auto_examples/signal_processing/plot_sp_RFB_for_period_estimation_from_signal.rst", "auto_examples/signal_processing/plot_sp_RFB_for_period_estimation_with_sparse_penalty.rst", "auto_examples/signal_processing/plot_sp_analysis_sythesis_models.rst", "auto_examples/signal_processing/plot_sp_fractional_fourier_transform.rst", "auto_examples/signal_processing/plot_sp_sinusodal_model_analysis_synthesis.rst", "auto_examples/signal_processing/plot_sp_sinusodal_model_example_sound.rst", "auto_examples/signal_processing/sg_execution_times.rst", "auto_examples/statistics/index.rst", "auto_examples/statistics/plot_stats_group_boxplotes.rst", "auto_examples/statistics/plot_stats_testing_2groups_demo.rst", "auto_examples/statistics/sg_execution_times.rst", "auto_examples/wavelet_analysis/index.rst", "auto_examples/wavelet_analysis/plot_sp_scalogram_cwt_example.rst", "auto_examples/wavelet_analysis/plot_sp_wavelet_filtering_example.rst", "auto_examples/wavelet_analysis/sg_execution_times.rst", "dev/contributing.rst", "dev/index.rst", "dev/versions.rst", "empty_test.rst", "getting_started.rst", "install.rst", "main_root.rst", "min_dependency_substitutions.rst", "min_dependency_table.rst", "modules/biomedical_signals.rst", "modules/bsp_ecg.rst", "modules/bsp_eeg.rst", "modules/bsp_egm.rst", "modules/bsp_mea.rst", "modules/classes.rst", "modules/data.rst", "modules/data2.rst", "modules/data_samples.rst", "modules/data_simulation.rst", "modules/egm copy.rst", "modules/generated/spkit.A_law.rst", "modules/generated/spkit.Create_Dictionary.rst", "modules/generated/spkit.ICA.rst", "modules/generated/spkit.Mu_law.rst", "modules/generated/spkit.OutLiers.rst", "modules/generated/spkit.PCA.rst", "modules/generated/spkit.PeriodStrength.rst", "modules/generated/spkit.RFB.rst", "modules/generated/spkit.RFB_example_1.rst", "modules/generated/spkit.RFB_example_2.rst", "modules/generated/spkit.RFB_prange.rst", "modules/generated/spkit.SVD.rst", "modules/generated/spkit.TD_Embed.rst", "modules/generated/spkit.TWM_algo.rst", "modules/generated/spkit.TWM_f0.rst", "modules/generated/spkit.WPA_plot.rst", "modules/generated/spkit.WPA_temporal.rst", "modules/generated/spkit.Wavelet_decompositions.rst", "modules/generated/spkit.add_noise.rst", "modules/generated/spkit.agg_angles.rst", "modules/generated/spkit.bin_width.rst", "modules/generated/spkit.blackman_lobe.rst", "modules/generated/spkit.cdf_mapping.rst", "modules/generated/spkit.clean_phase.rst", "modules/generated/spkit.conv1d_fb.rst", "modules/generated/spkit.conv1d_fft.rst", "modules/generated/spkit.conv1d_nan.rst", "modules/generated/spkit.conv2d_nan.rst", "modules/generated/spkit.create_multidim_space_signal.rst", "modules/generated/spkit.create_signal_1d.rst", "modules/generated/spkit.create_signal_2d.rst", "modules/generated/spkit.cwt.GaborWave.rst", "modules/generated/spkit.cwt.GaussWave.rst", "modules/generated/spkit.cwt.MorlateWave.rst", "modules/generated/spkit.cwt.PoissonWave.rst", "modules/generated/spkit.cwt.ScalogramCWT.rst", "modules/generated/spkit.cwt.ShannonWave.rst", "modules/generated/spkit.cwt.WavePSD.rst", "modules/generated/spkit.cwt.cMaxicanHatWave.rst", "modules/generated/spkit.cwt.compare_cwt_example.rst", "modules/generated/spkit.data.create_dataset.rst", "modules/generated/spkit.data.ecg_sample.rst", "modules/generated/spkit.data.ecg_sample_12leads.rst", "modules/generated/spkit.data.eda_sample.rst", "modules/generated/spkit.data.eeg_sample_14ch.rst", "modules/generated/spkit.data.eeg_sample_1ch.rst", "modules/generated/spkit.data.eeg_sample_artifact.rst", "modules/generated/spkit.data.egm_sample.rst", "modules/generated/spkit.data.gaussian.rst", "modules/generated/spkit.data.gsr_sample.rst", "modules/generated/spkit.data.linear.rst", "modules/generated/spkit.data.linear_data.rst", "modules/generated/spkit.data.mclass_gauss.rst", "modules/generated/spkit.data.moons.rst", "modules/generated/spkit.data.optical_sample.rst", "modules/generated/spkit.data.ppg_sample.rst", "modules/generated/spkit.data.primitive_polynomials.rst", "modules/generated/spkit.data.sinusoidal.rst", "modules/generated/spkit.data.spiral.rst", "modules/generated/spkit.denorm_kernel.rst", "modules/generated/spkit.dft_analysis.rst", "modules/generated/spkit.dft_synthesis.rst", "modules/generated/spkit.direction_flow_map.rst", "modules/generated/spkit.dispersion_entropy.rst", "modules/generated/spkit.dispersion_entropy_multiscale_refined.rst", "modules/generated/spkit.dominent_freq.rst", "modules/generated/spkit.dominent_freq_win.rst", "modules/generated/spkit.eeg.ATAR.rst", "modules/generated/spkit.eeg.ATAR_1Ch.rst", "modules/generated/spkit.eeg.ATAR_mCh.rst", "modules/generated/spkit.eeg.Gen_SSFI.rst", "modules/generated/spkit.eeg.ICA_filtering.rst", "modules/generated/spkit.eeg.RhythmicDecomposition.rst", "modules/generated/spkit.eeg.TopoMap.rst", "modules/generated/spkit.eeg.TopoMap_Zi.rst", "modules/generated/spkit.eeg.display_topo_RGB.rst", "modules/generated/spkit.eeg.rhythmic_powers.rst", "modules/generated/spkit.eeg.rhythmic_powers_win.rst", "modules/generated/spkit.eeg.s1005_get_epos2d.rst", "modules/generated/spkit.eeg.s1010_get_epos2d.rst", "modules/generated/spkit.eeg.s1020_get_epos2d.rst", "modules/generated/spkit.eeg.showTOPO.rst", "modules/generated/spkit.elbow_knee_point.rst", "modules/generated/spkit.entropy.rst", "modules/generated/spkit.entropy_approx.rst", "modules/generated/spkit.entropy_cond.rst", "modules/generated/spkit.entropy_cross.rst", "modules/generated/spkit.entropy_diff_cond.rst", "modules/generated/spkit.entropy_diff_cond_self.rst", "modules/generated/spkit.entropy_diff_joint.rst", "modules/generated/spkit.entropy_diff_joint_cond.rst", "modules/generated/spkit.entropy_differential.rst", "modules/generated/spkit.entropy_granger_causality.rst", "modules/generated/spkit.entropy_joint.rst", "modules/generated/spkit.entropy_kld.rst", "modules/generated/spkit.entropy_permutation.rst", "modules/generated/spkit.entropy_sample.rst", "modules/generated/spkit.entropy_spectral.rst", "modules/generated/spkit.entropy_svd.rst", "modules/generated/spkit.f0_detection.rst", "modules/generated/spkit.ffrft.rst", "modules/generated/spkit.fill_nans_1d.rst", "modules/generated/spkit.fill_nans_2d.rst", "modules/generated/spkit.filterDC.rst", "modules/generated/spkit.filterDC_sGolay.rst", "modules/generated/spkit.filter_X.rst", "modules/generated/spkit.filter_powerline.rst", "modules/generated/spkit.filter_smooth_gauss.rst", "modules/generated/spkit.filter_smooth_mollifier.rst", "modules/generated/spkit.filter_smooth_sGolay.rst", "modules/generated/spkit.filter_with_kernel.rst", "modules/generated/spkit.filtering_pipeline.rst", "modules/generated/spkit.frft.rst", "modules/generated/spkit.friedrichs_mollifier_kernel.rst", "modules/generated/spkit.gaussian_kernel.rst", "modules/generated/spkit.geometry.Inter2DPlane.rst", "modules/generated/spkit.geometry.TriAng.rst", "modules/generated/spkit.geometry.area_tri.rst", "modules/generated/spkit.geometry.car2spar.rst", "modules/generated/spkit.geometry.dir_vectors.rst", "modules/generated/spkit.geometry.divide_space.rst", "modules/generated/spkit.geometry.getTriFaces.rst", "modules/generated/spkit.geometry.getTriFaces_V2.rst", "modules/generated/spkit.geometry.get_PCA.rst", "modules/generated/spkit.geometry.get_adjacency_matrix_depth.rst", "modules/generated/spkit.geometry.get_adjacency_matrix_dist.rst", "modules/generated/spkit.geometry.get_adjacency_matrix_kNN.rst", "modules/generated/spkit.geometry.get_center.rst", "modules/generated/spkit.geometry.get_circle.rst", "modules/generated/spkit.geometry.get_circular_grid.rst", "modules/generated/spkit.geometry.get_ellipsoid.rst", "modules/generated/spkit.geometry.get_neibours.rst", "modules/generated/spkit.geometry.get_optimal_projection.rst", "modules/generated/spkit.geometry.get_plane.rst", "modules/generated/spkit.geometry.get_sphare.rst", "modules/generated/spkit.geometry.get_square.rst", "modules/generated/spkit.geometry.get_square_grid.rst", "modules/generated/spkit.geometry.lin_inter.rst", "modules/generated/spkit.geometry.node2C_to_adjacency_matrix.rst", "modules/generated/spkit.geometry.opt_project.rst", "modules/generated/spkit.geometry.plot_proj.rst", "modules/generated/spkit.geometry.rotation_matrix.rst", "modules/generated/spkit.geometry.spar2car.rst", "modules/generated/spkit.geometry.surface_plot_mayavi.rst", "modules/generated/spkit.geometry.surface_reconstruction.rst", "modules/generated/spkit.getQuickStats.rst", "modules/generated/spkit.getStats.rst", "modules/generated/spkit.get_activation_time.rst", "modules/generated/spkit.get_repolarisation_time.rst", "modules/generated/spkit.graph_filter_adj.rst", "modules/generated/spkit.graph_filter_dist.rst", "modules/generated/spkit.hist_plot.rst", "modules/generated/spkit.iffrft.rst", "modules/generated/spkit.ifrft.rst", "modules/generated/spkit.io.read_bdf.rst", "modules/generated/spkit.io.read_hdf.rst", "modules/generated/spkit.io.read_surf.rst", "modules/generated/spkit.io.read_surf_file.rst", "modules/generated/spkit.io.read_vtk.rst", "modules/generated/spkit.io.write_vtk.rst", "modules/generated/spkit.is_power2.rst", "modules/generated/spkit.low_resolution.rst", "modules/generated/spkit.mea.activation_repol_time_loc.rst", "modules/generated/spkit.mea.activation_time_loc.rst", "modules/generated/spkit.mea.align_cycles.rst", "modules/generated/spkit.mea.analyse_mea_file.rst", "modules/generated/spkit.mea.arrange_mea_grid.rst", "modules/generated/spkit.mea.compute_cv.rst", "modules/generated/spkit.mea.egm_features.rst", "modules/generated/spkit.mea.extract_egm.rst", "modules/generated/spkit.mea.find_bad_channels_idx.rst", "modules/generated/spkit.mea.get_stim_loc.rst", "modules/generated/spkit.mea.mat_1_show.rst", "modules/generated/spkit.mea.mat_list_show.rst", "modules/generated/spkit.mea.mea_feature_map.rst", "modules/generated/spkit.mea.plot_mea_grid.rst", "modules/generated/spkit.mea.unarrange_mea_grid.rst", "modules/generated/spkit.mean_minSE.rst", "modules/generated/spkit.minMSE.rst", "modules/generated/spkit.ml.ClassificationTree.rst", "modules/generated/spkit.ml.DecisionTree.rst", "modules/generated/spkit.ml.LogisticRegression.rst", "modules/generated/spkit.ml.NaiveBayes.rst", "modules/generated/spkit.ml.RegressionTree.rst", "modules/generated/spkit.mutual_info.rst", "modules/generated/spkit.mutual_info_diff.rst", "modules/generated/spkit.mutual_info_diff_self.rst", "modules/generated/spkit.partial_transfer_entropy.rst", "modules/generated/spkit.peak_detection.rst", "modules/generated/spkit.peak_interp.rst", "modules/generated/spkit.periodogram.rst", "modules/generated/spkit.phase_map.rst", "modules/generated/spkit.phase_map_reconstruction.rst", "modules/generated/spkit.plotJointEntropyXY.rst", "modules/generated/spkit.quantize_FD.rst", "modules/generated/spkit.quantize_signal.rst", "modules/generated/spkit.ramanujan_filter.rst", "modules/generated/spkit.ramanujan_filter_prange.rst", "modules/generated/spkit.regularised_period_estimation.rst", "modules/generated/spkit.show_compass.rst", "modules/generated/spkit.show_farmulas.rst", "modules/generated/spkit.signal_delayed_space.rst", "modules/generated/spkit.signal_diff.rst", "modules/generated/spkit.simplify_signal.rst", "modules/generated/spkit.sinc_dirichlet.rst", "modules/generated/spkit.sinc_interp.rst", "modules/generated/spkit.sineModel_analysis.rst", "modules/generated/spkit.sineModel_synthesis.rst", "modules/generated/spkit.sine_spectrum.rst", "modules/generated/spkit.sine_tracking.rst", "modules/generated/spkit.sinetracks_cleaning.rst", "modules/generated/spkit.spatial_filter_adj.rst", "modules/generated/spkit.spatial_filter_dist.rst", "modules/generated/spkit.stats.get_stats.rst", "modules/generated/spkit.stats.outliers.rst", "modules/generated/spkit.stats.plot_groups_boxes.rst", "modules/generated/spkit.stats.quick_stats.rst", "modules/generated/spkit.stats.test_2groups.rst", "modules/generated/spkit.stats.test_groups.rst", "modules/generated/spkit.stft_analysis.rst", "modules/generated/spkit.stft_synthesis.rst", "modules/generated/spkit.total_variation.rst", "modules/generated/spkit.total_variation_win.rst", "modules/generated/spkit.transfer_entropy.rst", "modules/generated/spkit.transfer_entropy_cond.rst", "modules/generated/spkit.utils.ProgBar.rst", "modules/generated/spkit.utils.ProgBar_JL.rst", "modules/generated/spkit.utils.bcolors.rst", "modules/generated/spkit.utils.pretty_print.rst", "modules/generated/spkit.utils.txcolors.rst", "modules/generated/spkit.utils.view_hierarchical_order.rst", "modules/generated/spkit.wavelet_decomposed_signals.rst", "modules/generated/spkit.wavelet_filtering.rst", "modules/generated/spkit.wavelet_filtering_win.rst", "modules/generated/spkit.wpa_coeff.rst", "modules/generated/spkit.wpa_coeff_win.rst", "modules/information_theory.rst", "modules/ioutils.rst", "modules/it_apps.rst", "modules/it_disperssion_differential.rst", "modules/it_entropy.rst", "modules/machine_learning.rst", "modules/ml_decision_trees.rst", "modules/ml_logistic_regression.rst", "modules/ml_naive_bayes.rst", "modules/signal_processing.rst", "modules/sp_cwt.rst", "modules/sp_dft.rst", "modules/sp_differentiation.rst", "modules/sp_dwt.rst", "modules/sp_filtering_drift.rst", "modules/sp_filtering_graph.rst", "modules/sp_filtering_kernel.rst", "modules/sp_filtering_pipe.rst", "modules/sp_filtering_smooth.rst", "modules/sp_filtering_spatial.rst", "modules/sp_filtering_spectral.rst", "modules/sp_frft.rst", "modules/sp_mapping.rst", "modules/sp_more.rst", "modules/sp_ramanujan.rst", "modules/sp_simplify.rst", "modules/sp_sinusoidal.rst", "modules/sp_stft.rst", "modules/spsignal_analysis.rst", "modules/spsignal_filtering.rst", "modules/spwavelet_analysis.rst", "modules/statisticsutils.rst", "modules/statsfun.rst", "modules/utils.rst", "related_projects.rst", "sg_execution_times.rst", "tune_toc.rst", "tutorials/index.rst", "tutorials/signal_processing/index.rst", "user_guide.rst", "whats_new.rst", "whats_new/_contributors.rst", "whats_new/index.rst", "whats_new/v0.0.9.6.rst", "whats_new/v0.0.9.7.rst"], "titles": ["Electroencephalography (EEG)", "ATAR: Automatic and Tunable Artifact Removal Algorithm", "Independed Principle Component analysis", "EEG Artifact removal using ATAR", "EEG Artifact removal using ICA", "EEG Artifact: ATAR and ICA", "EEG Computing Rhythmic Features - PhyAAt - Semanticity", "EEG Topographic Map", "Computation times", "Examples", "Information Theory", "Dispersion Entropy with Embedding dim", "Dispersion Entropy with top patterns", "Entropy  -  Discreet Source", "Entropy  -  EEG Signal - Multi-Channel", "Entropy  -  Real-Valued Source", "Sample and Approximate Entropy: Comparison", "Computation times", "Machine Learning", "Decision Trees without converting Catogorical Features", "Classification Trees: Depth &amp; Decision boundaries", "Decision Trees with shrinking capability - Classification example", "Decision Trees with shrinking capability - Regression example", "Decision Trees with visualisations while buiding tree", "Logistic Regression -  Visualisation", "Naive Bayes classifier -  Visualisation", "Computation times", "Multi-Electrode-Array (MEA)", "MEA: Minimal Setting: Example", "MEA: Step-wise Analysis: Example", "Computation times", "Release Highlights", "Release Highlights for spkit 0.0.9.6", "Release Highlights for spkit 0.0.9.7", "Computation times", "Computation times", "Signal Processing", "Ramanujan Filter Banks -  Demos", "Ramanujan Filter Banks Example", "Ramanujan Dictionary  - with sparse penalty", "Analysis and Synthesis Models", "Fractional Fourier Transform: FRFT", "Sinusoidal Model:  Analysis and Synthesis", "Sinusoidal Model : Synthesis : Audio", "Computation times", "Statistics", "Auditory Attention: Plot Group Data", "Testing two groups", "Computation times", "Wavelet Analysis", "Scalogram CWT", "Wavelet Filtering", "Computation times", "Contributing", "Development", "Versions", "Empty Page", "Getting Started", "<span class=\"section-number\">1. </span>Installing spkit", "Table Of Contents", "&lt;no title&gt;", "&lt;no title&gt;", "<span class=\"section-number\">5. </span>Biomedical Signal Processing", "<span class=\"section-number\">5.2. </span>Electrocardiography", "<span class=\"section-number\">5.1. </span>Electroencephalography", "<span class=\"section-number\">5.3. </span>Electrogram", "<span class=\"section-number\">5.4. </span>Multi-Electrode Array Processing", "API Reference", "<span class=\"section-number\">8. </span>Data Samples", "Data2 Samples", "<span class=\"section-number\">8.1. </span>Real-world-Samples", "<span class=\"section-number\">8.2. </span>Simulation", "Electrogram", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.A_law", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.create_dictionary", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.ICA", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.Mu_law", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.OutLiers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.PCA", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.PeriodStrength", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.RFB", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.RFB_example_1", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.RFB_example_2", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.RFB_prange", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.SVD", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.TD_Embed", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.TWM_algo", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.TWM_f0", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.wpa_plot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.WPA_temporal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.Wavelet_decompositions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.add_noise", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.agg_angles", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.bin_width", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.blackman_lobe", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.cdf_mapping", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.clean_phase", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.conv1d_fb", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.conv1d_fft", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.conv1d_nan", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.conv2d_nan", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.create_multidim_space_signal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.create_signal_1d", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.create_signal_2d", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.GaborWave", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.GaussWave", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.MorlateWave", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.PoissonWave", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.ScalogramCWT", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.ShannonWave", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.WavePSD", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.cMaxicanHatWave", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.cwt</span></code>.compare_cwt_example", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.create_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.ecg_sample", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.ecg_sample_12leads", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.eda_sample", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.eeg_sample_14ch", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.eeg_sample_1ch", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.eeg_sample_artifact", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.egm_sample", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.gaussian", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.gsr_sample", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.linear", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.linear_data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.mclass_gauss", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.moons", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.optical_sample", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.ppg_sample", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.primitive_polynomials", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.sinusoidal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.data</span></code>.spiral", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.denorm_kernel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.dft_analysis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.dft_synthesis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.direction_flow_map", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.dispersion_entropy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.dispersion_entropy_multiscale_refined", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.dominent_freq", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.dominent_freq_win", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.ATAR", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.ATAR_1Ch", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.ATAR_mCh", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.gen_ssfi", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.ICA_filtering", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.RhythmicDecomposition", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.topomap", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.TopoMap_Zi", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.display_topo_RGB", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.rhythmic_powers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.rhythmic_powers_win", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.s1005_get_epos2d", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.s1010_get_epos2d", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.s1020_get_epos2d", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.eeg</span></code>.showTOPO", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.elbow_knee_point", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_approx", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_cond", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_cross", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_diff_cond", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_diff_cond_self", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_diff_joint", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_diff_joint_cond", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_differential", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_granger_causality", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_joint", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_kld", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_permutation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_sample", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_spectral", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.entropy_svd", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.f0_detection", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.ffrft", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.fill_nans_1d", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.fill_nans_2d", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filterDC", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filterDC_sGolay", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filter_X", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filter_powerline", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filter_smooth_gauss", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filter_smooth_mollifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filter_smooth_sGolay", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filter_with_kernel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.filtering_pipeline", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.frft", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.friedrichs_mollifier_kernel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.gaussian_kernel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.Inter2DPlane", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.TriAng", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.area_tri", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.car2spar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.dir_vectors", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.divide_space", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.getTriFaces", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.getTriFaces_V2", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_PCA", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_adjacency_matrix_depth", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_adjacency_matrix_dist", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_adjacency_matrix_kNN", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_center", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_circle", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_circular_grid", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_ellipsoid", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_neibours", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_optimal_projection", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_plane", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_sphare", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_square", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.get_square_grid", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.lin_inter", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.node2C_to_adjacency_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.opt_project", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.plot_proj", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.rotation_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.spar2car", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.surface_plot_mayavi", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.geometry</span></code>.surface_reconstruction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.getQuickStats", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.getStats", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.get_activation_time", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.get_repolarisation_time", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.graph_filter_adj", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.graph_filter_dist", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.hist_plot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.iffrft", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.ifrft", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.io</span></code>.read_bdf", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.io</span></code>.read_hdf", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.io</span></code>.read_surf", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.io</span></code>.read_surf_file", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.io</span></code>.read_vtk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.io</span></code>.write_vtk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.is_power2", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.low_resolution", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.activation_repol_time_loc", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.activation_time_loc", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.align_cycles", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.analyse_mea_file", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.arrange_mea_grid", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.compute_cv", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.egm_features", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.extract_egm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.find_bad_channels_idx", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.get_stim_loc", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.mat_1_show", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.mat_list_show", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.mea_feature_map", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.plot_mea_grid", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.mea</span></code>.unarrange_mea_grid", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.mean_minSE", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.minMSE", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.ml</span></code>.ClassificationTree", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.ml</span></code>.DecisionTree", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.ml</span></code>.LogisticRegression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.ml</span></code>.NaiveBayes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.ml</span></code>.RegressionTree", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.mutual_info", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.mutual_info_diff", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.mutual_info_diff_self", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.partial_transfer_entropy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.peak_detection", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.peak_interp", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.periodogram", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.phase_map", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.phase_map_reconstruction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.plotJointEntropyXY", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.quantize_FD", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.quantize_signal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.ramanujan_filter", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.ramanujan_filter_prange", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.regularised_period_estimation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.show_compass", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.show_farmulas", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.signal_delayed_space", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.signal_diff", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.simplify_signal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.sinc_dirichlet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.sinc_interp", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.sineModel_analysis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.sineModel_synthesis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.sine_spectrum", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.sine_tracking", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.sinetracks_cleaning", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.spatial_filter_adj", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.spatial_filter_dist", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.stats</span></code>.get_stats", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.stats</span></code>.outliers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.stats</span></code>.plot_groups_boxes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.stats</span></code>.quick_stats", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.stats</span></code>.test_2groups", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.stats</span></code>.test_groups", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.stft_analysis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.stft_synthesis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.total_variation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.total_variation_win", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.transfer_entropy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.transfer_entropy_cond", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.utils</span></code>.ProgBar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.utils</span></code>.ProgBar_JL", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.utils</span></code>.bcolors", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.utils</span></code>.pretty_print", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.utils</span></code>.txcolors", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit.utils</span></code>.view_hierarchical_order", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.wavelet_decomposed_signals", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.wavelet_filtering", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.wavelet_filtering_win", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.wpa_coeff", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spkit</span></code>.wpa_coeff_win", "<span class=\"section-number\">1. </span>Information Theory", "<span class=\"section-number\">7.2. </span>IO Read/Write", "<span class=\"section-number\">1.3. </span>Applications", "<span class=\"section-number\">1.2. </span>Dispersion and Differential Entropy", "<span class=\"section-number\">1.1. </span>Entropy", "<span class=\"section-number\">6. </span>Machine Learning", "<span class=\"section-number\">6.3. </span>Decision Trees", "<span class=\"section-number\">6.1. </span>Logistic Regression", "<span class=\"section-number\">6.2. </span>Naive Bayes", "Signal Processing", "<span class=\"section-number\">3.1. </span>Continues Wavelet Transform", "<span class=\"section-number\">4.1. </span>Discrete Fourier Transfer", "<span class=\"section-number\">4.6. </span>Differentiation", "<span class=\"section-number\">3.2. </span>Discreet Wavelet Transform", "<span class=\"section-number\">2.1. </span>Drift Removing", "<span class=\"section-number\">2.7. </span>Graph Filtering", "<span class=\"section-number\">2.4. </span>Kernel Filtering", "<span class=\"section-number\">2.5. </span>Filtering Pipeline", "<span class=\"section-number\">2.2. </span>Smoothing", "<span class=\"section-number\">2.6. </span>Spatial Filtering (3D)", "<span class=\"section-number\">2.3. </span>Spectral Filtering", "<span class=\"section-number\">4.3. </span>Fractional Fourier Transform", "<span class=\"section-number\">4.8. </span>Signal Temporal Mapping", "Continues Wavelet Transform", "<span class=\"section-number\">4.5. </span>Ramanujan Methods", "<span class=\"section-number\">4.7. </span>Simplifying a complex signal", "<span class=\"section-number\">4.4. </span>Sinusoidal Model", "<span class=\"section-number\">4.2. </span>Short-Time Fourier Transform", "<span class=\"section-number\">4. </span>Signal Analysis", "<span class=\"section-number\">2. </span>Signal Filtering", "<span class=\"section-number\">3. </span>Wavelet Analysis", "<span class=\"section-number\">7. </span>Statistics/Utilities", "<span class=\"section-number\">7.1. </span>Statistics", "<span class=\"section-number\">7.3. </span>Utilities", "Empty Page", "Computation times", "&lt;no title&gt;", "Tutorials", "Signal Processing", "User guide: contents", "Release History", "&lt;no title&gt;", "Version 0.0.9.7", "Version 0.0.9.6", "Version 0.0.9.7"], "terms": {"click": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353], "more": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353], "detail": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 26, 27, 30, 31, 32, 34, 35, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 59, 61, 67, 73, 74, 76, 77, 80, 83, 84, 85, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 104, 105, 106, 107, 109, 111, 114, 116, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 141, 142, 143, 145, 155, 160, 161, 162, 163, 164, 165, 168, 170, 171, 172, 173, 176, 179, 180, 181, 182, 183, 184, 186, 187, 198, 199, 203, 219, 220, 221, 222, 223, 225, 227, 229, 231, 232, 234, 249, 250, 251, 258, 259, 260, 261, 262, 263, 264, 265, 268, 272, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 289, 291, 294, 295, 296, 297, 298, 300, 302, 303, 306, 307, 308, 319, 344, 346], "signal": [0, 1, 10, 11, 12, 15, 17, 28, 29, 40, 41, 50, 51, 57, 59, 64, 66, 68, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 88, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 220, 221, 225, 226, 227, 228, 234, 235, 236, 237, 238, 241, 242, 243, 244, 248, 250, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 274, 275, 276, 278, 279, 280, 292, 293, 294, 295, 296, 297, 304, 305, 306, 307, 308, 312, 313, 323, 327, 339, 344, 348, 351, 352, 353], "process": [0, 1, 19, 23, 51, 57, 59, 74, 79, 80, 83, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 132, 140, 142, 144, 184, 220, 235, 236, 268, 269, 270, 271, 275, 312, 313, 322, 323, 348, 351, 353], "atar": [0, 2, 4, 6, 7, 8, 9, 11, 51, 119, 141, 142, 144, 178, 344, 351, 352, 353], "automat": [0, 3, 4, 5, 8, 9, 11, 51, 64, 140, 141, 142, 144, 178, 344, 351, 352, 353], "tunabl": [0, 3, 4, 5, 8, 9, 11, 51, 64, 140, 141, 142, 178, 344, 351, 352, 353], "artifact": [0, 2, 6, 8, 9, 11, 14, 28, 29, 33, 51, 62, 119, 140, 141, 142, 144, 175, 178, 226, 238, 265, 323, 344, 346, 348, 351, 352, 353], "remov": [0, 2, 6, 8, 9, 11, 14, 28, 29, 33, 51, 62, 79, 80, 83, 96, 119, 140, 141, 142, 144, 175, 176, 177, 178, 179, 182, 184, 226, 234, 238, 242, 265, 275, 287, 305, 306, 322, 329, 331, 338, 344, 346, 348, 351, 352, 353], "algorithm": [0, 3, 4, 5, 8, 9, 11, 32, 36, 51, 73, 75, 76, 86, 87, 140, 141, 142, 144, 155, 172, 178, 322, 331, 344, 351, 352, 353], "us": [0, 2, 6, 8, 9, 11, 14, 15, 19, 21, 22, 23, 25, 28, 29, 32, 33, 37, 39, 50, 51, 53, 58, 64, 66, 74, 76, 77, 79, 80, 83, 88, 92, 97, 98, 104, 105, 106, 107, 109, 110, 111, 116, 119, 122, 123, 132, 138, 139, 141, 142, 143, 145, 155, 161, 164, 165, 170, 172, 176, 180, 181, 182, 183, 184, 186, 193, 206, 216, 220, 221, 222, 223, 225, 227, 232, 253, 262, 263, 264, 265, 267, 268, 273, 275, 278, 281, 284, 285, 287, 291, 296, 303, 306, 312, 313, 322, 323, 327, 331, 337, 338, 344, 348, 351, 352, 353], "ica": [0, 1, 3, 6, 7, 8, 9, 11, 14, 28, 29, 33, 119, 140, 141, 142, 144, 178, 344, 351, 352, 353], "comput": [0, 1, 2, 3, 4, 7, 9, 11, 12, 13, 14, 15, 16, 25, 28, 46, 47, 51, 62, 75, 78, 79, 93, 94, 99, 100, 107, 108, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 149, 150, 155, 156, 158, 159, 164, 166, 167, 168, 181, 186, 190, 192, 220, 221, 222, 223, 224, 235, 236, 237, 238, 240, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 256, 257, 263, 264, 265, 268, 271, 275, 277, 284, 285, 287, 288, 292, 304, 305, 306, 312, 313, 322, 348, 351, 352, 353], "rhythmic": [0, 4, 8, 9, 12, 16, 46, 47, 150, 288, 344], "featur": [0, 4, 7, 8, 9, 12, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 28, 31, 33, 46, 47, 51, 62, 75, 143, 181, 186, 238, 239, 241, 245, 246, 247, 249, 252, 253, 254, 255, 256, 272, 288, 327, 344, 348, 349, 350, 351, 352, 353], "phyaat": [0, 4, 7, 8, 9, 12, 16, 46, 47, 58, 64, 70, 116, 117, 118, 119, 122, 128, 288, 344], "semant": [0, 4, 7, 8, 9, 12, 16, 46, 47, 64, 288, 344], "topograph": [0, 6, 8, 9, 140, 146, 147, 148, 150, 153, 154, 178, 344], "map": [0, 6, 8, 9, 62, 73, 75, 76, 95, 108, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 135, 136, 137, 140, 141, 142, 146, 147, 148, 150, 153, 154, 178, 234, 238, 240, 264, 265, 268, 312, 337, 344, 348], "independ": [0, 3, 5, 8, 9, 75, 140, 141, 142, 178, 344], "principl": [0, 3, 5, 8, 9, 75, 78, 178, 275, 344, 346], "compon": [0, 3, 4, 5, 8, 9, 64, 75, 78, 90, 138, 139, 144, 170, 176, 177, 178, 304, 313, 323, 344], "analysi": [0, 3, 5, 7, 8, 12, 13, 15, 16, 21, 22, 27, 28, 30, 32, 33, 36, 41, 43, 44, 50, 57, 59, 62, 75, 78, 104, 105, 106, 107, 109, 111, 133, 134, 135, 138, 139, 172, 178, 185, 226, 228, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 276, 279, 280, 281, 292, 293, 344, 348], "go": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 252, 253], "end": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 88, 102, 184, 241, 298, 299, 308], "download": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 43, 46, 47, 50, 51, 55, 153, 235, 236, 237, 238, 241, 242, 243, 244, 248], "full": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 66, 67, 84, 146, 180, 181, 183, 227, 228, 229, 231, 235, 236, 238], "code": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 74, 79, 80, 83, 104, 105, 106, 107, 109, 111, 238, 269, 270, 271, 273, 277, 352], "run": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 58, 75, 176, 290, 291, 322], "thi": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 58, 66, 67, 99, 100, 110, 135, 136, 137, 138, 139, 144, 146, 155, 175, 181, 186, 221, 222, 223, 238, 241, 243, 244, 253, 255, 275, 284, 285, 287, 312, 313, 327, 346, 347, 349, 352], "your": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 58, 144, 238, 312], "browser": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51], "via": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 70, 238, 352], "jupyterlit": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51], "binder": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 346], "The": [1, 11, 12, 20, 47, 51, 73, 74, 75, 76, 104, 105, 138, 155, 168, 222, 223, 238, 253, 255, 284, 285, 312, 313, 319, 322, 323, 331, 352], "i": [1, 2, 3, 4, 6, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 28, 29, 32, 33, 38, 47, 51, 57, 58, 62, 64, 70, 73, 74, 75, 76, 77, 79, 80, 83, 88, 91, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 181, 182, 184, 186, 192, 198, 199, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 271, 272, 273, 275, 276, 284, 285, 287, 288, 290, 291, 292, 296, 297, 298, 299, 303, 304, 305, 306, 308, 319, 322, 323, 327, 329, 331, 346, 348, 351, 352, 353], "base": [1, 4, 5, 28, 29, 64, 90, 93, 140, 141, 142, 144, 149, 150, 155, 156, 158, 159, 165, 166, 167, 168, 170, 171, 197, 198, 199, 220, 221, 236, 238, 241, 243, 252, 255, 256, 257, 260, 268, 273, 292, 296, 297, 304, 312, 351, 352, 353], "packet": [1, 88, 89, 140, 141, 142, 304, 305, 306, 307, 308], "decompos": [1, 3, 42, 51, 64, 75, 90, 140, 141, 142, 145, 149, 150, 279, 304, 305, 318, 339, 348, 351, 352, 353], "wpd": [1, 33, 51, 90, 140, 141, 142, 304, 305, 306, 322], "descript": 1, "can": [1, 19, 20, 21, 22, 33, 51, 53, 58, 93, 113, 135, 136, 137, 138, 146, 172, 175, 181, 184, 186, 220, 221, 222, 223, 238, 241, 244, 245, 247, 252, 253, 255, 256, 268, 272, 284, 285, 288, 292, 303, 313, 322, 327, 352], "found": [1, 11, 28, 29, 87, 136, 137, 172, 312], "here": [1, 19, 33, 58, 66, 67, 157, 169, 238, 312, 313, 322, 346], "eeg": [1, 8, 10, 11, 12, 15, 16, 17, 28, 29, 33, 46, 47, 51, 57, 59, 64, 68, 75, 108, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 158, 159, 166, 167, 178, 257, 261, 262, 288, 301, 344, 346, 348, 351, 353], "from": [1, 2, 7, 8, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 33, 34, 35, 39, 40, 43, 44, 48, 50, 52, 55, 58, 66, 70, 74, 75, 79, 80, 83, 84, 87, 95, 96, 99, 102, 108, 110, 113, 121, 123, 125, 126, 129, 130, 131, 134, 138, 146, 153, 165, 166, 170, 172, 176, 177, 182, 184, 193, 199, 211, 221, 227, 228, 235, 236, 238, 241, 242, 244, 247, 252, 253, 254, 255, 256, 260, 261, 262, 268, 269, 270, 271, 276, 279, 280, 281, 282, 287, 293, 296, 297, 304, 313, 319, 323, 331, 344, 346, 351, 352, 353], "articl": [1, 4, 51, 64, 138, 139, 144, 220, 221, 322, 351, 352, 353], "1": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 28, 33, 38, 39, 41, 42, 43, 46, 50, 51, 55, 58, 60, 61, 62, 64, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 197, 198, 199, 201, 202, 203, 207, 208, 209, 216, 219, 220, 221, 222, 223, 225, 226, 227, 228, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 313, 320, 322, 327, 329, 330, 331, 335, 336, 338, 346, 348, 349], "figur": [1, 2, 3, 4, 5, 6, 7, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 29, 33, 38, 39, 40, 41, 42, 46, 50, 62, 70, 73, 75, 76, 80, 83, 84, 85, 88, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 170, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 220, 221, 225, 226, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 252, 254, 255, 256, 261, 262, 263, 264, 265, 268, 269, 270, 274, 275, 276, 278, 287, 288, 292, 295, 304, 305, 306, 307, 308, 312, 313, 319, 331, 348], "show": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 29, 33, 38, 39, 40, 41, 42, 43, 46, 50, 51, 58, 70, 73, 75, 76, 80, 81, 82, 83, 84, 85, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 198, 199, 216, 220, 221, 222, 223, 224, 225, 226, 234, 235, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 264, 265, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 284, 285, 287, 288, 289, 290, 292, 293, 295, 298, 299, 301, 303, 304, 305, 306, 307, 308, 312, 313, 319, 322, 331], "block": [1, 51, 238, 322], "diagram": [1, 51, 241, 266, 322], "oper": [1, 3, 56, 58, 64, 75, 102, 140, 141, 142, 175, 184, 222, 223, 249, 284, 285, 343], "mode": [1, 23, 33, 51, 64, 88, 89, 97, 98, 99, 100, 119, 132, 140, 141, 142, 149, 150, 177, 180, 181, 182, 183, 240, 243, 254, 305, 306, 307, 308, 322], "filter": [1, 6, 9, 11, 12, 13, 15, 32, 36, 39, 40, 44, 46, 49, 50, 52, 59, 62, 80, 81, 82, 83, 91, 118, 119, 132, 144, 149, 150, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 220, 221, 222, 223, 235, 236, 238, 242, 269, 270, 275, 284, 285, 304, 305, 306, 312, 318, 319, 339, 344, 348, 351, 352, 353], "given": [1, 11, 12, 78, 79, 83, 108, 136, 137, 140, 141, 142, 146, 147, 151, 152, 153, 154, 156, 160, 161, 172, 181, 183, 186, 187, 189, 192, 194, 195, 219, 220, 221, 222, 223, 228, 235, 236, 238, 240, 241, 242, 244, 247, 249, 252, 253, 255, 256, 258, 259, 260, 268, 270, 271, 273, 280, 281, 284, 285, 286, 297, 312, 327], "multichannel": [1, 138, 139, 238, 265], "x": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 29, 33, 38, 39, 40, 41, 42, 43, 46, 50, 51, 70, 71, 73, 75, 76, 77, 78, 79, 80, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 193, 196, 198, 199, 200, 203, 205, 206, 212, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 304, 305, 306, 307, 308, 319, 320, 322, 323, 327, 329, 330, 331, 335, 336, 348], "n": [1, 11, 13, 15, 16, 20, 24, 33, 35, 38, 39, 40, 42, 43, 47, 51, 58, 71, 73, 75, 76, 78, 80, 83, 85, 88, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 113, 114, 115, 116, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 156, 159, 164, 167, 168, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 192, 193, 197, 198, 199, 201, 202, 203, 204, 206, 208, 209, 216, 222, 223, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 262, 263, 264, 265, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 289, 292, 294, 298, 299, 301, 304, 305, 306, 307, 308, 312, 313, 320, 322, 323, 331, 335], "nch": [1, 75, 145, 149, 150, 227, 228, 235, 236, 237, 242, 243, 244, 248], "wise": [1, 5, 7, 9, 12, 27, 28, 30, 62, 88, 89, 135, 139, 150, 228, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 295, 301, 306, 308, 344, 348], "reconstruct": [1, 2, 3, 40, 42, 51, 64, 134, 140, 141, 142, 173, 225, 226, 265, 276, 304, 305, 306, 322], "overal": 1, "add": [1, 3, 64, 91, 140, 141, 142, 146, 221, 222, 223, 284, 285, 306, 313], "method": [1, 2, 3, 4, 6, 29, 39, 51, 64, 74, 75, 77, 78, 79, 92, 93, 97, 98, 99, 107, 108, 110, 136, 137, 138, 139, 140, 141, 142, 144, 145, 149, 150, 156, 158, 159, 166, 167, 170, 175, 178, 185, 188, 189, 220, 221, 224, 225, 226, 227, 235, 236, 237, 238, 240, 244, 252, 253, 254, 255, 256, 257, 263, 268, 271, 275, 287, 294, 295, 305, 306, 313, 319, 322, 331, 337, 348, 351, 352, 353], "defualt": [1, 102, 103, 140, 141, 142, 290, 304], "size": [1, 6, 38, 47, 77, 88, 93, 99, 100, 102, 103, 104, 105, 108, 110, 113, 121, 132, 133, 134, 135, 139, 140, 141, 142, 144, 146, 150, 151, 152, 153, 172, 174, 175, 177, 178, 179, 182, 186, 220, 221, 222, 223, 235, 236, 237, 238, 239, 241, 242, 244, 246, 247, 248, 255, 268, 272, 277, 280, 281, 283, 284, 285, 290, 292, 293, 304, 305, 306, 308], "128": [1, 2, 3, 4, 5, 6, 7, 28, 40, 75, 88, 89, 105, 108, 112, 116, 122, 128, 140, 141, 142, 143, 144, 145, 149, 150, 178, 188, 263, 277, 305, 306, 308, 312, 319, 323, 329, 336], "sampl": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 17, 20, 23, 28, 29, 33, 38, 39, 43, 47, 51, 59, 73, 74, 75, 76, 78, 80, 83, 88, 95, 96, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 133, 136, 137, 138, 139, 144, 145, 149, 150, 156, 157, 161, 164, 168, 169, 170, 171, 172, 177, 179, 180, 182, 183, 184, 186, 187, 220, 221, 227, 228, 234, 235, 236, 237, 238, 241, 242, 243, 244, 248, 252, 253, 254, 255, 256, 261, 262, 263, 264, 265, 268, 269, 270, 274, 275, 276, 277, 279, 280, 281, 288, 291, 292, 293, 294, 295, 299, 304, 307, 308, 319, 322, 327, 331, 344, 348, 351, 352, 353], "For": [1, 3, 4, 33, 51, 58, 64, 75, 99, 100, 108, 110, 136, 137, 139, 140, 141, 142, 144, 146, 149, 150, 168, 175, 220, 235, 236, 238, 244, 252, 253, 254, 256, 275, 286, 313, 322, 346, 348, 352], "each": [1, 6, 14, 20, 21, 22, 29, 38, 51, 66, 67, 79, 80, 83, 88, 89, 103, 104, 105, 108, 109, 110, 113, 121, 123, 125, 126, 129, 130, 131, 135, 139, 140, 141, 142, 143, 145, 146, 149, 150, 155, 160, 161, 162, 163, 165, 172, 175, 227, 228, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 252, 253, 254, 255, 256, 258, 259, 260, 269, 270, 271, 288, 296, 297, 301, 304, 305, 306, 307, 308, 313, 322], "coeffici": [1, 51, 88, 176, 206, 254, 304, 305, 306, 307, 308, 322], "There": [1, 29, 51, 58, 66, 146, 221, 238, 278, 288, 322], "manili": 1, "one": [1, 19, 28, 51, 58, 62, 73, 76, 77, 79, 93, 113, 135, 138, 140, 141, 142, 146, 170, 174, 175, 178, 220, 221, 235, 236, 241, 242, 243, 244, 245, 246, 247, 252, 253, 256, 268, 271, 272, 275, 282, 288, 290, 291, 298, 299, 312, 322, 331, 348], "paramet": [1, 4, 21, 22, 25, 50, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 197, 198, 199, 203, 206, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 312], "differ": [1, 3, 4, 20, 23, 33, 58, 66, 90, 93, 99, 100, 107, 108, 110, 112, 113, 132, 134, 136, 137, 138, 145, 149, 156, 157, 158, 159, 166, 167, 169, 235, 238, 241, 245, 257, 290, 292, 298, 299, 304, 313, 351, 352, 353], "list": [1, 12, 28, 29, 33, 46, 58, 80, 82, 83, 92, 108, 110, 115, 117, 121, 123, 126, 128, 129, 130, 131, 135, 137, 140, 141, 142, 144, 145, 146, 149, 150, 151, 152, 153, 158, 159, 166, 167, 175, 178, 184, 197, 198, 199, 221, 227, 228, 235, 236, 237, 238, 239, 241, 242, 243, 246, 247, 248, 252, 253, 254, 255, 256, 257, 269, 270, 286, 287, 288, 291, 301, 305, 306, 312, 342], "simplifi": [1, 19, 276, 319, 337, 348], "mean": [1, 2, 6, 7, 12, 16, 20, 21, 22, 23, 24, 25, 29, 33, 47, 71, 73, 75, 76, 77, 79, 80, 83, 84, 92, 95, 113, 121, 145, 146, 149, 150, 157, 158, 159, 160, 162, 163, 165, 167, 169, 176, 177, 180, 181, 182, 183, 184, 186, 187, 192, 198, 199, 222, 223, 238, 240, 241, 244, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 263, 268, 269, 270, 271, 272, 275, 284, 285, 286, 288, 289, 290, 291, 296, 297, 312, 313, 327, 331], "main": [1, 9, 31, 40, 42, 43, 94, 105, 172, 241, 252, 255, 256, 261, 262, 277, 279, 280, 281, 351, 352, 353], "highher": 1, "valu": [1, 3, 9, 10, 13, 14, 17, 19, 23, 25, 29, 47, 51, 64, 73, 75, 76, 80, 81, 82, 83, 84, 88, 92, 93, 94, 96, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 135, 138, 139, 140, 141, 142, 143, 144, 146, 147, 156, 157, 158, 159, 164, 166, 167, 169, 171, 173, 174, 175, 177, 178, 181, 182, 184, 186, 219, 222, 223, 224, 228, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 252, 253, 254, 256, 257, 262, 269, 270, 272, 273, 275, 276, 281, 284, 285, 286, 288, 289, 290, 291, 305, 306, 308, 312, 322, 331, 344, 348, 352], "By": [1, 53, 238, 252, 253, 256], "default": [1, 3, 50, 51, 64, 66, 75, 76, 77, 81, 82, 83, 85, 87, 88, 91, 92, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 121, 123, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 186, 220, 221, 222, 223, 225, 227, 228, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 253, 254, 256, 257, 258, 259, 260, 265, 268, 270, 272, 274, 276, 279, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 313, 322, 351, 352, 353], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 55, 60, 61, 64, 70, 71, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 195, 198, 199, 203, 205, 206, 207, 214, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 301, 303, 304, 305, 306, 307, 308, 312, 313, 319, 322, 323, 329, 330, 331, 335, 344, 349], "postiv": [1, 241], "float": [1, 6, 40, 46, 51, 75, 96, 99, 102, 103, 104, 105, 108, 110, 111, 113, 123, 135, 136, 140, 141, 142, 144, 156, 157, 169, 175, 180, 181, 186, 187, 198, 222, 223, 227, 237, 238, 241, 243, 244, 252, 253, 254, 265, 272, 284, 285, 294, 298, 299, 305, 306, 322], "optmod": [1, 3, 5, 6, 7, 140, 141, 142], "which": [1, 11, 12, 21, 22, 32, 33, 42, 57, 58, 66, 135, 136, 137, 146, 156, 157, 169, 175, 176, 178, 181, 186, 192, 220, 221, 227, 228, 235, 236, 238, 241, 242, 243, 244, 252, 253, 256, 272, 275, 276, 287, 288, 303, 312, 313, 319, 327, 346, 348, 352], "decid": [1, 21, 22, 156, 158, 159, 166, 167, 257], "hoe": 1, "rather": [1, 135, 181, 186, 313, 327, 352], "than": [1, 11, 12, 33, 51, 73, 75, 76, 80, 83, 99, 100, 134, 135, 138, 139, 143, 149, 150, 157, 169, 184, 193, 237, 238, 241, 242, 243, 269, 270, 279, 313, 322, 331, 352], "pressum": 1, "suppress": [1, 176], "softli": 1, "linatten": [1, 3, 5, 140, 141, 142], "depend": [1, 15, 51, 58, 61, 113, 138, 157, 169, 183, 220, 221, 237, 238, 242, 312, 313, 322, 323], "how": [1, 6, 19, 20, 99, 100, 238, 272, 346], "far": [1, 24, 254], "final": [1, 21, 28, 29, 47, 57, 75, 137, 175, 228, 238, 244, 254, 290, 291, 298, 299], "most": [1, 19, 57, 58, 67, 79, 80, 83, 319, 348], "common": [1, 51, 108, 110, 313, 322, 323], "requir": [1, 58, 93, 238, 292], "addit": [1, 58, 75, 149, 150, 351, 352, 353], "associ": [1, 105, 313, 319], "ar": [1, 4, 6, 28, 29, 32, 33, 42, 51, 53, 58, 64, 66, 67, 73, 76, 80, 83, 88, 99, 100, 102, 103, 105, 107, 108, 110, 113, 126, 135, 138, 139, 140, 141, 142, 143, 144, 146, 150, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 175, 181, 186, 193, 222, 223, 227, 228, 238, 241, 242, 243, 244, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 268, 269, 270, 273, 276, 278, 284, 285, 287, 288, 290, 291, 296, 297, 304, 305, 306, 307, 308, 312, 313, 319, 322, 323, 327, 331, 346, 348, 349, 351, 352, 353], "bf": [1, 140, 141, 142], "2": [1, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 28, 30, 32, 34, 38, 39, 41, 42, 43, 46, 48, 50, 52, 55, 61, 62, 64, 71, 75, 77, 79, 80, 82, 83, 85, 88, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 192, 198, 199, 203, 216, 220, 221, 222, 223, 225, 226, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 306, 307, 308, 312, 313, 322, 327, 330, 331, 346, 348, 349], "gf": [1, 140, 141, 142], "8": [1, 3, 4, 5, 6, 7, 11, 13, 14, 16, 19, 21, 22, 23, 25, 28, 32, 33, 37, 38, 39, 40, 51, 55, 58, 61, 62, 64, 80, 83, 84, 88, 92, 94, 99, 105, 115, 135, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 166, 170, 175, 178, 238, 239, 240, 241, 242, 245, 246, 248, 249, 268, 269, 270, 272, 275, 287, 301, 304, 305, 306, 312, 313, 319, 331, 348, 349], "wv": [1, 3, 6, 7, 33, 51, 88, 89, 90, 140, 141, 142, 304, 305, 306, 307, 308, 322], "db3": [1, 3, 6, 7, 33, 88, 89, 90, 140, 141, 142, 304, 305, 306, 307, 308, 322], "funtion": [1, 99, 100, 107, 108, 110, 268], "could": [1, 21, 22, 108, 109, 110, 111, 136, 137, 146, 222, 223, 244, 284, 285, 323], "ani": [1, 4, 19, 21, 22, 58, 64, 99, 100, 133, 135, 138, 139, 144, 149, 150, 156, 157, 169, 175, 178, 184, 221, 222, 223, 237, 238, 240, 241, 255, 284, 285, 290, 291, 292, 312], "db38": [1, 140, 141, 142, 305, 306], "sym2": [1, 140, 141, 142, 305, 306], "sym20": [1, 140, 141, 142, 305, 306], "coif1": [1, 140, 141, 142, 305, 306], "coif17": [1, 140, 141, 142, 305, 306], "bior1": [1, 140, 141, 142, 305, 306], "bior6": [1, 140, 141, 142, 305, 306], "rbio1": [1, 140, 141, 142, 305, 306], "rbio6": [1, 140, 141, 142, 305, 306], "dmei": [1, 140, 141, 142, 305, 306], "25": [1, 6, 23, 28, 29, 106, 108, 140, 141, 142, 172, 238, 239, 240, 243, 245, 246, 247, 248, 249, 262, 301, 305, 306, 319], "75": [1, 3, 4, 5, 6, 23, 25, 28, 29, 108, 109, 140, 141, 142, 238, 239, 241, 247, 249, 305, 306], "below": [1, 51, 66, 77, 99, 153, 238, 241, 275, 305, 306, 319, 322], "affect": [1, 19, 20, 133, 140, 141, 142, 155, 292], "segment": [1, 6, 143, 145, 149, 150, 235, 236], "three": [1, 4, 25, 42, 51, 64, 115, 127, 143, 144, 268, 291, 313, 322, 331], "refer": [1, 33, 51, 57, 73, 74, 75, 76, 77, 79, 80, 83, 86, 88, 89, 90, 92, 93, 94, 95, 96, 98, 103, 104, 105, 106, 107, 109, 111, 112, 116, 117, 118, 119, 122, 128, 133, 134, 136, 138, 139, 140, 142, 143, 144, 145, 149, 153, 155, 157, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 176, 177, 178, 179, 180, 181, 184, 185, 186, 219, 220, 221, 225, 226, 235, 236, 250, 251, 258, 259, 260, 263, 264, 268, 269, 270, 271, 272, 274, 275, 276, 277, 281, 282, 283, 288, 290, 294, 295, 296, 297, 304, 305, 306, 307, 308, 322, 348], "bajaj": [1, 140, 142, 143], "nikesh": [1, 140, 142], "et": [1, 140, 142], "al": [1, 140, 142, 202], "decomposit": [1, 75, 79, 84, 88, 89, 133, 134, 140, 141, 142, 144, 171, 271, 276, 279, 280, 292, 293, 304, 305, 306, 307, 308, 313, 322, 351, 352, 353], "applic": [1, 51, 140, 142, 252, 253, 309, 313, 322, 323, 348], "predict": [1, 19, 20, 21, 22, 23, 24, 25, 140, 142, 252, 253, 254, 255, 256, 258, 259, 273], "model": [1, 7, 9, 13, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 32, 33, 36, 41, 44, 46, 50, 78, 133, 134, 140, 142, 185, 226, 252, 254, 255, 256, 276, 279, 280, 292, 293, 318, 320, 336, 337, 344, 348, 351, 352, 353], "dure": [1, 75, 140, 142, 221, 235, 236, 313, 352], "auditori": [1, 6, 7, 9, 24, 29, 37, 39, 43, 45, 47, 48, 140, 142, 288, 344], "task": [1, 140, 142], "biomed": [1, 59, 138, 140, 142, 348], "55": [1, 28, 29, 140, 142, 238, 239, 247, 249], "2020": [1, 55, 140, 142, 351, 352, 353], "101624": [1, 140, 142], "spkit": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 34, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 55, 57, 66, 70, 71, 310, 312, 313, 319, 320, 322, 323, 327, 329, 331, 341, 342, 344, 348, 349, 351, 353], "atar_1ch": [1, 140, 142, 144], "atar_mch": [1, 140, 141, 144], "singl": [1, 3, 64, 99, 118, 135, 138, 139, 140, 141, 142, 144, 176, 177, 178, 180, 181, 182, 183, 184, 222, 223, 235, 236, 241, 242, 245, 248, 276, 284, 285, 323], "channel": [1, 2, 3, 4, 5, 7, 9, 10, 15, 17, 28, 33, 62, 64, 75, 78, 99, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 158, 159, 166, 167, 176, 177, 178, 179, 180, 181, 182, 183, 184, 227, 228, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 257, 264, 265, 272, 312, 323, 344, 348], "input": [1, 19, 41, 43, 66, 75, 91, 98, 99, 100, 101, 108, 110, 112, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 155, 156, 168, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 220, 221, 225, 226, 235, 236, 238, 241, 263, 267, 268, 274, 275, 276, 278, 279, 280, 293, 351, 352, 353], "shape": [1, 2, 3, 4, 5, 7, 11, 12, 14, 19, 21, 22, 23, 24, 25, 28, 29, 33, 38, 39, 40, 42, 43, 50, 70, 73, 75, 76, 79, 80, 83, 84, 85, 91, 95, 99, 100, 101, 108, 110, 113, 115, 117, 119, 121, 123, 125, 126, 127, 130, 131, 133, 134, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 168, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 192, 198, 199, 203, 222, 223, 228, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 252, 254, 255, 256, 261, 262, 264, 265, 269, 270, 271, 274, 279, 280, 281, 283, 284, 285, 288, 292, 293, 307, 312, 319, 320, 335, 336, 351, 352, 353], "where": [1, 2, 3, 6, 12, 29, 51, 58, 64, 67, 75, 104, 105, 106, 107, 108, 109, 110, 111, 135, 140, 141, 142, 143, 149, 150, 155, 156, 160, 161, 162, 163, 165, 172, 175, 176, 228, 235, 236, 237, 241, 244, 258, 259, 260, 287, 288, 292, 294, 296, 297, 305, 306, 312, 319, 322, 323], "ch": [1, 14, 28, 29, 33, 51, 70, 108, 115, 118, 133, 134, 138, 139, 143, 144, 146, 149, 150, 151, 152, 153, 176, 177, 178, 179, 180, 181, 182, 183, 184, 237, 238, 244, 264, 265], "joblib": [1, 58, 61, 140, 142, 351, 352, 353], "parallel": [1, 140, 142], "multi": [1, 3, 4, 10, 15, 17, 57, 59, 62, 85, 91, 101, 125, 136, 140, 142, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 176, 177, 178, 179, 180, 181, 182, 183, 184, 235, 236, 237, 238, 243, 244, 254, 257, 258, 259, 260, 264, 265, 274, 296, 297, 323, 344, 348, 351, 352, 353], "some": [1, 51, 57, 58, 132, 135, 220, 221, 226, 238, 248, 275, 304, 322, 323, 329], "o": [1, 12, 20, 28, 29, 42, 85, 113, 121, 123, 125, 126, 130, 131, 235, 236, 237, 238, 241, 242, 243, 244, 248, 261, 262, 287, 288, 312], "rais": [1, 238, 352], "an": [1, 13, 14, 24, 33, 42, 66, 73, 75, 76, 93, 108, 109, 110, 111, 128, 158, 159, 166, 167, 172, 175, 220, 235, 236, 246, 252, 253, 257, 292, 313, 319, 329, 331, 346], "error": [1, 2, 76, 86, 87, 93, 172, 238, 250, 251, 312, 351, 352, 353], "brokenprocesspool": 1, "case": [1, 4, 19, 58, 64, 108, 132, 136, 137, 144, 146, 175, 220, 222, 223, 237, 238, 242, 272, 276, 284, 285, 313, 323], "atar_mch_noparallel": 1, "same": [1, 15, 23, 33, 42, 73, 76, 77, 91, 97, 98, 99, 100, 102, 103, 104, 105, 108, 110, 112, 117, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 156, 157, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 222, 223, 228, 235, 236, 238, 241, 242, 246, 247, 248, 255, 268, 272, 275, 280, 281, 283, 284, 285, 288, 292, 293, 304, 305, 306, 312, 313, 319, 352], "except": [1, 4, 64, 99, 100, 135, 144, 175, 234, 331], "altern": [1, 73, 76, 135, 136, 137, 221, 312, 331], "loop": [1, 40], "gener": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 82, 93, 102, 103, 105, 106, 108, 109, 110, 111, 121, 123, 125, 126, 130, 131, 135, 143, 146, 157, 169, 181, 186, 187, 227, 228, 231, 277, 281, 288, 313, 327], "call": [1, 157, 169, 238, 313], "pass": [1, 28, 29, 47, 51, 75, 99, 100, 113, 119, 135, 138, 139, 140, 141, 142, 146, 175, 184, 193, 206, 222, 223, 227, 228, 238, 243, 247, 248, 284, 285, 290, 291, 322], "els": [1, 20, 29, 73, 76, 87, 102, 107, 108, 109, 110, 111, 133, 134, 135, 140, 141, 142, 143, 146, 155, 164, 224, 228, 235, 236, 238, 241, 242, 254, 264, 268, 272, 275, 304, 305, 306, 319, 331], "use_joblib": [1, 6, 139, 140, 142, 145, 149, 178], "agrument": 1, "try": [1, 57, 220, 221, 238, 244, 300, 302], "individu": [1, 246, 305, 306], "we": [1, 5, 6, 16, 19, 20, 21, 22, 23, 28, 29, 32, 33, 40, 42, 51, 67, 132, 193, 312, 313, 322, 346, 348, 352], "recom": 1, "import": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 58, 66, 70, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 198, 199, 203, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 313, 319, 320, 322, 323, 327, 329, 331, 351, 352, 353], "librari": [1, 3, 4, 19, 23, 24, 25, 32, 33, 50, 53, 57, 58, 66, 177, 182, 232, 323, 349], "numpi": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 58, 61, 70, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 198, 199, 203, 219, 220, 221, 222, 223, 224, 225, 226, 228, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 304, 305, 306, 307, 308, 312, 313, 319, 320, 322, 323, 327, 329, 331], "np": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 70, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 198, 199, 203, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 304, 305, 306, 307, 308, 312, 313, 319, 320, 322, 323, 327, 329, 330, 331, 336], "matplotlib": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 58, 61, 70, 73, 75, 76, 80, 81, 82, 83, 84, 85, 88, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 160, 162, 163, 164, 165, 166, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 198, 199, 203, 220, 221, 222, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 284, 285, 287, 288, 290, 292, 293, 294, 295, 296, 297, 304, 305, 306, 307, 308, 312, 313, 319, 320, 322, 323, 327, 329, 331], "pyplot": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 70, 73, 75, 76, 80, 81, 82, 83, 84, 85, 88, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 160, 162, 163, 164, 165, 166, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 198, 199, 203, 220, 221, 222, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 284, 285, 287, 288, 290, 292, 293, 294, 295, 296, 297, 304, 305, 306, 307, 308, 312, 313, 319, 320, 322, 323, 327, 329, 331], "plt": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 70, 73, 75, 76, 80, 81, 82, 83, 84, 85, 88, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 160, 162, 163, 164, 165, 166, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 198, 199, 203, 220, 221, 222, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 284, 285, 287, 288, 290, 292, 293, 294, 295, 296, 297, 304, 305, 306, 307, 308, 312, 313, 319, 320, 322, 323, 327, 329, 331], "warn": [1, 3, 4, 5, 113, 136, 137, 146, 149, 150], "filterwarn": [1, 3, 4, 5], "ignor": [1, 3, 4, 5, 99, 100, 146, 151, 152, 153, 250, 272, 276], "sp": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 20, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 66, 70, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 198, 199, 203, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 313, 319, 320, 322, 323, 327, 329, 330, 331, 335, 336], "print": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 33, 37, 38, 39, 40, 41, 42, 47, 50, 80, 83, 84, 92, 93, 99, 108, 113, 129, 132, 136, 137, 138, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 175, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 249, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 269, 270, 286, 290, 291, 294, 296, 297, 300, 301, 302, 303, 312, 313, 319, 320, 335, 336, 342, 351, 352, 353], "version": [1, 2, 3, 4, 5, 6, 7, 11, 12, 14, 15, 19, 20, 21, 22, 23, 24, 25, 28, 29, 37, 39, 40, 41, 42, 50, 54, 58, 61, 74, 79, 80, 83, 93, 108, 110, 121, 123, 125, 126, 130, 131, 144, 145, 151, 152, 153, 238, 253, 269, 270, 271, 313, 319, 349], "__version__": [1, 2, 3, 4, 5, 6, 7, 11, 12, 14, 15, 19, 20, 21, 22, 23, 24, 25, 28, 29, 37, 39, 40, 41, 42, 50, 51, 58, 238, 319], "data": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 14, 20, 21, 22, 23, 24, 25, 28, 29, 33, 37, 39, 40, 42, 43, 45, 47, 48, 50, 51, 59, 73, 75, 76, 84, 85, 88, 93, 95, 96, 101, 108, 112, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 177, 180, 182, 183, 184, 186, 187, 220, 221, 224, 228, 234, 238, 252, 253, 255, 256, 258, 259, 260, 261, 262, 264, 265, 268, 274, 275, 276, 288, 292, 293, 294, 295, 296, 297, 304, 307, 308, 312, 313, 320, 322, 327, 330, 331, 336, 344, 348, 351, 353], "f": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 28, 29, 33, 39, 40, 42, 43, 50, 51, 64, 70, 73, 75, 76, 80, 83, 84, 85, 88, 91, 95, 96, 97, 98, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 197, 216, 220, 221, 224, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 241, 242, 243, 244, 248, 249, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 274, 275, 276, 278, 279, 280, 281, 292, 293, 294, 295, 296, 297, 304, 305, 307, 308, 312, 319, 320, 322, 323, 327, 329, 330, 331, 335, 336, 348], "ch_name": [1, 2, 3, 4, 5, 6, 7, 11, 12, 14, 33, 40, 64, 70, 75, 84, 85, 117, 119, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 158, 159, 160, 162, 163, 165, 166, 167, 224, 258, 259, 260, 261, 262, 296, 297, 301, 312, 313, 320, 330, 336], "eeg_sample_14ch": [1, 2, 3, 4, 5, 7, 11, 12, 14, 33, 40, 70, 75, 84, 85, 114, 115, 116, 118, 119, 120, 122, 127, 128, 140, 141, 142, 143, 144, 145, 146, 149, 150, 158, 159, 160, 162, 163, 165, 166, 167, 224, 258, 259, 260, 261, 262, 296, 297, 312, 313, 320, 330, 336], "filterdc_sgolai": [1, 33, 75, 84, 88, 96, 138, 140, 141, 142, 143, 144, 145, 146, 149, 150, 176, 184, 220, 221, 264, 265, 276, 292, 293, 304, 307, 308, 322, 323, 351, 352, 353], "window_length": [1, 33, 75, 84, 88, 96, 97, 98, 138, 140, 141, 142, 143, 144, 145, 146, 149, 150, 177, 180, 181, 182, 183, 186, 187, 220, 221, 264, 265, 276, 292, 293, 304, 307, 308, 322, 323, 327], "3": [1, 3, 4, 5, 6, 11, 12, 13, 14, 16, 20, 21, 22, 23, 24, 28, 32, 33, 37, 38, 42, 43, 46, 50, 55, 58, 60, 61, 62, 64, 70, 71, 73, 75, 76, 80, 82, 83, 84, 85, 88, 95, 96, 97, 98, 99, 100, 101, 103, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 120, 121, 122, 123, 125, 127, 128, 129, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 153, 157, 161, 164, 168, 169, 170, 171, 174, 175, 176, 177, 180, 181, 182, 197, 203, 206, 207, 214, 220, 221, 222, 223, 232, 234, 235, 236, 237, 238, 239, 241, 242, 244, 249, 252, 254, 255, 256, 264, 268, 269, 270, 274, 275, 276, 279, 280, 283, 284, 285, 286, 288, 289, 292, 293, 295, 301, 303, 304, 306, 307, 308, 312, 313, 322, 323, 327, 331, 346, 348, 349], "highpass": [1, 2, 3, 4, 5, 6, 7, 178, 323, 338, 348], "xf": [1, 2, 3, 4, 5, 7, 39, 41, 51, 75, 84, 173, 178, 179, 185, 225, 226, 312, 323, 329], "filter_x": [1, 2, 3, 4, 5, 7, 11, 12, 149, 150, 180, 181, 182, 183, 184, 305, 312, 323, 329, 351, 352, 353], "copi": [1, 2, 3, 4, 5, 6, 7, 29, 33, 40, 42, 43, 51, 73, 76, 97, 98, 99, 100, 144, 160, 162, 163, 165, 175, 176, 177, 178, 180, 181, 182, 183, 186, 187, 234, 241, 258, 259, 260, 268, 275, 278, 279, 280, 296, 297, 305, 306, 312, 323, 327, 330, 331], "band": [1, 2, 3, 4, 5, 6, 7, 11, 12, 143, 145, 149, 150, 178, 312, 323, 329], "btype": [1, 2, 3, 4, 5, 6, 7, 11, 12, 178, 312, 323, 329], "ftype": [1, 2, 3, 4, 5, 7, 149, 150, 178, 198, 199, 222, 223, 284, 285, 323, 329], "so": [1, 2, 3, 4, 5, 6, 7, 15, 21, 22, 140, 141, 142, 149, 150, 178, 220, 222, 223, 235, 236, 238, 241, 242, 243, 284, 285, 312, 313, 323], "t": [1, 2, 3, 4, 5, 6, 11, 12, 14, 16, 23, 29, 33, 38, 39, 40, 41, 42, 43, 47, 50, 51, 70, 73, 75, 76, 80, 83, 84, 85, 88, 91, 93, 95, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 151, 152, 153, 155, 156, 157, 158, 159, 164, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 220, 221, 225, 226, 234, 235, 236, 237, 244, 250, 251, 255, 257, 261, 262, 264, 265, 268, 269, 270, 274, 275, 276, 277, 278, 279, 280, 287, 290, 292, 293, 301, 304, 306, 307, 308, 312, 313, 319, 320, 322, 323, 327, 330, 331, 336, 346], "arang": [1, 2, 3, 4, 5, 6, 11, 12, 14, 16, 21, 22, 29, 33, 38, 39, 40, 42, 43, 50, 51, 70, 73, 75, 76, 80, 84, 85, 88, 94, 95, 96, 97, 98, 99, 101, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 155, 164, 170, 172, 177, 178, 180, 181, 182, 183, 184, 186, 187, 220, 221, 234, 237, 244, 252, 255, 256, 261, 262, 264, 265, 268, 269, 274, 275, 276, 277, 278, 279, 280, 287, 292, 293, 304, 306, 307, 308, 312, 313, 319, 320, 322, 323, 327, 330, 331, 336], "figsiz": [1, 2, 3, 4, 5, 6, 7, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 29, 33, 38, 39, 40, 41, 42, 43, 46, 50, 70, 73, 75, 76, 80, 83, 84, 85, 88, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 198, 199, 203, 220, 221, 222, 223, 225, 226, 234, 235, 236, 237, 238, 241, 242, 244, 246, 247, 248, 252, 254, 255, 256, 261, 262, 263, 264, 265, 268, 269, 270, 272, 274, 275, 276, 278, 279, 280, 284, 285, 287, 288, 290, 292, 293, 295, 304, 305, 306, 307, 308, 312, 313, 319, 331], "12": [1, 2, 3, 4, 5, 12, 14, 15, 16, 21, 22, 23, 24, 25, 28, 32, 33, 37, 38, 39, 61, 62, 64, 73, 75, 76, 80, 83, 94, 97, 98, 100, 103, 105, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 135, 140, 141, 142, 144, 151, 152, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 187, 235, 236, 238, 239, 247, 248, 249, 252, 254, 268, 269, 270, 287, 301, 306, 312, 319, 331, 348], "plot": [1, 4, 7, 9, 11, 12, 14, 16, 20, 21, 22, 23, 24, 28, 29, 33, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 62, 70, 73, 75, 76, 80, 83, 84, 85, 88, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 150, 151, 152, 153, 155, 170, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 193, 194, 195, 205, 212, 213, 216, 220, 221, 224, 225, 226, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 253, 254, 255, 256, 261, 262, 263, 264, 265, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 287, 288, 290, 292, 293, 295, 304, 305, 306, 307, 308, 312, 313, 331, 341, 344, 348], "7": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 31, 32, 34, 37, 38, 39, 40, 41, 42, 44, 46, 50, 55, 61, 62, 73, 75, 76, 82, 99, 100, 102, 103, 115, 117, 121, 123, 125, 126, 130, 131, 137, 139, 144, 145, 146, 149, 151, 152, 153, 174, 175, 177, 180, 187, 198, 199, 222, 223, 235, 238, 239, 241, 242, 245, 246, 248, 249, 252, 255, 256, 261, 262, 275, 284, 285, 301, 304, 312, 313, 327, 344, 348, 349], "200": [1, 2, 3, 4, 14, 20, 38, 39, 71, 75, 91, 93, 97, 98, 99, 113, 140, 141, 142, 144, 157, 168, 169, 171, 238, 313], "xlim": [1, 2, 3, 4, 5, 7, 11, 12, 14, 16, 20, 21, 22, 29, 33, 38, 39, 40, 41, 42, 70, 73, 75, 76, 80, 83, 85, 91, 96, 97, 98, 99, 101, 104, 105, 106, 107, 109, 111, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 170, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 225, 226, 234, 244, 248, 261, 262, 263, 264, 265, 268, 269, 270, 274, 275, 276, 277, 306, 307, 308, 312, 313, 319, 331], "xlabel": [1, 2, 3, 4, 6, 7, 11, 12, 13, 14, 15, 16, 20, 29, 38, 39, 40, 41, 42, 46, 50, 70, 73, 76, 80, 83, 85, 95, 96, 101, 104, 105, 106, 107, 109, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 170, 173, 177, 178, 180, 181, 182, 183, 185, 186, 187, 220, 221, 224, 225, 226, 234, 237, 263, 264, 265, 268, 269, 270, 274, 275, 278, 288, 306, 307, 308, 312, 313, 319, 331], "time": [1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 62, 64, 70, 73, 76, 80, 83, 85, 95, 96, 97, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 150, 168, 170, 172, 173, 177, 178, 180, 181, 182, 183, 185, 186, 187, 220, 221, 225, 226, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 248, 254, 264, 265, 268, 269, 270, 274, 275, 276, 278, 279, 280, 287, 292, 293, 294, 298, 299, 301, 306, 307, 308, 318, 319, 322, 331, 337, 348, 351, 352, 353], "ytick": [1, 2, 3, 4, 5, 12, 14, 20, 29, 38, 70, 75, 83, 91, 96, 115, 117, 119, 140, 142, 143, 144, 178, 181, 234, 264, 270, 275], "grid": [1, 3, 4, 7, 11, 12, 14, 16, 24, 29, 33, 40, 42, 43, 66, 70, 73, 76, 91, 95, 96, 97, 98, 99, 102, 103, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 135, 138, 139, 140, 141, 142, 143, 144, 146, 150, 155, 170, 172, 177, 180, 181, 182, 183, 184, 186, 187, 202, 206, 208, 209, 234, 237, 238, 239, 240, 244, 246, 247, 248, 249, 254, 261, 262, 263, 264, 265, 268, 275, 277, 279, 280, 292, 293, 306, 307, 308, 312, 313, 319, 331], "titl": [1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 20, 29, 33, 39, 40, 42, 46, 47, 73, 75, 76, 84, 95, 96, 99, 100, 103, 113, 121, 123, 125, 126, 130, 131, 135, 138, 139, 140, 141, 142, 143, 144, 150, 151, 152, 153, 175, 180, 181, 182, 183, 186, 187, 198, 199, 220, 221, 222, 223, 236, 237, 241, 244, 245, 246, 247, 248, 252, 253, 256, 261, 262, 264, 265, 272, 275, 276, 284, 285, 287, 288, 290, 291, 298, 299], "14": [1, 2, 3, 4, 5, 6, 7, 8, 14, 16, 22, 23, 25, 28, 29, 32, 33, 37, 38, 39, 61, 64, 74, 75, 79, 84, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 140, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 238, 239, 247, 249, 271, 301], "9": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 31, 34, 37, 38, 39, 40, 41, 42, 50, 55, 60, 61, 62, 81, 82, 93, 99, 100, 102, 103, 105, 115, 117, 121, 123, 125, 126, 130, 131, 132, 140, 141, 142, 144, 145, 146, 149, 151, 152, 153, 156, 173, 174, 175, 177, 185, 225, 226, 239, 241, 248, 249, 254, 257, 291, 301, 304, 312, 313, 319, 344, 348, 349], "math": [1, 2, 51, 161, 273, 312], "xr": [1, 3, 4, 5, 7, 33, 40, 42, 43, 140, 141, 142, 144, 276, 279, 280, 304, 305, 306, 322, 335], "verbos": [1, 3, 4, 5, 6, 11, 12, 20, 23, 29, 51, 86, 87, 88, 89, 139, 140, 141, 142, 143, 144, 149, 150, 158, 159, 167, 178, 184, 185, 192, 195, 199, 221, 223, 226, 227, 228, 235, 236, 237, 238, 240, 241, 242, 243, 244, 248, 252, 253, 254, 256, 257, 260, 265, 273, 305, 306, 308, 312], "correct": [1, 3, 4, 6, 64, 135, 140, 141, 142, 177, 182, 228, 238, 242], "2048": [1, 2, 3, 4, 5, 11, 12, 14, 40, 50, 136, 137, 138], "r_": [1, 38, 80, 83, 269, 270], "01": [1, 8, 20, 23, 24, 25, 26, 34, 39, 40, 42, 43, 73, 76, 87, 93, 135, 168, 171, 172, 198, 199, 203, 222, 223, 254, 276, 279, 280, 282, 284, 285, 307, 308, 313, 335], "02": [1, 20, 23, 25, 26, 34, 44, 220, 221], "round": [1, 13, 15, 33, 51, 99, 100, 170, 175, 239, 245, 246, 249, 262, 290, 291, 313, 322], "b": [1, 20, 24, 113, 123, 155, 176, 246, 254, 288, 292], "15": [1, 2, 3, 4, 5, 6, 7, 16, 20, 21, 22, 23, 24, 28, 29, 32, 37, 38, 40, 50, 55, 61, 75, 80, 82, 84, 88, 113, 140, 141, 142, 186, 198, 199, 203, 222, 223, 238, 239, 244, 247, 248, 249, 269, 284, 285, 291, 301, 312, 319, 351, 352, 353], "subplot": [1, 2, 3, 4, 5, 6, 7, 11, 12, 14, 15, 16, 20, 24, 29, 33, 38, 39, 40, 41, 42, 43, 46, 73, 75, 76, 80, 83, 84, 85, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 127, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 170, 172, 173, 175, 183, 184, 185, 186, 187, 198, 199, 203, 222, 223, 225, 226, 235, 244, 245, 254, 264, 265, 269, 270, 274, 275, 276, 279, 280, 284, 285, 287, 288, 292, 293, 295, 307, 308, 312, 313, 319], "121": [1, 2, 3, 4, 11, 12, 15, 16, 21, 26, 28, 29, 33, 105, 138, 151, 152, 153, 170, 287, 313, 319], "r": [1, 2, 3, 6, 7, 16, 20, 24, 33, 39, 40, 41, 42, 46, 62, 64, 73, 76, 84, 93, 96, 99, 100, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 157, 169, 170, 171, 172, 173, 175, 180, 181, 185, 186, 198, 199, 201, 207, 208, 209, 220, 221, 222, 223, 225, 226, 257, 264, 265, 284, 285, 288, 305, 306, 313, 327, 348], "122": [1, 2, 3, 4, 11, 12, 15, 16, 29, 33, 105, 138, 151, 152, 153, 170, 287, 313, 319], "db8": 1, "db32": 1, "10": [1, 2, 3, 4, 6, 7, 11, 12, 13, 16, 19, 20, 21, 22, 23, 25, 28, 32, 37, 40, 41, 42, 43, 46, 47, 50, 62, 70, 75, 80, 81, 82, 83, 85, 88, 91, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 117, 119, 127, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 153, 155, 156, 158, 159, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 181, 183, 185, 186, 187, 195, 198, 199, 202, 203, 209, 220, 221, 222, 223, 225, 226, 234, 238, 239, 240, 244, 246, 249, 254, 255, 256, 257, 264, 265, 269, 270, 272, 274, 275, 276, 278, 279, 280, 284, 285, 288, 290, 292, 293, 295, 301, 304, 305, 307, 308, 312, 313, 319, 335, 348, 351, 352, 353], "lowest": 1, "help": [1, 135, 156, 158, 166, 235, 236, 244, 306, 312], "prevent": 1, "entir": [1, 75, 144, 238, 242], "zero": [1, 14, 25, 38, 39, 51, 76, 80, 83, 84, 136, 137, 140, 141, 142, 156, 158, 159, 166, 167, 174, 175, 176, 225, 226, 238, 240, 257, 269, 270, 278, 305, 306, 312, 322], "out": [1, 38, 51, 57, 67, 93, 176, 177, 178, 238, 265, 305, 306, 322, 323], "due": [1, 19, 50, 220, 221, 235, 236, 241, 351, 352, 353], "present": [1, 87, 160, 161, 163, 165, 258, 259, 260, 296, 297], "high": [1, 11, 12, 21, 22, 73, 76, 96, 114, 119, 140, 141, 142, 157, 169, 241, 312, 331], "magnitut": 1, "largest": [1, 79, 80, 83, 222, 223, 269, 270, 271, 284, 285], "term": [1, 313], "decai": 1, "curv": [1, 21, 22, 155, 182, 187, 252, 253, 254, 256], "increas": [1, 238, 279, 282], "k2": [1, 3, 6, 7, 93, 140, 141, 142], "make": [1, 88, 136, 137, 146, 151, 152, 153, 156, 158, 159, 166, 167, 175, 180, 181, 183, 222, 223, 237, 238, 242, 257, 284, 285, 308, 312], "less": [1, 11, 12, 80, 83, 93, 144, 157, 168, 169, 171, 238, 243, 268, 269, 270, 313], "k1": [1, 3, 6, 7, 93, 140, 141, 142], "50": [1, 11, 22, 23, 28, 29, 32, 37, 39, 74, 79, 85, 113, 119, 155, 178, 179, 184, 198, 199, 203, 221, 222, 223, 238, 248, 271, 276, 277, 278, 284, 285, 288, 292, 298, 299, 301, 306], "inter": [1, 146, 175, 238, 240], "quartil": [1, 287], "incres": [1, 160, 161, 163, 165, 258, 259, 260, 296, 297], "85": [1, 16, 28, 29, 108, 146, 147, 238, 239, 247, 249], "70": [1, 23, 32, 37, 140, 141, 142, 261, 262], "300": [1, 24, 29, 70, 117, 238, 254], "all": [1, 4, 9, 11, 12, 28, 29, 51, 58, 64, 66, 75, 80, 83, 108, 110, 114, 115, 116, 120, 122, 127, 128, 129, 135, 136, 137, 138, 139, 144, 145, 149, 150, 151, 152, 153, 156, 172, 184, 227, 235, 236, 237, 238, 241, 242, 243, 244, 246, 247, 248, 255, 269, 270, 272, 287, 290, 291, 304, 305, 306, 312, 322, 344, 346, 348, 349, 352], "thr_method": [1, 3, 6, 7, 140, 141, 142], "none": [1, 2, 12, 20, 23, 29, 33, 39, 40, 42, 43, 47, 75, 78, 80, 83, 84, 87, 88, 89, 91, 97, 99, 100, 102, 103, 104, 105, 108, 110, 121, 123, 125, 126, 127, 130, 132, 133, 134, 135, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 154, 155, 156, 158, 159, 160, 162, 163, 165, 167, 170, 172, 175, 180, 181, 184, 187, 189, 193, 195, 202, 204, 209, 211, 216, 221, 222, 227, 228, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 279, 280, 284, 287, 288, 290, 291, 292, 295, 296, 297, 299, 301, 305, 306, 307, 308, 312, 313, 319, 327, 335, 336], "theta_a": [1, 140, 141, 142], "winsiz": [1, 3, 4, 5, 6, 7, 88, 89, 140, 141, 142, 143, 144, 150, 306, 308], "assum": [1, 134, 155, 287, 290], "rate": [1, 2, 3, 4, 5, 7, 40, 42, 104, 108, 110, 114, 116, 122, 128, 145, 149, 150, 157, 169, 172, 254, 312, 319], "need": [1, 4, 19, 64, 66, 140, 141, 142, 144, 238, 242], "In": [1, 5, 6, 16, 19, 20, 21, 22, 28, 29, 33, 40, 42, 51, 58, 99, 100, 136, 137, 221, 222, 223, 235, 237, 238, 241, 242, 243, 253, 275, 284, 285, 312, 313, 322, 323], "follow": [1, 4, 28, 29, 33, 40, 42, 58, 64, 66, 119, 136, 137, 140, 141, 142, 144, 153, 241, 245, 246, 265, 268, 275, 305, 306, 312, 313, 346, 351, 352, 353], "5sec": 1, "total": [1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 113, 136, 137, 145, 149, 150, 275, 294, 295, 344], "script": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 58], "minut": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51], "437": [1, 8], "second": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 64, 113, 117, 118, 119, 131, 144, 178, 235, 236, 238, 241, 243, 244, 279, 312], "jupyt": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 43, 46, 47, 50, 51, 299, 300, 302, 346], "notebook": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 290, 299, 300, 302, 346], "plot_sp_atar_algorithm_tun": [1, 8, 344], "ipynb": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51], "python": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 58, 66, 74, 75, 79, 80, 83, 269, 270, 271, 312, 346, 351, 352, 353], "sourc": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 58, 66, 75, 93, 156, 157, 169, 224, 344, 348], "py": [1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 159, 167, 313, 344], "relat": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 135, 352], "releas": [7, 11, 12, 14, 28, 34, 37, 38, 39, 40, 41, 55, 56, 57, 59, 79, 80, 81, 82, 83, 99, 100, 102, 103, 115, 117, 146, 149, 151, 152, 153, 174, 175, 177, 304, 343, 344, 351, 352, 353], "highlight": [7, 11, 12, 14, 28, 34, 37, 38, 39, 40, 41, 57, 59, 81, 82, 99, 100, 102, 103, 115, 117, 146, 149, 151, 152, 153, 174, 175, 177, 304, 344], "6": [3, 4, 5, 9, 11, 12, 13, 14, 16, 17, 20, 21, 22, 23, 25, 28, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 46, 55, 60, 61, 62, 70, 75, 80, 81, 82, 83, 88, 90, 95, 105, 108, 110, 115, 117, 119, 127, 137, 140, 141, 142, 143, 144, 159, 170, 175, 180, 187, 203, 207, 216, 234, 235, 239, 241, 242, 249, 252, 255, 256, 269, 270, 272, 275, 279, 280, 286, 292, 293, 301, 305, 306, 312, 319, 327, 344, 348, 349], "galleri": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 61, 344], "sphinx": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 50, 51, 61], "fastica": [2, 75, 144], "picard": [2, 5, 58, 75, 144], "16": [2, 3, 4, 5, 7, 8, 16, 22, 23, 25, 28, 29, 32, 37, 38, 55, 117, 118, 119, 238, 239, 241, 247, 249, 254, 301, 312, 351, 352, 353], "sec": [2, 3, 4, 5, 7], "smapl": [2, 3, 4, 5, 7, 101, 178, 252, 253, 256, 274, 312], "iir": [2, 3, 4, 5, 7, 176, 177, 178, 184, 338, 348], "5hz": [2, 3, 4, 5, 7, 119], "5": [2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 28, 32, 33, 37, 38, 39, 40, 41, 42, 50, 51, 55, 60, 61, 62, 71, 73, 76, 77, 80, 83, 84, 85, 88, 91, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 120, 125, 129, 131, 133, 134, 135, 137, 138, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 178, 180, 182, 183, 184, 185, 186, 187, 198, 199, 203, 208, 209, 216, 221, 222, 223, 225, 226, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 248, 249, 250, 251, 252, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 274, 276, 278, 284, 285, 287, 288, 290, 292, 293, 296, 297, 301, 304, 305, 306, 307, 308, 312, 313, 319, 322, 323, 327, 329, 331, 348, 349], "icap": [2, 75], "str": [2, 20, 75, 92, 99, 100, 108, 110, 113, 123, 125, 126, 127, 131, 135, 138, 139, 140, 141, 142, 146, 151, 152, 153, 156, 158, 159, 166, 167, 175, 178, 222, 223, 224, 227, 228, 229, 231, 232, 235, 236, 238, 240, 244, 245, 246, 247, 248, 252, 253, 254, 255, 256, 257, 268, 272, 284, 285, 286, 287, 288, 289, 290, 291, 292, 298, 299, 301, 303, 305, 306], "rang": [2, 6, 12, 14, 16, 20, 25, 28, 29, 51, 73, 75, 76, 77, 83, 95, 104, 105, 106, 107, 108, 109, 110, 111, 140, 141, 142, 143, 156, 172, 198, 199, 203, 221, 222, 223, 228, 235, 236, 238, 241, 242, 245, 246, 247, 268, 270, 275, 284, 285, 287, 298, 299, 312, 313, 322, 331], "myica": [2, 75], "n_compon": [2, 75, 78], "fit": [2, 19, 20, 21, 22, 23, 24, 25, 75, 78, 177, 182, 252, 253, 254, 255, 256, 352], "s1": [2, 75], "transform": [2, 9, 32, 33, 36, 44, 75, 78, 79, 108, 133, 134, 135, 140, 141, 142, 173, 185, 225, 226, 264, 271, 276, 279, 280, 292, 293, 304, 305, 306, 318, 337, 339, 344, 348, 351, 352, 353], "s2": [2, 75], "s3": [2, 75], "s4": [2, 75], "321": [2, 3, 4, 5, 75], "322": [2, 5, 75], "700": [2, 29, 75, 85, 238, 240], "323": [2, 5, 28, 29, 40, 75], "324": [2, 5, 40, 75], "325": [2, 5, 75], "tight_layout": [2, 3, 4, 12, 14, 15, 16, 19, 24, 25, 29, 33, 39, 40, 41, 42, 43, 46, 73, 75, 76, 80, 83, 85, 91, 96, 97, 98, 99, 100, 104, 105, 106, 107, 109, 111, 113, 139, 140, 141, 142, 143, 144, 150, 153, 170, 173, 175, 177, 180, 182, 183, 184, 185, 186, 187, 225, 226, 234, 244, 254, 255, 264, 265, 268, 269, 270, 275, 276, 279, 280, 292, 293, 295, 307, 308, 313, 331], "": [2, 3, 11, 12, 14, 28, 29, 40, 41, 42, 43, 50, 70, 71, 73, 74, 75, 76, 79, 80, 83, 84, 85, 93, 95, 96, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 126, 127, 128, 130, 131, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 170, 172, 173, 177, 178, 180, 181, 182, 183, 185, 186, 187, 198, 199, 203, 215, 220, 221, 222, 223, 225, 226, 232, 234, 235, 236, 238, 240, 241, 246, 264, 265, 268, 269, 270, 271, 274, 275, 278, 279, 280, 281, 284, 285, 286, 290, 292, 293, 305, 306, 307, 308, 313, 319, 327, 331, 352], "A": [2, 4, 32, 33, 35, 51, 64, 70, 73, 74, 75, 76, 79, 99, 100, 108, 110, 113, 121, 135, 136, 137, 144, 153, 175, 178, 222, 223, 238, 245, 246, 252, 253, 254, 256, 268, 271, 284, 285, 288, 312, 313, 322, 323, 346], "cdot": [2, 3, 64, 105, 109, 140, 141, 142, 155, 287, 304, 319, 348], "mu": [2, 25, 76, 136, 137, 255, 268, 331], "w": [2, 3, 29, 64, 75, 78, 96, 106, 107, 109, 111, 135, 140, 141, 142, 206, 238, 250, 251, 254, 265, 305, 306, 319, 352], "befor": [2, 20, 42, 75, 138, 139, 140, 141, 142, 156, 158, 159, 166, 167, 221, 235, 236, 238, 241, 242, 254, 257, 268, 331], "pca": [2, 75, 196, 351, 353], "pca_mean_": [2, 75], "get_smatrix": [2, 75], "get_tmatrix": [2, 75], "dot": [2, 78, 84, 146, 288], "x1": [2, 14, 16, 20, 38, 41, 47, 71, 80, 83, 85, 93, 102, 121, 123, 125, 126, 130, 131, 136, 137, 157, 160, 162, 163, 164, 165, 168, 169, 170, 171, 178, 210, 224, 225, 226, 258, 259, 260, 269, 270, 288, 290, 291, 294, 296, 297, 312, 313], "400": 2, "ex": 2, "sum": [2, 6, 7, 12, 13, 33, 38, 39, 47, 80, 83, 143, 145, 146, 149, 150, 156, 159, 166, 167, 184, 269, 270, 294, 312, 313], "4": [2, 4, 6, 7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 32, 33, 37, 38, 39, 47, 55, 60, 61, 62, 75, 83, 85, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 120, 125, 127, 129, 135, 136, 137, 138, 139, 143, 145, 146, 148, 149, 150, 156, 158, 159, 164, 165, 167, 170, 172, 174, 175, 178, 180, 181, 185, 198, 199, 220, 221, 222, 223, 225, 226, 235, 236, 237, 239, 241, 242, 244, 246, 247, 249, 252, 254, 256, 260, 261, 262, 263, 270, 272, 274, 275, 276, 279, 284, 285, 287, 288, 290, 291, 292, 297, 301, 303, 313, 319, 327, 329, 348, 349], "785559448716725e": 2, "11": [2, 4, 5, 16, 21, 22, 23, 28, 32, 37, 38, 39, 47, 62, 64, 71, 75, 82, 97, 98, 102, 103, 144, 170, 180, 181, 220, 221, 235, 236, 238, 239, 244, 249, 254, 268, 275, 286, 290, 295, 301, 305, 306, 312, 313, 331, 348], "449304058803827e": 2, "705": [2, 3, 4, 5, 8, 38, 44], "plot_sp_ica_eeg_exampl": [2, 8, 344], "decis": [2, 9, 15, 16, 18, 24, 25, 26, 28, 41, 47, 51, 113, 252, 253, 254, 256, 314, 344, 348, 351, 352, 353], "tree": [2, 9, 15, 16, 18, 24, 25, 26, 28, 41, 47, 51, 113, 252, 253, 256, 303, 314, 344, 348, 351, 352, 353], "visualis": [2, 9, 13, 18, 19, 21, 22, 26, 43, 46, 232, 248, 252, 254, 255, 341, 344], "while": [2, 9, 15, 18, 19, 21, 22, 24, 25, 26, 99, 100, 108, 110, 156, 181, 186, 222, 223, 228, 238, 244, 252, 254, 255, 256, 268, 284, 285, 293, 312, 313, 323, 327, 344], "buid": [2, 9, 18, 19, 21, 22, 24, 25, 26, 252, 344], "dispers": [1, 2, 6, 9, 10, 17, 29, 51, 136, 137, 156, 157, 164, 168, 169, 170, 171, 178, 238, 241, 301, 309, 344, 348, 351, 352, 353], "entropi": [1, 2, 4, 6, 9, 10, 17, 20, 29, 38, 42, 47, 51, 93, 136, 137, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 178, 224, 257, 258, 259, 260, 266, 273, 286, 296, 297, 299, 301, 309, 344, 348, 351, 352, 353], "top": [2, 6, 9, 10, 11, 17, 20, 29, 32, 37, 38, 39, 51, 80, 83, 92, 136, 178, 181, 186, 269, 270, 312, 344], "pattern": [2, 6, 9, 10, 11, 17, 29, 39, 51, 80, 83, 135, 136, 137, 157, 168, 169, 178, 269, 270, 312, 313, 322, 344], "appli": [3, 4, 51, 64, 73, 75, 76, 78, 83, 97, 140, 141, 142, 143, 144, 155, 175, 184, 235, 238, 242, 246, 265, 268, 270, 275, 290, 292, 304, 305, 306, 322], "short": [3, 51, 64, 133, 134, 140, 141, 142, 252, 256, 276, 279, 280, 283, 292, 293, 318, 322, 337, 346, 348], "window": [3, 40, 42, 43, 56, 58, 64, 88, 89, 94, 102, 103, 133, 134, 138, 139, 140, 141, 142, 143, 144, 150, 172, 177, 182, 184, 186, 187, 220, 221, 235, 236, 238, 242, 263, 276, 279, 280, 281, 292, 293, 295, 305, 306, 308, 320, 335, 336, 343], "smaller": [3, 21, 22, 23, 51, 64, 73, 75, 76, 102, 103, 140, 141, 142, 177, 182, 238, 241, 305, 306, 322, 331], "overlap": [3, 7, 40, 42, 43, 64, 88, 89, 139, 140, 141, 142, 143, 150, 172, 276, 279, 280, 288, 292, 293, 295, 306, 308, 335, 336], "after": [3, 21, 22, 23, 28, 64, 75, 140, 141, 142, 175, 220, 221, 235, 236, 237, 238, 241, 242, 252, 253, 254, 256, 287], "check": [3, 32, 33, 57, 58, 64, 66, 135, 140, 141, 142, 144, 146, 149, 150, 156, 158, 159, 166, 167, 176, 220, 221, 233, 235, 236, 238, 244, 252, 255, 256, 257, 265, 290, 306, 312, 313, 322, 323, 348], "_": [3, 6, 11, 12, 16, 29, 73, 75, 76, 95, 141, 143, 150, 198, 199, 222, 234, 235, 236, 237, 240, 241, 242, 244, 248, 262, 268, 284, 287, 312, 313, 331, 352], "soft": [3, 5, 64, 119, 140, 141, 142], "threshold": [3, 4, 5, 19, 38, 64, 80, 83, 90, 96, 119, 140, 141, 142, 144, 172, 238, 240, 241, 243, 252, 253, 261, 269, 270, 276, 279, 287, 290, 291, 304, 305, 306, 322], "lambda_": [3, 64, 140, 141, 142], "quad": [3, 64, 107, 111, 140, 141, 142, 275, 319], "text": [3, 7, 33, 39, 64, 80, 83, 85, 94, 107, 111, 140, 141, 142, 145, 149, 151, 152, 153, 254, 269, 270, 275, 300, 302, 319, 342], "theta_": [3, 64, 140, 141, 142], "gamma": [3, 64, 107, 140, 141, 142, 143, 150, 319], "alpha": [3, 6, 7, 14, 15, 20, 24, 33, 40, 41, 42, 46, 47, 64, 85, 99, 105, 135, 138, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 156, 170, 173, 176, 184, 185, 225, 226, 254, 261, 262, 268, 272, 276, 278, 287, 290, 291, 319, 323, 330, 331, 348], "frac": [3, 25, 64, 73, 76, 105, 106, 107, 109, 111, 140, 141, 142, 255, 294, 313, 319, 323, 331], "e": [3, 51, 64, 66, 74, 79, 104, 105, 106, 107, 108, 109, 110, 111, 132, 138, 139, 140, 141, 142, 143, 145, 146, 151, 152, 153, 156, 158, 166, 167, 168, 171, 220, 227, 228, 235, 236, 238, 244, 247, 257, 271, 272, 279, 290, 291, 305, 312, 313, 319, 322], "otherwis": [3, 64, 140, 141, 142, 169], "le": [3, 64, 140, 141, 142], "lambda_a": [3, 64, 140, 141, 142], "sgn": [3, 64, 140, 141, 142], "big": [3, 64, 140, 141, 142], "beta": [3, 6, 7, 64, 140, 141, 142], "f_": [3, 64, 140, 141, 142], "k_2": [3, 64, 140, 141, 142], "exp": [3, 64, 73, 140, 141, 142, 155, 181, 186, 327, 331], "w_": [3, 64, 140, 141, 142, 304], "max": [3, 6, 7, 14, 15, 20, 39, 64, 73, 75, 76, 80, 83, 87, 136, 137, 140, 141, 142, 156, 166, 221, 222, 223, 238, 241, 243, 244, 248, 252, 253, 269, 270, 284, 285, 286, 289, 294, 305, 306], "ge": [3, 64, 111, 140, 141, 142, 294, 319], "k_1": [3, 64, 140, 141, 142], "g_f": [3, 64, 140, 141, 142], "b_f": [3, 64, 140, 141, 142], "xc1": [3, 140, 141, 142, 144], "ipr": [3, 6, 7, 140, 141, 142, 305, 306], "100": [3, 4, 5, 6, 7, 16, 19, 20, 21, 22, 23, 29, 32, 33, 37, 47, 50, 71, 82, 84, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 121, 123, 125, 126, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 181, 201, 203, 207, 232, 235, 236, 238, 240, 241, 242, 254, 272, 279, 290, 291, 298, 299, 304, 306, 319], "xc2": [3, 140, 141, 142, 144], "xc3": [3, 140, 141, 142, 144], "elim": [3, 5, 6, 7, 51, 140, 141, 142, 305, 306], "2112": [3, 4, 5], "65": [3, 4, 5, 28, 29, 32, 37, 40, 238, 239, 247, 249], "129": [3, 4, 5, 28], "193": [3, 4, 5], "257": [3, 4, 5], "18": [3, 4, 5, 7, 16, 23, 28, 29, 32, 37, 38, 39, 44, 108, 164, 239, 249, 301, 312], "385": [3, 4, 5], "21": [3, 4, 5, 16, 23, 28, 29, 38, 198, 199, 203, 222, 223, 238, 239, 247, 249, 284, 285, 301, 303], "449": [3, 4, 5], "24": [3, 4, 5, 28, 29, 38, 39, 238, 239, 247, 249, 301, 319], "513": [3, 4, 5, 28, 40], "27": [3, 4, 5, 28, 29, 32, 37, 238, 239, 243, 247, 248, 249, 301, 313], "577": [3, 4, 5], "30": [3, 4, 5, 13, 16, 23, 25, 28, 29, 37, 38, 80, 83, 91, 108, 135, 140, 141, 142, 145, 146, 149, 150, 170, 193, 238, 240, 245, 246, 249, 262, 269, 270, 301, 312, 313, 346], "641": [3, 4, 5], "33": [3, 4, 5, 16, 23, 28, 29, 238, 239, 247, 249, 301], "36": [3, 4, 5, 23, 28, 29, 238, 239, 243, 247, 248, 249, 275, 301], "769": [3, 4, 5], "39": [3, 4, 5, 22, 28, 301], "833": [3, 4, 5], "42": [3, 4, 5, 16, 28, 29, 39, 238, 239, 247, 249, 301], "897": [3, 4, 5], "45": [3, 4, 5, 22, 23, 24, 25, 28, 29, 198, 199, 203, 222, 223, 238, 239, 247, 249, 284, 285, 301], "961": [3, 4, 5], "48": [3, 4, 5, 22, 28, 29, 238, 239, 247, 249, 301], "1025": [3, 4, 5, 40], "51": [3, 4, 5, 22, 28, 29, 180, 182, 238, 239, 247, 249, 265, 327], "1089": [3, 4, 5], "54": [3, 4, 5, 28, 29, 238, 239, 247, 249], "1153": [3, 4, 5], "57": [3, 4, 5, 16, 23, 28, 29, 61, 238, 239, 247, 249], "1217": [3, 4, 5], "60": [3, 4, 5, 23, 28, 29, 39, 66, 116, 122, 147, 179, 184, 198, 199, 203, 222, 223, 228, 239, 247, 284, 285], "1281": [3, 4, 5], "63": [3, 4, 5, 23, 28, 29, 74, 79, 238, 239, 247, 249, 271], "1345": [3, 4, 5], "66": [3, 4, 5, 16, 23, 28, 29, 238, 239, 247, 249], "1409": [3, 4, 5], "69": [3, 4, 5, 23, 39], "1473": [3, 4, 5], "72": [3, 4, 5, 28, 29, 238, 239, 247, 249], "1537": [3, 4, 5], "1601": [3, 4, 5], "78": [3, 4, 5, 28, 29, 238, 239, 247, 249], "1665": [3, 4, 5], "81": [3, 4, 5, 23, 51, 322], "1729": [3, 4, 5], "84": [3, 4, 5, 28, 29, 238, 239, 247, 249], "1793": [3, 4, 5], "87": [3, 4, 5, 28, 29, 37, 238, 239, 247, 249], "1857": [3, 4, 5], "90": [3, 4, 5, 14, 16, 23, 32, 37, 140, 141, 142], "1921": [3, 4, 5], "93": [3, 4, 5, 23, 29, 255], "1985": [3, 4, 5], "97": [3, 4, 5], "2049": [3, 4, 5], "2113": [3, 4, 5], "done": [3, 4, 5, 16, 28, 29, 74, 79, 80, 83, 235, 236, 237, 238, 241, 242, 243, 244, 248, 269, 270, 271, 298, 299, 312, 313], "111": 3, "label": [3, 6, 7, 16, 19, 29, 33, 38, 39, 40, 41, 43, 73, 76, 80, 83, 91, 95, 96, 97, 98, 99, 102, 104, 105, 106, 107, 109, 111, 113, 121, 123, 125, 126, 127, 130, 131, 134, 136, 137, 138, 140, 141, 142, 143, 145, 146, 149, 150, 170, 173, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 220, 221, 225, 226, 227, 228, 234, 235, 236, 238, 239, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 263, 264, 268, 269, 270, 275, 277, 278, 279, 280, 288, 304, 306, 313, 319, 331], "raw": [3, 40, 42, 43, 96, 119, 140, 141, 142, 172, 176, 177, 178, 198, 199, 222, 223, 228, 234, 238, 242, 252, 255, 256, 261, 262, 279, 280, 284, 285], "x_": [3, 140, 141, 142, 144, 160, 161, 163, 165, 258, 259, 262, 273, 294, 296, 304, 348], "c1": [3, 73, 76, 96, 127, 138, 140, 141, 142, 144, 261, 262, 264, 275, 288, 301], "c2": [3, 73, 76, 96, 140, 141, 142, 144, 288, 301], "c3": [3, 73, 76, 140, 141, 142, 144, 272, 287, 301], "ylim": [3, 20, 33, 40, 73, 76, 96, 99, 138, 140, 141, 142, 248, 261, 262, 264], "legend": [3, 6, 16, 20, 33, 38, 39, 40, 41, 43, 73, 76, 80, 83, 91, 95, 96, 97, 98, 99, 102, 105, 106, 127, 134, 136, 137, 138, 140, 141, 142, 143, 145, 149, 150, 170, 173, 176, 177, 180, 181, 182, 183, 185, 186, 187, 220, 221, 225, 226, 234, 252, 253, 256, 263, 264, 268, 269, 270, 275, 277, 278, 279, 280, 313, 319, 331], "bbox_to_anchor": [3, 33, 39, 80, 83, 91, 96, 99, 140, 141, 142, 170, 177, 180, 181, 182, 183, 186, 187, 234, 264, 269, 270, 275, 313], "99": [3, 20, 140, 141, 142, 155], "ncol": [3, 6, 38, 140, 141, 142, 143, 150, 170, 313], "fontsiz": [3, 7, 29, 96, 140, 141, 142, 254, 264, 275], "211": [3, 4, 6, 7, 42, 73, 76, 80, 83, 85, 95, 96, 101, 127, 139, 140, 141, 142, 143, 145, 149, 150, 173, 185, 244, 264, 269, 270, 274, 276, 295, 307, 308], "212": [3, 4, 6, 7, 42, 85, 96, 101, 127, 139, 141, 143, 145, 149, 150, 173, 183, 185, 186, 187, 264, 274, 276, 295, 307, 308], "suptitl": [3, 5, 6, 7, 12, 25, 33, 43, 46, 104, 105, 106, 107, 109, 111, 127, 143, 144, 146, 153, 242, 252, 255, 256, 275, 279, 280, 292, 293], "528": [3, 8, 28], "plot_sp_eeg_artifact_removal_atar_algorithm": [3, 8, 344], "wavelet": [3, 11, 12, 15, 52, 57, 59, 88, 89, 90, 104, 105, 106, 107, 108, 109, 110, 111, 118, 140, 141, 142, 178, 304, 305, 306, 307, 308, 338, 344, 348, 351, 352, 353], "criteria": [4, 64, 144, 238, 254], "kurtosi": [4, 64, 144], "mostli": [4, 64, 144, 220, 221, 225, 226, 235, 352], "motion": [4, 64, 144], "kur_thr": [4, 5, 64, 144], "ic": [4, 64, 144], "abov": [4, 33, 51, 64, 77, 135, 140, 141, 142, 144, 238, 240, 241, 244, 275, 287, 322], "As": [4, 64, 66, 144, 221, 238, 241, 245], "higher": [4, 20, 64, 73, 76, 79, 81, 82, 102, 103, 140, 141, 142, 144, 146, 176, 177, 181, 182, 186, 238, 243, 268, 271, 276, 292], "peaki": [4, 64, 144], "correl": [4, 64, 144], "index": [4, 29, 64, 77, 144, 155, 199, 220, 221, 231, 235, 236, 237, 238, 241, 242, 243, 244, 248, 277, 298, 299, 301], "cbi": [4, 64, 144], "ey": [4, 64, 144], "movement": [4, 64, 144], "comparais": [4, 64, 144], "power": [4, 6, 110, 133, 143, 144, 145, 149, 150, 172, 233, 279, 292], "prefront": [4, 64, 144], "electrod": [4, 57, 59, 62, 64, 144, 146, 238, 240, 348], "frontal": [4, 14, 64, 144], "eletrod": [4, 6, 64, 66, 144, 146], "stisfi": [4, 64, 144], "consid": [4, 64, 108, 110, 137, 144, 156, 158, 159, 166, 167, 169, 220, 221, 223, 235, 236, 238, 241, 248, 257, 285, 312, 313, 323], "captur": [4, 51, 64, 96, 144, 177, 182, 276, 322], "blink": [4, 64, 144], "activ": [4, 28, 58, 62, 64, 70, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 144, 220, 221, 235, 236, 238, 240, 241, 242, 245, 248, 275, 348], "af": [4, 64, 144], "first": [4, 11, 12, 19, 23, 25, 42, 57, 64, 99, 100, 144, 155, 156, 228, 238, 244, 255, 275, 287, 312, 313, 323, 351, 352, 353], "layer": [4, 21, 22, 64, 144], "toward": [4, 64, 79, 144, 176, 271], "lobe": [4, 14, 64, 94, 144, 277, 281], "provid": [4, 64, 66, 73, 76, 133, 134, 135, 140, 141, 142, 144, 146, 149, 150, 175, 178, 228, 238, 243, 252, 254, 256, 272, 292, 331], "emotiv": [4, 33, 64, 144, 151, 152, 153], "epoc": [4, 64, 144], "af3": [4, 14, 33, 64, 144, 151, 152, 153, 301], "f7": [4, 14, 33, 64, 144, 151, 152, 153, 301], "f3": [4, 14, 33, 64, 144, 151, 152, 153, 254, 301], "fc5": [4, 14, 33, 64, 144, 151, 152, 153, 301], "t7": [4, 14, 33, 64, 144, 151, 152, 153, 301], "p7": [4, 14, 33, 64, 144, 151, 152, 153], "o1": [4, 14, 33, 64, 144, 151, 152, 153], "o2": [4, 14, 33, 64, 144, 151, 152, 153], "p8": [4, 14, 33, 64, 144, 151, 152, 153], "t8": [4, 14, 33, 64, 144, 151, 152, 153, 301], "fc6": [4, 14, 33, 64, 144, 151, 152, 153, 301], "f4": [4, 14, 33, 64, 144, 151, 152, 153, 301], "f8": [4, 14, 33, 64, 144, 151, 152, 153, 301], "af4": [4, 14, 33, 64, 144, 151, 152, 153, 301], "pre": [4, 64, 144, 146, 220, 235, 236, 290], "fronat": [4, 64, 144], "supli": [4, 64, 144, 149, 150], "af_ch_index": [4, 5, 64, 144], "13": [4, 5, 16, 22, 23, 28, 30, 32, 33, 37, 39, 40, 42, 62, 64, 95, 118, 143, 144, 153, 238, 239, 247, 249, 286, 301, 348], "f_ch_index": [4, 5, 64, 144], "http": [4, 19, 28, 29, 33, 40, 42, 43, 46, 55, 58, 64, 66, 73, 74, 76, 79, 80, 83, 86, 88, 94, 95, 98, 104, 106, 107, 108, 109, 110, 111, 116, 117, 118, 119, 122, 128, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 149, 153, 155, 156, 157, 164, 169, 172, 176, 177, 178, 181, 185, 186, 220, 221, 228, 235, 236, 237, 238, 241, 242, 243, 244, 248, 252, 255, 256, 260, 261, 262, 263, 264, 269, 270, 271, 275, 277, 279, 280, 288, 290, 294, 295, 296, 297, 304, 307, 308, 312, 327, 331, 346, 351, 352, 353], "www": [4, 33, 58, 64, 66, 138, 139, 144, 153, 220, 221, 238, 351, 352, 353], "ncbi": [4, 64, 138, 139, 144, 220, 221], "nlm": [4, 64, 138, 139, 144, 220, 221], "nih": [4, 64, 138, 139, 144, 220, 221], "gov": [4, 64, 138, 139, 144, 220, 221], "pmc": [4, 64, 138, 139, 144, 220, 221], "pmc3812628": [4, 64, 144], "mani": [4, 32, 33, 64, 102, 103, 144, 184, 238, 290, 291, 312], "If": [4, 11, 12, 47, 64, 75, 80, 83, 99, 100, 135, 140, 142, 143, 144, 146, 156, 157, 158, 159, 166, 167, 169, 176, 177, 221, 228, 235, 236, 238, 242, 248, 252, 253, 256, 257, 265, 268, 269, 270, 288], "corr_thr": [4, 5, 64, 144], "80": [4, 16, 20, 23, 28, 33, 39, 64, 85, 144, 153, 177, 180, 182, 261, 262, 290], "elecctrod": [4, 64, 144], "artifactu": [4, 64, 144], "similar": [4, 64, 108, 110, 144, 157, 169, 170, 234, 312, 313, 331], "like": [4, 19, 64, 75, 102, 103, 108, 110, 112, 132, 144, 157, 169, 170, 276, 303, 313], "compar": [4, 5, 11, 12, 15, 16, 64, 112, 136, 137, 144, 156, 173, 225, 308, 313], "ica_filt": [4, 5, 140, 141, 142], "extend": [4, 5, 75, 144, 172, 292], "infomax": [4, 5, 75, 144], "xf1": [4, 6, 180, 182, 327], "xr1": [4, 5], "20": [4, 7, 11, 12, 16, 23, 25, 28, 29, 38, 40, 55, 83, 91, 105, 128, 135, 138, 139, 143, 146, 153, 155, 161, 168, 170, 172, 176, 221, 235, 236, 238, 239, 240, 247, 249, 261, 262, 270, 276, 278, 279, 282, 301, 312, 313, 319, 335, 351, 352, 353], "640": 4, "40": [4, 23, 28, 38, 80, 104, 108, 110, 111, 180, 182, 261, 269, 288, 301, 329], "512": [4, 40, 88, 94, 138, 277, 308], "188": [4, 8, 28], "plot_sp_eeg_artifact_removal_ica": [4, 8, 344], "xr2": 5, "xr3": 5, "xr4": 5, "ica_method": [5, 144], "xr5": 5, "xr6": 5, "sep": [5, 29, 55, 70, 117, 119, 140, 142, 144, 195, 301, 303, 351, 352, 353], "150": [5, 23, 24, 28, 184], "ylabel": [5, 6, 7, 11, 12, 13, 14, 15, 16, 20, 29, 38, 39, 40, 41, 42, 50, 73, 76, 80, 83, 85, 95, 96, 97, 98, 101, 104, 105, 106, 109, 111, 114, 115, 116, 120, 121, 122, 123, 125, 126, 128, 130, 131, 136, 137, 138, 139, 143, 145, 149, 150, 170, 173, 180, 182, 183, 184, 185, 186, 187, 224, 225, 226, 234, 261, 262, 263, 264, 265, 268, 269, 270, 274, 275, 287, 288, 306, 307, 308, 312, 313, 319, 331], "elimin": [5, 64, 119, 140, 141, 142, 305, 306], "linear": [5, 20, 29, 64, 71, 73, 76, 95, 113, 121, 124, 125, 126, 130, 131, 133, 134, 140, 141, 142, 174, 175, 210, 238, 254, 263, 313, 337, 348], "atten": 5, "326": [5, 22, 26, 28], "subplots_adjust": [5, 7, 20, 96, 102, 127, 139, 198, 199, 222, 223, 264, 265, 275, 284, 285], "wspace": [5, 20, 198, 199, 222, 223, 275, 284, 285], "hspace": [5, 7, 20, 96, 102, 127, 139, 198, 199, 222, 223, 264, 265, 275, 284, 285], "201": [5, 8, 28, 29, 238, 276, 277], "plot_sp_eeg_artifact_removal_ica_atar": [5, 8, 344], "mea": [5, 7, 12, 30, 41, 42, 57, 59, 66, 135, 220, 221, 228, 272, 344, 351, 353], "step": [5, 7, 9, 12, 27, 28, 30, 62, 107, 135, 228, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 312, 319, 323, 344, 348, 352], "them": [6, 53, 99, 100, 108, 146, 238, 312], "averag": [6, 28, 38, 62, 80, 83, 92, 145, 149, 150, 175, 222, 223, 234, 235, 236, 238, 241, 242, 243, 263, 269, 270, 272, 284, 285, 331, 348], "delta": [6, 143, 145, 146, 149, 150, 177, 182, 299], "frequenc": [6, 39, 40, 42, 50, 66, 86, 87, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 119, 133, 136, 137, 138, 139, 143, 145, 149, 150, 156, 158, 159, 166, 167, 170, 172, 176, 178, 179, 184, 220, 221, 224, 227, 228, 235, 236, 237, 238, 241, 242, 243, 244, 248, 257, 262, 263, 276, 279, 280, 281, 282, 283, 292, 293, 304, 313, 323, 329], "hz": [6, 7, 40, 42, 43, 66, 87, 138, 139, 143, 146, 150, 172, 238, 261, 262, 263, 279, 280, 292, 293, 319], "non": [6, 12, 46, 73, 76, 93, 95, 157, 169, 177, 178, 181, 182, 186, 312, 313, 327, 337, 348], "stimuli": [6, 237, 238, 243, 244], "ph": 6, "subject": 6, "dirpath": 6, "download_data": 6, "basedir": 6, "overwrit": 6, "fals": [6, 7, 11, 15, 20, 21, 22, 23, 24, 25, 28, 29, 33, 38, 39, 40, 43, 47, 51, 73, 75, 76, 77, 79, 80, 83, 88, 90, 91, 96, 97, 100, 102, 108, 110, 112, 113, 121, 123, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 158, 159, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 192, 197, 198, 199, 203, 216, 217, 219, 221, 222, 223, 224, 227, 228, 235, 236, 237, 238, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 260, 263, 264, 265, 268, 269, 270, 271, 273, 275, 279, 280, 284, 285, 286, 287, 288, 290, 291, 292, 294, 298, 303, 304, 305, 306, 307, 308, 312, 313, 322, 323, 335], "subid": 6, "readfilespath": 6, "subj": 6, "filter_eeg": 6, "order": [6, 58, 85, 102, 103, 117, 129, 140, 141, 142, 143, 145, 149, 150, 151, 152, 153, 156, 160, 161, 163, 165, 168, 171, 177, 178, 179, 181, 182, 184, 186, 199, 220, 221, 222, 223, 235, 236, 249, 258, 259, 260, 284, 285, 296, 297, 303, 329, 338, 342, 348], "est_wmax": [6, 140, 141, 142], "listen": [6, 42], "l": [6, 33, 39, 46, 51, 79, 85, 90, 105, 138, 153, 261, 262, 268, 271, 275, 287, 288, 298, 299, 304, 322, 331], "col": [6, 246], "getlwr": 6, "sem": [6, 46], "arrai": [6, 12, 16, 19, 25, 29, 30, 57, 59, 62, 73, 75, 76, 77, 78, 80, 83, 84, 85, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 198, 220, 221, 222, 223, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 304, 305, 306, 307, 308, 312, 313, 323, 344, 348], "32": [6, 7, 28, 29, 40, 94, 143, 150, 176, 178, 238, 239, 247, 249, 301, 336], "len": [6, 11, 12, 14, 16, 20, 29, 33, 38, 39, 40, 42, 43, 50, 51, 73, 76, 80, 83, 85, 88, 93, 95, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 118, 120, 122, 127, 128, 133, 134, 136, 137, 138, 139, 145, 149, 151, 152, 153, 157, 164, 168, 169, 170, 171, 172, 176, 177, 178, 180, 181, 182, 183, 184, 186, 187, 220, 221, 234, 244, 247, 262, 264, 265, 268, 269, 270, 274, 275, 276, 278, 279, 280, 287, 292, 293, 304, 306, 307, 308, 312, 313, 319, 320, 322, 323, 327, 330, 331, 336], "idx0": 6, "idx1": [6, 287], "e0": 6, "astyp": [6, 12, 40, 42, 46, 99, 135, 175, 232, 272], "e1": [6, 168, 313], "segmnt": 6, "144": [6, 84, 103], "write": [6, 28, 29, 40, 42, 43, 172, 228, 232, 235, 236, 237, 238, 241, 242, 243, 244, 248, 261, 262, 279, 280, 340, 346, 348], "rest": 6, "score": [6, 22], "xf0": 6, "pm": [6, 7, 33, 145, 146, 149, 264], "rhythmic_pow": [6, 7, 33, 145, 146, 150], "fband": [6, 7, 33, 143, 145, 146, 149, 150], "true": [6, 7, 11, 12, 13, 15, 21, 22, 23, 24, 28, 29, 33, 38, 39, 40, 42, 43, 46, 47, 50, 51, 58, 71, 73, 76, 77, 78, 80, 83, 84, 88, 89, 90, 91, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 121, 123, 125, 126, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 194, 195, 196, 197, 198, 199, 205, 212, 216, 217, 222, 223, 224, 235, 236, 237, 238, 240, 241, 242, 243, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 279, 280, 284, 285, 287, 288, 289, 290, 291, 292, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 312, 313, 318, 319, 322], "sd": [6, 7, 16, 33, 77, 145, 146, 149, 150, 238, 241, 252, 253, 256, 286, 287, 289, 305, 306, 313, 322], "append": [6, 16, 29, 246, 312, 313], "m1": [6, 268, 331], "m2": [6, 268, 331], "fig": [6, 7, 12, 25, 29, 33, 38, 43, 135, 146, 172, 198, 199, 203, 222, 223, 235, 252, 253, 254, 255, 256, 279, 280, 284, 285, 288, 292, 293], "ax": [6, 7, 20, 24, 29, 33, 38, 46, 135, 146, 147, 154, 198, 199, 203, 222, 223, 235, 240, 245, 246, 249, 252, 253, 254, 256, 284, 285, 288], "stat": [6, 46, 47, 219, 351, 353], "plot_groups_box": [6, 46, 341], "ylab": [6, 46, 288], "strip_kw": [6, 46, 288], "dict": [6, 29, 46, 75, 135, 136, 146, 149, 150, 184, 197, 198, 199, 227, 238, 240, 252, 253, 255, 256, 288, 303], "color": [6, 7, 29, 33, 43, 46, 73, 76, 85, 96, 99, 105, 127, 135, 138, 146, 147, 153, 220, 221, 238, 248, 261, 262, 264, 275, 279, 280, 287, 288, 298, 299, 300, 302, 342], "semat": 6, "set_ylim": [6, 43, 46, 198, 199, 203, 222, 223, 279, 280, 284, 285], "acit": 6, "bar": [6, 13, 14, 23, 145, 149, 298, 299, 342], "yerr": 6, "std": [6, 16, 157, 169, 222, 223, 254, 284, 285, 313], "sqrt": [6, 51, 91, 93, 105, 111, 268, 305, 306, 319, 322], "77": [6, 28, 29, 238, 239, 247, 249], "xtick": [6, 12, 14, 20, 21, 22, 29, 85, 96, 143, 145, 149, 184, 244, 264, 275, 312], "loc": [6, 28, 29, 41, 66, 97, 98, 102, 127, 136, 137, 170, 173, 185, 220, 221, 225, 226, 235, 236, 237, 238, 241, 242, 244, 313], "44": [6, 8, 22, 28, 29, 238, 239, 247, 249, 301], "814": [6, 8], "plot_sp_eeg_rhythmic_featur": [6, 8, 344], "attent": [6, 7, 9, 24, 29, 37, 39, 43, 45, 47, 48, 288, 344], "group": [6, 7, 9, 16, 20, 24, 29, 37, 39, 43, 45, 48, 288, 290, 291, 340, 344, 348], "approxim": [6, 9, 10, 13, 17, 20, 47, 75, 136, 137, 156, 157, 164, 168, 169, 170, 171, 299, 344, 348], "comparison": [6, 9, 10, 13, 17, 20, 47, 145, 149, 157, 169, 299, 313, 344], "log10": [7, 33, 50, 138, 143, 146, 150, 261, 262], "pmt": [7, 150], "rhythmic_powers_win": [7, 143, 149, 351, 353], "64": [7, 23, 25, 28, 29, 37, 88, 89, 143, 146, 147, 154, 238, 239, 247, 249, 277, 306], "z1": [7, 165, 260, 297], "im1": [7, 33, 146], "shownam": [7, 146, 147, 154], "return_im": [7, 33, 146], "z2": 7, "im2": [7, 33, 146], "set_titl": [7, 29, 33, 146, 198, 199, 203, 222, 223, 235, 284, 285], "colorbar": [7, 14, 29, 33, 38, 39, 80, 83, 135, 146, 245, 246, 247, 269, 270], "db": [7, 33, 40, 46, 91, 133, 134, 138, 143, 146, 150, 172, 176, 261, 262, 276, 279], "style": [7, 33, 140, 141, 142, 143, 146, 153, 238, 288, 298, 299, 303], "eeglab": [7, 33, 146, 153], "mne": [7, 33, 146, 153], "t1": [7, 184, 221, 234, 235, 236, 238, 244, 248], "t2": [7, 184, 244], "vline": [7, 33, 99, 261, 262], "ymin": [7, 33, 99, 261, 262], "min": [7, 20, 156, 220, 221, 222, 223, 235, 236, 238, 243, 248, 250, 251, 257, 284, 285, 286, 289, 294, 313], "ymax": [7, 33, 99, 261, 262], "k": [7, 12, 20, 29, 33, 40, 42, 43, 51, 77, 85, 88, 93, 105, 135, 146, 147, 153, 199, 222, 238, 250, 251, 261, 262, 275, 279, 280, 284, 287, 288, 304, 305, 306, 307, 308, 312, 322], "ha": [7, 33, 151, 152, 153, 156, 157, 169, 192, 220, 226, 235, 236, 238, 241, 248, 268, 275, 303, 313], "center": [7, 33, 104, 105, 106, 107, 108, 109, 110, 111, 135, 146, 151, 152, 153, 200, 319], "vmin": [7, 29, 135, 146, 147, 154, 240, 245, 246, 247], "vmax": [7, 29, 135, 146, 147, 154, 235, 236, 240, 245, 246, 247], "829": [7, 8], "plot_sp_eeg_topomap": [7, 8, 344], "sinusoid": [7, 9, 13, 15, 16, 20, 24, 28, 32, 33, 36, 40, 41, 44, 46, 50, 71, 113, 121, 123, 125, 126, 131, 170, 279, 280, 282, 283, 292, 313, 318, 319, 336, 337, 344, 348, 351, 352, 353], "synthesi": [7, 9, 13, 15, 16, 24, 28, 32, 33, 36, 41, 44, 46, 50, 133, 134, 185, 226, 276, 279, 280, 292, 293, 318, 337, 344, 348], "702": 8, "execut": [8, 17, 26, 30, 34, 35, 44, 48, 52, 135, 247, 248, 304, 313, 344], "file": [8, 17, 26, 28, 30, 34, 35, 40, 44, 48, 52, 62, 151, 152, 153, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 241, 242, 243, 244, 248, 340, 344, 348], "auto_exampl": [8, 17, 26, 30, 34, 35, 44, 48, 52, 66, 238], "electroencephalogram": [8, 344], "mem": [8, 17, 26, 30, 34, 35, 44, 48, 52, 344], "mb": [8, 17, 26, 30, 34, 35, 44, 48, 52, 344], "00": [8, 17, 25, 26, 28, 30, 34, 35, 44, 48, 52, 344], "09": [8, 23, 25], "04": [8, 16, 23, 25, 26, 28, 29, 34, 216, 313], "minim": [9, 20, 27, 29, 30, 32, 41, 42, 66, 79, 238, 271, 312, 344], "set": [9, 21, 22, 23, 25, 27, 29, 30, 32, 41, 42, 46, 50, 51, 57, 58, 66, 67, 75, 80, 83, 99, 100, 108, 113, 135, 140, 141, 142, 144, 146, 149, 150, 153, 156, 176, 184, 227, 228, 238, 241, 245, 246, 247, 252, 253, 254, 255, 256, 269, 270, 275, 276, 288, 313, 319, 322, 344], "These": [9, 31, 135], "illustr": [9, 31, 244], "about": [9, 10, 18, 36, 45, 49, 290], "embed": [1, 9, 10, 12, 17, 51, 85, 101, 136, 137, 157, 168, 169, 171, 178, 274, 301, 313, 344], "dim": [1, 9, 10, 12, 17, 51, 136, 178, 301, 344], "discreet": [9, 10, 14, 15, 16, 17, 38, 42, 133, 134, 156, 268, 276, 279, 280, 292, 293, 318, 331, 339, 344, 348], "real": [9, 10, 13, 14, 17, 40, 41, 51, 57, 68, 93, 94, 104, 105, 106, 107, 109, 111, 156, 158, 159, 166, 167, 173, 185, 224, 225, 226, 257, 278, 319, 344, 348], "classif": [9, 16, 18, 19, 22, 23, 24, 26, 41, 47, 113, 252, 253, 254, 256, 314, 344, 346, 348], "depth": [9, 16, 18, 19, 21, 22, 23, 26, 41, 47, 113, 197, 252, 253, 256, 344, 351, 352, 353], "boundari": [9, 16, 18, 19, 22, 26, 33, 41, 47, 96, 99, 100, 113, 123, 146, 175, 248, 252, 254, 278, 344], "shrink": [9, 18, 19, 20, 23, 24, 25, 26, 252, 253, 256, 344], "capabl": [9, 18, 19, 20, 23, 24, 25, 26, 252, 256, 344], "regress": [9, 18, 19, 20, 21, 23, 25, 26, 43, 46, 252, 253, 254, 256, 314, 344, 346, 348, 351, 352, 353], "without": [9, 15, 18, 20, 21, 22, 23, 25, 26, 28, 39, 51, 84, 99, 100, 146, 247, 252, 263, 344], "convert": [9, 15, 18, 20, 21, 22, 23, 25, 26, 28, 51, 92, 235, 236, 238, 252, 254, 312, 344], "catogor": [9, 15, 18, 20, 21, 22, 23, 25, 26, 28, 51, 252, 253, 344], "logist": [9, 18, 21, 23, 25, 26, 43, 46, 254, 314, 344, 348, 351, 352, 353], "naiv": [9, 13, 18, 19, 21, 22, 23, 24, 26, 255, 314, 344, 348, 351, 352, 353], "bay": [9, 13, 18, 19, 21, 22, 23, 24, 26, 255, 314, 344, 348, 351, 352, 353], "classifi": [9, 13, 18, 19, 20, 21, 22, 23, 24, 26, 254, 255, 344], "fraction": [9, 29, 32, 33, 36, 44, 133, 134, 173, 185, 225, 226, 238, 241, 276, 279, 280, 292, 293, 318, 337, 344, 348, 351, 352, 353], "fourier": [9, 32, 33, 36, 44, 133, 134, 173, 185, 225, 226, 276, 279, 280, 292, 293, 318, 337, 344, 348, 351, 352, 353], "frft": [9, 32, 33, 36, 44, 133, 134, 173, 225, 226, 276, 279, 280, 292, 293, 330, 344], "ramanujan": [9, 13, 36, 40, 44, 46, 50, 74, 79, 80, 81, 82, 83, 91, 269, 270, 271, 337, 344, 348, 351, 352, 353], "dictionari": [9, 36, 37, 38, 44, 74, 79, 91, 119, 129, 136, 184, 197, 198, 199, 252, 253, 256, 269, 271, 303, 312, 344], "spars": [9, 36, 37, 38, 44, 91, 269, 271, 344], "penalti": [9, 24, 32, 36, 37, 38, 44, 79, 80, 83, 91, 254, 269, 270, 271, 344, 351, 352, 353], "bank": [9, 13, 32, 36, 39, 40, 44, 46, 50, 80, 81, 82, 83, 91, 269, 270, 344, 351, 352, 353], "demo": [9, 32, 36, 38, 39, 44, 46, 50, 344], "audio": [9, 24, 36, 41, 44, 46, 50, 261, 262, 279, 280, 292, 335, 336, 344], "test": [9, 16, 19, 20, 21, 22, 23, 24, 25, 45, 46, 48, 53, 61, 78, 244, 252, 253, 255, 256, 265, 290, 291, 305, 306, 340, 344, 346, 348], "two": [9, 14, 15, 16, 20, 23, 45, 46, 48, 51, 66, 70, 86, 87, 113, 116, 121, 122, 123, 126, 127, 128, 130, 131, 135, 140, 141, 142, 156, 157, 169, 175, 178, 233, 238, 240, 242, 247, 250, 252, 253, 268, 272, 290, 291, 292, 313, 322, 340, 344, 348], "scalogram": [9, 14, 29, 37, 38, 39, 40, 42, 43, 47, 49, 52, 108, 110, 112, 344, 351, 352, 353], "cwt": [9, 14, 29, 37, 38, 39, 40, 42, 43, 47, 49, 52, 88, 304, 308, 319, 344, 351, 352, 353], "auto_examples_python": 9, "zip": [9, 105], "auto_examples_jupyt": 9, "discretis": [11, 12], "extract": [11, 12, 19, 28, 62, 85, 101, 146, 157, 168, 169, 227, 237, 238, 241, 242, 244, 252, 253, 256, 274, 312, 313, 348], "dimens": [11, 12, 78, 85, 101, 136, 137, 157, 164, 168, 169, 171, 190, 273, 274, 313], "ditrubut": [11, 12], "determin": [11, 12, 157, 169, 238, 244, 291, 313], "have": [11, 12, 42, 47, 51, 67, 73, 76, 113, 132, 134, 140, 141, 142, 170, 222, 223, 237, 238, 240, 242, 255, 276, 284, 285, 288, 312, 313, 322, 331, 346, 352], "few": [11, 12, 19, 51, 58, 70, 108, 221, 238, 241, 243, 248, 322], "repetit": [11, 12], "other": [11, 12, 51, 58, 93, 99, 100, 107, 108, 110, 113, 134, 135, 138, 139, 146, 149, 150, 156, 177, 182, 184, 185, 225, 226, 227, 237, 238, 241, 242, 244, 275, 276, 288, 312, 313, 319, 322, 329], "random": [11, 12, 13, 15, 16, 19, 20, 21, 22, 23, 24, 33, 38, 39, 47, 71, 74, 75, 79, 80, 81, 82, 83, 91, 92, 93, 97, 99, 100, 102, 103, 108, 113, 121, 123, 125, 126, 130, 131, 135, 136, 137, 156, 157, 159, 164, 167, 168, 169, 170, 171, 175, 181, 198, 199, 203, 222, 223, 232, 234, 252, 254, 255, 256, 257, 269, 270, 271, 272, 284, 285, 286, 287, 288, 289, 290, 291, 306, 312, 313, 331], "entail": [11, 12, 135, 241], "low": [11, 12, 73, 76, 96, 136, 138, 139, 234, 238, 241, 242, 312, 319, 323], "On": [11, 12], "hand": [11, 12], "lead": [11, 12, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 221, 228, 238, 241, 252, 253, 312, 313], "diment": [11, 12, 79, 160, 161, 162, 163, 165, 192, 198, 199, 258, 259, 260, 271, 296, 297], "disperss": [11, 12], "271749287746759": [11, 312], "load": [11, 12, 23, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128], "bandpass": [11, 12, 178, 312, 319, 338, 348], "de": [11, 12, 99, 100, 132, 136, 137, 348], "prob": [11, 12, 13, 15, 136, 137, 312], "patterns_dict": [11, 12, 136, 137, 312], "dispersion_entropi": [11, 12, 137, 156, 157, 164, 168, 169, 170, 171, 312], "class": [11, 12, 19, 21, 24, 25, 67, 75, 78, 113, 121, 123, 125, 126, 130, 131, 136, 137, 188, 189, 252, 253, 254, 255, 256, 300, 302, 303, 312, 351, 352, 353], "scale": [11, 12, 23, 29, 104, 105, 106, 107, 108, 110, 111, 132, 133, 134, 135, 136, 137, 145, 146, 149, 150, 228, 234, 238, 252, 253, 256, 263, 267, 268, 331, 348], "emb_dim": [11, 12, 101, 136, 137, 160, 161, 162, 163, 164, 165, 258, 259, 260, 273, 274, 296, 297, 312], "delai": [11, 12, 85, 101, 136, 137, 160, 161, 162, 163, 164, 165, 168, 171, 176, 178, 258, 259, 260, 273, 274, 296, 297, 312, 313], "return_al": [11, 12, 47, 136, 137, 217, 228, 290, 291, 312], "stem": [11, 12, 38, 39, 80, 83, 269, 270, 312], "probabl": [11, 12, 15, 25, 113, 136, 137, 156, 158, 159, 166, 167, 224, 252, 253, 254, 255, 256, 257, 312, 313, 319, 351, 352, 353], "4f": [11, 268, 331], "util": [11, 16, 59, 313, 348], "pretty_print": [11, 342], "show_index": [11, 301], "155": [11, 28], "plot_it_dispersion_entropy_eeg_emb2": [11, 17, 344], "xi": [12, 175, 287, 312], "pp": [12, 51, 74, 75, 79, 271, 312, 322], "idx": [12, 73, 76, 77, 83, 85, 155, 181, 252, 255, 256, 270, 287, 312], "argsort": [12, 38, 39, 73, 76, 80, 83, 269, 270, 312], "ptop": [12, 312], "idx2": [12, 287, 312], "ab": [12, 22, 39, 41, 50, 73, 76, 88, 99, 104, 105, 106, 107, 109, 111, 173, 175, 185, 225, 226, 256, 305, 306, 307, 308, 312, 319], "int": [12, 14, 15, 33, 38, 39, 75, 80, 81, 82, 83, 85, 88, 94, 96, 101, 102, 103, 107, 108, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 133, 134, 138, 139, 140, 141, 142, 143, 144, 146, 149, 150, 155, 156, 157, 158, 159, 164, 166, 167, 168, 169, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 199, 203, 220, 221, 224, 227, 228, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 248, 252, 253, 254, 255, 256, 257, 262, 264, 265, 268, 269, 270, 274, 275, 276, 286, 290, 291, 292, 293, 295, 298, 299, 301, 304, 305, 306, 307, 308, 322, 327], "uniqu": [12, 13, 20, 136, 137, 156, 158, 159, 166, 167, 252, 253, 257, 313], "flat": [12, 102, 103, 170, 177, 181, 182, 186], "4497910281190167": 12, "585": 12, "plot_it_dispersion_entropy_top_pattern": [12, 17, 344], "variabl": [13, 93, 175, 313], "seed": [13, 16, 19, 20, 21, 22, 23, 24, 32, 33, 37, 39, 47, 71, 80, 81, 82, 83, 91, 92, 93, 97, 98, 99, 100, 102, 103, 121, 123, 125, 126, 130, 135, 136, 137, 156, 159, 167, 170, 175, 176, 177, 181, 198, 199, 203, 222, 223, 239, 240, 245, 246, 247, 249, 252, 254, 255, 256, 257, 269, 270, 272, 278, 284, 285, 287, 288, 290, 291, 305, 306, 312, 313, 323], "rand": [13, 15, 16, 33, 99, 100, 135, 156, 175, 272, 288, 291, 313], "hx": [13, 168, 171, 313], "is_discret": [13, 156, 158, 159, 166, 167, 257, 313], "x_u": 13, "frq": [13, 138, 263], "return_count": 13, "p": [13, 16, 25, 47, 74, 75, 79, 80, 83, 95, 107, 155, 156, 164, 166, 181, 183, 186, 187, 204, 205, 206, 212, 213, 255, 265, 269, 270, 271, 290, 291, 312, 313, 319, 327, 331], "h": [13, 14, 15, 136, 137, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 170, 257, 259, 260, 273, 296, 297, 312, 348, 352], "bit": [13, 14, 15, 156, 158, 166, 167, 170, 257, 313], "050": 13, "plot_it_entropy_discreet_exampl": [13, 17, 344], "mutual": [14, 158, 159, 166, 167, 257, 258, 259, 273, 348, 351, 352, 353], "inform": [14, 57, 59, 75, 96, 119, 135, 158, 159, 160, 161, 164, 166, 167, 227, 228, 237, 238, 240, 243, 244, 257, 258, 259, 273, 323, 348, 351, 352, 353], "joint": [14, 158, 159, 162, 163, 166, 167, 257, 258, 259, 273, 348, 351, 352, 353], "cross": [14, 33, 58, 93, 158, 159, 166, 167, 241, 257, 348], "kl": [14, 158, 159, 166, 167, 257, 348], "diverg": [14, 167, 348], "among": [14, 252, 253, 256], "select": [14, 28, 51, 62, 87, 107, 113, 136, 172, 235, 236, 238, 241, 242, 252, 253, 279, 322, 329, 348], "occipit": 14, "shannan": [14, 15, 156, 313], "9573307496464665": 14, "697278111823318": 14, "r\u00e9nyi": [14, 15, 156, 348], "375932807816424": 14, "145472461333239": 14, "750169316339896": 14, "2071614333065703": 14, "condit": [14, 66, 99, 100, 158, 159, 160, 161, 162, 163, 165, 166, 167, 257, 260, 273, 296, 297, 348, 351, 352, 353], "4901166785167455": 14, "732514591834208": 14, "kullback": [14, 167, 313], "leibler": [14, 167, 313], "dkl": 14, "7751838421877422": 14, "nc": [14, 151, 152, 153, 192, 255], "bin": [14, 15, 58, 93, 94, 156, 158, 159, 166, 167, 224, 257, 267, 268], "bin_width": [14, 15, 156, 158, 159, 166, 167, 257], "h_x1": [14, 157, 168, 169, 171, 313], "h_x2": [14, 157, 168, 169, 171, 313], "hr_x1": 14, "hr_x2": 14, "h_x12": 14, "entropy_joint": [14, 158, 159, 167, 257, 313, 351, 352, 353], "entropy_cond": [14, 159, 166, 167, 257, 313, 351, 352, 353], "h_x21": 14, "i_x12": 14, "mutual_info": [14, 158, 159, 166, 167, 313, 351, 352, 353], "h_x12_cross": 14, "entropy_cross": [14, 158, 166, 167, 257, 313, 351, 352, 353], "diff": [14, 47, 275], "d_x12": 14, "entropy_kld": [14, 158, 159, 166, 257, 313, 351, 352, 353], "h_x": [14, 15, 156, 158, 159, 164, 167, 273, 313], "mi": 14, "je": 14, "ce": 14, "j": [14, 51, 75, 105, 106, 111, 140, 142, 143, 192, 264, 319, 322], "x2": [14, 16, 20, 47, 73, 76, 80, 83, 93, 102, 121, 123, 125, 126, 130, 131, 157, 168, 169, 170, 171, 178, 210, 224, 269, 270, 288, 290, 291, 294, 313], "mi_d": 14, "diag": 14, "221": [14, 24, 28, 104, 105, 106, 107, 109, 111, 144], "imshow": [14, 25, 29, 38, 39, 40, 42, 43, 50, 80, 83, 84, 103, 143, 146, 269, 270, 279, 280, 292, 293, 307, 308], "origin": [14, 28, 29, 40, 42, 43, 50, 96, 134, 146, 175, 181, 186, 240, 265, 268, 276, 279, 280, 292, 293, 304, 312, 327], "lower": [14, 20, 40, 42, 43, 50, 51, 77, 79, 96, 108, 116, 122, 128, 140, 141, 142, 146, 238, 241, 243, 253, 271, 276, 279, 280, 287, 292, 293, 322], "rotat": [14, 113, 126, 214, 275], "222": [14, 24, 104, 105, 106, 107, 109, 111, 144], "223": [14, 24, 73, 76, 80, 83, 95, 104, 105, 106, 107, 109, 111, 140, 142, 144, 244, 269, 270], "224": [14, 24, 73, 76, 80, 83, 95, 104, 105, 106, 107, 109, 111, 140, 142, 144, 269, 270], "022": 14, "plot_it_entropy_eeg_multi_channel": [14, 17, 344], "estim": [15, 25, 51, 74, 75, 79, 80, 83, 93, 135, 156, 158, 159, 164, 166, 167, 175, 238, 241, 257, 268, 269, 270, 271, 312, 313, 322, 351, 352, 353], "distribut": [15, 25, 47, 58, 73, 76, 95, 113, 126, 136, 137, 143, 164, 170, 255, 268, 312, 313, 319, 331], "do": [15, 19, 47], "lot": 15, "number": [15, 19, 21, 22, 23, 28, 29, 38, 74, 75, 78, 80, 83, 88, 93, 102, 103, 108, 113, 114, 115, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 136, 137, 140, 141, 142, 143, 145, 146, 149, 150, 156, 158, 159, 166, 167, 175, 177, 178, 182, 184, 192, 199, 224, 227, 228, 231, 235, 236, 237, 238, 241, 242, 243, 244, 247, 248, 252, 253, 254, 255, 256, 257, 268, 269, 270, 276, 279, 280, 283, 286, 288, 289, 290, 291, 292, 293, 298, 299, 301, 304, 308, 312, 322], "discreetis": 15, "fairli": 15, "either": [15, 146, 228, 238, 243, 268, 331], "normalis": [15, 99, 100, 132, 143, 156, 165, 168, 170, 171, 294, 313], "enforc": [15, 156, 159, 167, 238, 276], "equal": [15, 19, 47, 75, 113, 146, 220, 221, 235, 236, 237, 265, 268, 304], "both": [15, 135, 158, 159, 166, 167, 170, 175, 235, 238, 257, 313], "458295645225287": [], "y": [15, 19, 20, 21, 22, 23, 24, 25, 33, 38, 39, 40, 71, 73, 76, 80, 83, 91, 94, 95, 97, 98, 99, 100, 113, 121, 123, 125, 126, 130, 131, 134, 146, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 173, 174, 176, 177, 180, 181, 182, 183, 184, 185, 198, 199, 203, 222, 223, 225, 226, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 266, 268, 269, 270, 273, 276, 277, 278, 280, 281, 284, 285, 293, 296, 297, 320, 323, 330, 331, 336, 348], "0568007770298": [], "9997452649778813": [], "8492835159311757": [], "un": [15, 132, 175], "94931580038085": [], "9443311905007485": [], "83432402148744": [], "user": [50, 59, 67], "nikeshbajaj": [40, 46, 50], "cloudstorag": 50, "onedr": 50, "queenmari": 50, "universityoflondon": 50, "github": [19, 28, 29, 40, 42, 43, 46, 50, 55, 86, 116, 117, 118, 119, 122, 128, 164, 172, 228, 235, 236, 237, 238, 241, 242, 243, 244, 248, 252, 255, 256, 261, 262, 279, 280, 312], "git3": 50, "dev": [50, 240], "spkit_dev": 50, "spkit_doc_7": 50, "information_theori": [17, 156, 344], "plot_it_entropy_real_valued_exampl": [15, 17, 344], "61": [16, 28, 29, 32, 37, 238, 239, 247, 249], "deprecationwarn": 50, "function": [50, 53, 58, 66, 70, 73, 76, 95, 104, 105, 106, 107, 108, 109, 110, 111, 112, 134, 138, 139, 140, 141, 142, 175, 178, 181, 186, 220, 221, 222, 223, 227, 228, 235, 236, 238, 243, 244, 252, 253, 254, 256, 263, 268, 275, 277, 284, 285, 287, 305, 313, 327, 331, 341, 348, 351, 352, 353], "histplot": [], "deprec": [50, 145, 151, 152, 153], "futur": [50, 79, 80, 83], "name": [19, 25, 28, 50, 108, 115, 117, 119, 146, 151, 152, 153, 219, 227, 229, 231, 232, 238, 241, 252, 253, 256, 286, 288, 289], "consist": [227, 352], "pleas": [32, 33, 50, 67, 348], "hist_plot": [15, 73, 76, 93, 95], "updat": [50, 58, 67, 79, 80, 83, 145, 252, 253, 254, 256, 348, 351, 352, 353], "improv": [50, 78, 93, 172, 238, 292, 308, 313], "10000": [15, 43, 136, 137, 156, 254, 279, 280, 313], "randn": [15, 16, 24, 38, 39, 47, 80, 83, 92, 93, 99, 108, 135, 156, 157, 164, 168, 169, 170, 171, 175, 198, 199, 203, 222, 223, 232, 234, 254, 257, 269, 270, 272, 284, 285, 286, 287, 288, 289, 290, 291, 306, 312, 313, 331], "h_y": [15, 156, 313], "hn_x": [15, 156, 313], "normal": [15, 47, 75, 80, 83, 93, 133, 136, 137, 156, 164, 165, 168, 170, 171, 254, 269, 270, 273, 290, 312, 313], "hn_y": [15, 156, 313], "hf_x": 15, "hf_y": 15, "hr_x": 15, "hr_y": 15, "norm": [15, 39, 135, 224], "u": [15, 16, 19, 20, 58, 84, 107, 313, 319], "125": [], "emtropi": 16, "23429427895105137": 16, "5921334630488566": 16, "6720444345470105": 16, "23462714901066314": 16, "1931512519485836": 16, "24992380933707": 16, "aproxim": [16, 312, 313, 351, 352, 353], "x3": [16, 80, 83, 102, 178, 269, 270, 288, 291, 313], "approx": [16, 313], "0331743999999958": 16, "011493672547972069": 16, "04396960000000263": 16, "239610381009533e": 16, "05": [16, 20, 23, 25, 26, 38, 44, 47, 78, 99, 100, 132, 151, 175, 272, 275, 286, 290, 291, 313], "19": [16, 25, 28, 29, 55, 60, 61, 239, 249, 301, 351, 352, 353], "23": [16, 23, 26, 28, 29, 38, 61, 238, 239, 243, 247, 248, 249, 301, 312], "28": [16, 22, 28, 29, 32, 37, 38, 39, 238, 239, 241, 243, 247, 248, 249, 301], "38": [16, 28, 29, 38, 39, 238, 239, 247, 249, 301], "47": [16, 28, 29, 85, 143, 145, 149, 150, 238, 239, 247, 249, 301], "52": [16, 22, 28, 29, 32, 37, 238, 239, 247, 249], "71": [16, 28, 29, 32, 37, 39, 238, 239, 247, 249], "76": [16, 23, 28, 29, 238, 239, 247, 249], "17": [16, 23, 28, 29, 32, 37, 38, 61, 143, 168, 238, 239, 247, 249, 301], "95": [16, 216], "1000": [16, 24, 29, 46, 73, 76, 95, 170, 176, 177, 179, 220, 221, 228, 234, 235, 236, 237, 238, 242, 243, 254, 257, 268, 286, 287, 289, 305, 306, 313, 323, 331], "co": [16, 41, 91, 93, 108, 170, 173, 185, 192, 225, 226, 313, 319], "pi": [16, 41, 91, 93, 96, 105, 106, 107, 108, 109, 111, 139, 157, 168, 169, 170, 171, 173, 185, 225, 226, 264, 319, 348], "131": [16, 33, 100, 175], "mathcal": [16, 313], "sin": [16, 43, 108, 113, 131, 139, 157, 168, 169, 171, 279, 280, 313], "132": [16, 33, 100, 175], "133": [16, 21, 22, 33, 100, 175], "hx1_apx": [16, 313], "entropy_approx": [16, 136, 137, 156, 164, 168, 169, 170, 171, 313, 351, 352, 353], "m": [16, 20, 28, 29, 40, 51, 58, 71, 75, 76, 85, 113, 123, 131, 134, 135, 143, 147, 157, 164, 169, 192, 197, 206, 211, 220, 221, 235, 236, 237, 238, 239, 241, 242, 243, 245, 246, 248, 249, 281, 288, 313, 320, 322], "hx2_apx": [16, 313], "hx3_apx": [16, 313], "hx1_sae": [16, 313], "entropy_sampl": [16, 136, 137, 156, 157, 164, 168, 170, 171, 313, 351, 352, 353], "hx2_sae": [16, 313], "hx3_sae": [16, 313], "tt1": [16, 313], "start": [16, 42, 102, 184, 221, 222, 223, 238, 241, 284, 285, 313], "process_tim": [16, 313], "tt2": [16, 313], "apsmen1": [16, 313], "apsmen2": [16, 313], "enumer": [16, 33, 91, 113, 151, 152, 153, 313], "progbar_jl": [16, 342], "x41": [16, 313], "apren": [16, 313], "smen": [16, 313], "x42": [16, 313], "approxen": [16, 157, 313], "samen": 16, "aproxen": 16, "x_1": 16, "px_2": 16, "px_3": 16, "53": [16, 22, 23, 28, 29, 238, 239, 247, 249], "832": 16, "plot_it_sample_approx_entropy_comp": [16, 17, 344], "771": [39, 44], "ml": [19, 20, 21, 22, 23, 24, 25, 68, 346, 348, 351, 353], "forc": [19, 79, 271], "catogoryc": 19, "hot": [19, 254], "vector": [19, 79, 113, 121, 123, 125, 126, 130, 131, 155, 176, 192, 254, 271], "numer": [19, 313], "howev": [19, 33, 51, 67, 132, 135, 136, 137, 153, 156, 157, 169, 175, 220, 221, 222, 223, 235, 236, 241, 284, 285, 312, 313, 322, 323], "should": [19, 29, 51, 58, 77, 99, 100, 104, 105, 108, 110, 133, 140, 141, 142, 146, 172, 175, 176, 177, 178, 180, 181, 182, 183, 184, 235, 236, 237, 238, 240, 241, 242, 247, 248, 255, 272, 279, 288, 292, 322], "Not": [19, 78, 104, 105, 108, 110, 135], "atleast": [19, 135, 237, 238], "simpl": [19, 51, 66, 322], "reason": [19, 58], "work": [19, 58, 79, 93, 176, 238, 244, 271, 272, 323], "handl": [19, 99, 100, 175], "mix": [19, 75], "type": [19, 40, 79, 88, 107, 108, 113, 133, 176, 178, 181, 184, 186, 238, 252, 253, 271, 279, 303, 304, 307, 308, 323], "would": [19, 136, 137, 241, 242], "dataset": [19, 20, 21, 22, 23, 24, 70, 93, 113, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 254], "hurricnam": 19, "vincentarelbundock": 19, "repositori": 19, "onli": [19, 23, 29, 58, 79, 93, 108, 133, 140, 141, 142, 146, 156, 158, 159, 166, 167, 175, 177, 184, 220, 238, 242, 244, 248, 252, 253, 254, 255, 257, 268, 271, 272, 275, 287, 288, 290, 291, 292, 304, 312, 319, 352], "death": 19, "binari": [19, 21, 24, 77, 192, 197, 198, 222, 254, 284], "problem": 19, "shown": [19, 33, 51, 66, 146, 238, 241, 242, 244, 272, 290, 304, 322], "covert": 19, "encod": 19, "perform": [19, 228], "when": [19, 87, 102, 103, 133, 136, 137, 140, 141, 142, 146, 238, 275, 288, 290, 291, 349], "you": [19, 20, 21, 22, 51, 53, 58, 238, 312, 322], "visul": 19, "veri": [19, 21, 22, 51, 58, 75, 93, 99, 100, 136, 137, 140, 141, 142, 155, 157, 168, 169, 171, 221, 235, 237, 238, 241, 253, 275, 312, 313, 322, 323], "rule": [19, 25, 93, 255, 268], "94": [19, 28], "panda": [19, 46, 58, 61, 240, 252, 255, 256, 286, 289], "pd": [19, 33, 46, 145, 146, 149, 238, 252, 255, 256, 286, 289, 290, 291], "just": [19, 20, 21, 22, 23, 24, 241, 254], "ensur": [19, 20, 21, 22, 238, 268, 352], "reproduc": [19, 20, 21, 22, 81, 82, 303], "result": [19, 20, 21, 22, 23, 42, 47, 88, 99, 100, 107, 174, 175, 176, 238, 275, 290, 291, 304, 307, 308, 319, 323, 341, 352], "classificationtre": [19, 20, 21, 23, 253, 254, 255, 256, 351, 352, 353], "d": [19, 20, 46, 51, 71, 93, 107, 113, 126, 190, 192, 193, 198, 199, 205, 216, 222, 223, 242, 246, 253, 272, 275, 284, 285, 290, 319, 322], "read_csv": [19, 46, 252, 255, 256], "io": [19, 28, 29, 40, 42, 43, 46, 55, 58, 66, 116, 117, 118, 119, 122, 128, 164, 172, 235, 236, 237, 238, 241, 242, 243, 244, 248, 252, 255, 256, 261, 262, 279, 280, 312, 340, 348, 349], "rdataset": 19, "csv": [19, 46, 238, 252, 255, 256], "daag": 19, "feature_nam": [19, 20, 21, 22, 23, 25, 252, 253, 256], "affectedst": 19, "lf": 19, "windsmph": 19, "mf": [19, 254], "basedamag": 19, "year": 19, "pressuremb": 19, "st": [19, 303], "split": [19, 23, 252, 253, 255, 256], "choos": [19, 20, 21, 22, 23, 51, 135, 253, 322], "state": [19, 313], "target": [19, 21, 22, 23, 24, 25], "train": [19, 20, 21, 22, 23, 24, 25, 252, 253, 254, 255, 256], "object": [19, 51, 67, 146, 228, 238, 245, 303, 322], "max_depth": [19, 20, 21, 22, 23, 252, 253, 256], "yp": [19, 20, 24, 254, 255], "plottre": [19, 20, 21, 22, 23, 252, 253, 256], "seen": [19, 313], "thu": 19, "greater": [19, 135, 238, 288], "225": [19, 26], "plot_ml_decision_tree_catogorical_featur": [19, 26, 344], "boundri": [20, 275], "With": [20, 24, 28, 113, 126, 272, 322], "toi": 20, "simul": [20, 57, 68, 70, 102, 277, 313, 348], "2d": [20, 33, 68, 78, 80, 83, 88, 99, 100, 101, 103, 113, 115, 117, 121, 123, 125, 126, 130, 131, 132, 135, 138, 139, 143, 146, 149, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 188, 229, 231, 239, 245, 252, 253, 254, 255, 256, 258, 259, 260, 269, 270, 272, 280, 283, 291, 292, 293, 296, 297, 308, 323, 348], "decsison": 20, "allow": [20, 51, 87, 99, 100, 255, 275, 312, 322], "understand": [20, 346], "overfit": [20, 252, 253], "abl": 20, "observ": [20, 238, 323], "creat": [20, 24, 58, 62, 74, 79, 85, 101, 113, 135, 146, 164, 175, 197, 198, 199, 254, 271, 274, 288, 312, 313, 346, 348], "much": [20, 136, 137, 156, 158, 159, 166, 167, 257, 276, 312], "complex": [20, 108, 109, 110, 111, 157, 168, 169, 173, 185, 225, 226, 276, 281, 313, 319, 337, 348, 351, 352, 353], "correctli": [20, 228], "consequ": 20, "fail": [20, 290, 291], "take": [20, 93, 175, 312], "awai": [20, 313], "messag": 20, "care": 20, "hyperparamet": 20, "def": 20, "get2dgrid": 20, "densiti": [20, 29, 110, 135, 145, 149, 150, 156, 254, 263, 312], "mn1": 20, "mn2": 20, "axi": [20, 25, 29, 103, 135, 138, 139, 143, 160, 161, 162, 163, 165, 170, 175, 176, 177, 178, 180, 181, 182, 183, 184, 198, 199, 203, 222, 223, 227, 235, 236, 238, 240, 241, 242, 248, 252, 253, 254, 256, 258, 259, 260, 284, 285, 291, 296, 297], "mx1": [20, 138], "mx2": [20, 138], "linspac": [20, 41, 50, 91, 93, 104, 105, 106, 107, 108, 109, 110, 111, 139, 157, 168, 169, 171, 173, 185, 225, 226, 313, 319], "meshgrid": 20, "xt": [20, 21, 22, 23, 24, 25, 210, 252, 253, 256], "c_": [20, 106, 107, 178, 319], "flatten": 20, "return": [20, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 197, 198, 199, 203, 206, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 351, 352, 353], "plotxi": 20, "clr": 20, "g": [20, 24, 51, 66, 74, 79, 104, 105, 106, 108, 110, 132, 138, 139, 140, 141, 142, 143, 146, 151, 152, 153, 220, 221, 227, 235, 236, 238, 244, 247, 254, 271, 272, 279, 305, 322], "cl": 20, "c": [20, 24, 25, 40, 58, 78, 146, 198, 199, 203, 222, 223, 232, 246, 254, 255, 284, 285, 288], "dtype": [20, 71, 113, 312], "moon": [20, 71, 113, 121, 123, 125, 130, 131], "gaussian": [20, 71, 73, 76, 91, 93, 104, 105, 108, 113, 123, 125, 126, 130, 131, 170, 178, 180, 181, 182, 183, 184, 186, 187, 220, 221, 235, 236, 255, 275, 313, 319, 331, 338, 348], "spiral": [20, 71, 113, 121, 123, 125, 126, 130], "create_dataset": [20, 71, 121, 123, 125, 126, 130, 131], "nois": [20, 38, 39, 46, 51, 80, 81, 82, 83, 91, 113, 123, 125, 126, 130, 131, 170, 220, 221, 235, 236, 238, 241, 269, 270, 313, 322], "mn": 20, "mx": [20, 40, 133, 134, 138, 252, 253, 256, 261, 262, 320], "yt": [20, 21, 22, 23, 24, 25, 252, 253, 256], "acc": [20, 21, 252, 253, 256], "around": [20, 140, 141, 142, 234, 244, 331], "off": [20, 25, 113, 143, 149, 150, 184, 198, 199, 203, 222, 223, 243, 284, 285, 290, 291, 351, 352, 353], "left": [20, 92, 97, 98, 105, 106, 107, 109, 111, 175, 241, 313, 319], "bottom": 20, "right": [20, 21, 22, 38, 41, 102, 105, 106, 107, 109, 111, 136, 137, 170, 173, 185, 225, 226, 241, 275, 313, 319], "03": [20, 23, 25, 33, 44, 52, 55, 153, 244, 351, 352, 353], "ndepth": 20, "showtitl": [20, 252, 253, 256], "shownodevalu": [20, 21, 22, 252, 253, 256], "showthreshold": [20, 21, 22, 252, 253, 256], "195": [20, 26, 28], "plot_ml_decision_tree_classif": [20, 26, 344], "performac": [21, 22], "retrain": [21, 22], "infin": [21, 22, 156], "parform": [21, 22], "accuraci": [21, 22, 23, 24, 25, 53, 252, 253, 254, 255, 256], "mse": [21, 22, 256, 268, 331], "loss": [21, 22, 24, 79, 254, 271], "practic": [21, 22], "valid": [21, 22, 84, 93, 146, 180, 181, 183], "level": [21, 22, 29, 46, 88, 90, 136, 137, 139, 140, 141, 142, 238, 252, 253, 256, 268, 286, 290, 291, 303, 304, 305, 306, 307, 308, 322, 331], "onc": [21, 22, 58, 144, 184, 238], "explicit": [21, 22], "again": [21, 22, 221, 235], "new": [21, 22, 33, 74, 79, 96, 121, 123, 125, 126, 130, 131, 135, 146, 153, 175, 241, 254, 262, 271, 349], "442": [21, 22], "309": [21, 22], "7218045112781954": 21, "logloss": [21, 23], "0000000826903709e": 21, "405687852618023": 21, "measur": [21, 22, 157, 168, 169, 170, 219, 252, 253, 256, 286, 313], "7378640776699029": 21, "7142857142857143": 21, "7831715210355987": 21, "8252427184466019": 21, "6842105263157895": 21, "8543689320388349": 21, "8867313915857605": 21, "706766917293233": 21, "9158576051779935": 21, "7518796992481203": 21, "9385113268608414": 21, "9676375404530745": 21, "9838187702265372": 21, "9935275080906149": 21, "19382486739414417": 21, "3542011731632746": 21, "sklearn": [21, 22, 23, 24, 25, 352], "model_select": [21, 22, 23, 24, 25], "train_test_split": [21, 22, 23, 24, 25], "diabet": [21, 22], "load_diabet": [21, 22], "test_siz": [21, 22, 23, 24, 25], "ytp": [21, 22, 23, 24, 25, 252, 255, 256], "ysp": [21, 22, 23, 24, 25, 252, 255, 256], "ytpr": [21, 23, 24, 25], "predict_proba": [21, 23, 24, 252, 253, 254, 256], "yspr": [21, 23, 24, 25], "gettreedepth": [21, 22, 23, 252, 253, 256], "trloss": [21, 23], "log": [21, 23, 42, 73, 76, 136, 137, 156, 158, 159, 166, 167, 168, 170, 171, 257, 263, 307, 308, 312, 313, 331], "1e": [21, 23, 29, 76, 78, 132, 140, 141, 142, 156, 159, 166, 167, 170, 238, 240, 252, 253, 254, 256, 286, 313], "tsloss": [21, 23], "analys": [21, 22, 66, 108, 110, 138, 139, 238, 242, 253, 266, 293, 304], "learn": [21, 22, 57, 58, 59, 252, 253, 254, 256, 348], "lcurv": [21, 22, 252, 253, 256], "getlcurv": [21, 22, 252, 253, 256], "plotlcurv": [21, 22, 252, 253, 256], "updatetre": [21, 22, 252, 253, 256], "plot_ml_decision_tree_shrinking_capability_cl": [21, 26, 344], "0134843581445523": 22, "5031": 22, "063909774436": 22, "mae": [22, 256], "13052858683926644": 22, "34586466165413": 22, "9808084354697": 22, "17085185630181": 22, "46": [22, 23, 28, 29, 39, 238, 239, 247, 249, 301], "86851907385888": 22, "98487507378485": 22, "43": [22, 23, 28, 29, 238, 239, 247, 249, 301], "141568996938794": 22, "35190431482284": 22, "356810992674724": 22, "8823993621665": 22, "35": [22, 23, 28, 29, 164, 216, 238, 239, 247, 249, 301, 312, 344], "00590288867435": 22, "97168350523505": 22, "592558822370357": 22, "15153853969643": 22, "22": [22, 28, 29, 38, 50, 238, 239, 247, 249, 301, 313, 351, 352, 353], "47797628054624": 22, "49": [22, 28, 301], "607500193059686": 22, "2127465465558": 22, "68983123613818": 22, "612649612164175": 22, "82985738154911": 22, "7302203729388195": 22, "60221983530255": 22, "6400749196865703": 22, "43969676939602": 22, "3022653721682846": 22, "42468671679198": 22, "7022191400832177": 22, "07196562835661": 22, "3797195253505933": 22, "54636591478696": 22, "3380": 22, "8011201388626": 22, "3333": 22, "5221115404897": 22, "regressiontre": [22, 23, 252, 253, 254, 255, 351, 352, 353], "shrine": 22, "plot_ml_decision_tree_shrinking_capability_reg": [22, 26, 344], "build": [23, 61, 252, 253, 256], "cover": [23, 146, 238, 327], "iri": [23, 24, 346], "breast": [23, 346], "cancer": [23, 346], "boston": [23, 346], "hous": [23, 346], "price": [23, 346], "makesur": 23, "own": [23, 238], "splite": 23, "load_iri": [23, 24, 25], "option": [23, 25, 33, 51, 62, 99, 100, 135, 136, 137, 322, 348], "displai": [23, 40, 42, 112, 135, 146, 147, 224, 228, 242, 245, 246, 247, 248, 272, 290, 291, 298, 299, 301], "silenc": [23, 139], "progress": [23, 252, 253, 256, 298, 299], "info": [23, 119, 227, 228], "branch": [23, 252, 256], "diffbranchcolor": [23, 252, 253, 256], "105": [23, 24, 25, 28, 241], "subtre": 23, "buit": 23, "1_sepal": 23, "length": [23, 51, 82, 97, 102, 103, 108, 110, 112, 134, 136, 137, 138, 139, 172, 175, 177, 180, 181, 182, 184, 187, 220, 221, 235, 236, 238, 242, 247, 248, 276, 278, 279, 288, 292, 293, 294, 298, 299, 304, 322], "cm": [23, 29, 238, 240], "gain": [23, 252, 253], "thr": [23, 28, 29, 38, 40, 42, 43, 83, 96, 172, 243, 261, 262, 270, 276, 279, 280, 335], "_depth": 23, "06": [23, 25, 28, 30], "34": [23, 28, 29, 32, 37, 38, 238, 239, 241, 243, 247, 248, 249, 301], "3_petal": 23, "leaf": [23, 252, 253, 256], "node": [23, 197, 198, 199, 222, 223, 232, 238, 240, 252, 253, 256, 284, 285], "08": [23, 26, 28, 29], "26": [23, 28, 29, 32, 37, 38, 55, 238, 239, 247, 249, 301, 351, 352, 353], "56": [23, 28, 29, 238, 239, 247, 249], "4_petal": 23, "width": [23, 93, 103, 135, 156, 158, 159, 166, 167, 180, 181, 186, 187, 238, 241, 257, 267, 268, 272, 288, 290], "2_sepal": 23, "07": [23, 252, 253, 256, 346], "31": [23, 28, 29, 102, 103, 129, 180, 182, 199, 220, 221, 222, 238, 239, 243, 247, 248, 249, 268, 284, 301, 327, 331], "tt": 23, "ttt": [23, 305, 306], "tttf": 23, "tttft": 23, "tttff": 23, "ttf": 23, "ttft": 23, "ttff": 23, "tf": 23, "9111111111111111": 23, "473392013068288": 23, "350567286593632": 23, "9904761904761905": 23, "8666666666666667": 23, "5937142862825335": 23, "6081773385894438": 23, "load_breast_canc": [23, 25], "To": [23, 51, 53, 75, 99, 100, 113, 135, 136, 137, 140, 141, 142, 149, 150, 175, 180, 227, 228, 235, 238, 242, 248, 290, 312, 313, 319, 322, 323], "randombranch": [23, 252, 256], "randomli": 23, "selevt": 23, "inlin": 23, "569": 23, "398": [23, 25], "171": [23, 25], "73": [23, 28, 29, 39, 238, 239, 247, 249], "83": [23, 28, 29, 238, 239, 247, 249], "86": [23, 28, 29, 238, 239, 247, 249], "96": [23, 24, 28, 29, 254], "9298245614035088": 23, "000000082690371e": 23, "6158491879730155": 23, "993": [23, 26], "plot_ml_decision_tree_visualis": [23, 26, 344], "visualas": 24, "logisticregress": [24, 252, 255, 256], "randint": [24, 99, 175, 254], "sort": [24, 29, 46, 168, 222, 223, 254, 284, 285, 313], "littl": [24, 33, 238, 250, 254], "max_itr": [24, 102, 103, 254], "ypr": [24, 254, 255], "ax1": [24, 43, 46, 172, 254, 279, 280, 292, 293], "plot_lcurv": [24, 254], "ax2": [24, 43, 46, 172, 254, 279, 280, 292, 293], "plot_boundri": [24, 254], "ax3": [24, 43, 46, 254, 279, 280, 293], "plot_weight": [24, 254], "ax4": [24, 254], "plot_weights2": [24, 254], "07046678918014998": [24, 254], "multiclass": [24, 254], "polynomi": [24, 102, 103, 129, 177, 182, 184, 220, 221, 235, 236, 254], "polyfit": [24, 254], "degre": [24, 189, 254, 313], "lambd": [24, 39, 79, 254, 271], "featurenorm": [24, 254], "onehot": [24, 254], "l2": [24, 32, 37, 39, 79, 254, 271], "tol": [24, 78, 254], "rho": [24, 254], "fit_intercept": [24, 254], "89": [24, 32, 37], "07928431824494166": 24, "9714285714285714": 24, "9777777777777777": 24, "04372580813833042": 24, "03776786129832711": 24, "124": [24, 26], "plot_ml_logistic_regression_exampl": [24, 26, 344], "posterior": [25, 255], "being": [25, 237, 255], "y_c": [25, 255], "demonstr": [25, 28, 29, 40], "naivebay": [25, 252, 254, 256], "predict_prob": [25, 255], "sigma": [25, 51, 71, 84, 106, 108, 110, 113, 121, 171, 180, 187, 255, 319, 322, 327, 348], "visual": [25, 255], "set_class_label": [25, 255], "target_nam": 25, "set_feature_nam": [25, 255], "vizpx": [25, 255], "9619047619047619": 25, "9333333333333333": 25, "40553556e": 25, "17910306e": 25, "99882089e": 25, "99999989e": 25, "43110935e": 25, "43110703e": 25, "97428571": 25, "46285714": 25, "25142857": 25, "sig": [25, 106, 108, 110, 305, 306], "10076735": 25, "08914286": 25, "02576327": 25, "01164082": 25, "prior": [25, 58, 255], "3333333333333333": 25, "91515152": 25, "77272727": 25, "26969697": 25, "32727273": 25, "27522498": 25, "08380165": 25, "16514233": 25, "03349862": 25, "3142857142857143": 25, "55405405": 25, "95135135": 25, "54594595": 25, "00810811": 25, "43978086": 25, "07817385": 25, "31707816": 25, "07209642": 25, "3523809523809524": 25, "nfeatur": [25, 255], "next": [25, 140, 141, 142, 174, 175, 221, 282], "9321608040201005": 25, "9415204678362573": 25, "70467143e": 25, "15247857e": 25, "12635429e": 25, "31802143e": 25, "03847500e": 25, "46936357e": 25, "58429357e": 25, "64501429e": 25, "95218571e": 25, "35545000e": 25, "87085714e": 25, "20458429e": 25, "16767143e": 25, "83693571e": 25, "62769286e": 25, "34023214e": 25, "12837857e": 25, "48983929e": 25, "05943500e": 25, "20243571e": 25, "06528571e": 25, "93108571e": 25, "38365786e": 25, "35655286e": 25, "46919214e": 25, "90022929e": 25, "54795571e": 25, "82548643e": 25, "31425714e": 25, "40867857e": 25, "76761349e": 25, "62777392e": 25, "57830703e": 25, "23242710e": 25, "79038660e": 25, "23655220e": 25, "77591931e": 25, "17075703e": 25, "54116184e": 25, "22985933e": 25, "97596042e": 25, "43670494e": 25, "40617123e": 25, "14229457e": 25, "36246133e": 25, "91651263e": 25, "46363544e": 25, "49955426e": 25, "09162800e": 25, "52310239e": 25, "75820447e": 25, "13523207e": 25, "43107083e": 25, "26871981e": 25, "24808469e": 25, "41448475e": 25, "61006737e": 25, "31270669e": 25, "43498830e": 25, "48420363e": 25, "35175879396984927": 25, "load_digit": 25, "avoid": [25, 76, 88, 99, 100, 138, 139, 169, 221, 237, 238, 240, 241, 275, 288, 290, 308, 312, 313], "varianc": [25, 47, 51, 75, 125, 238, 241, 290, 322], "contant": [25, 119, 312], "var": [25, 71, 125], "reshap": [25, 110], "cmap": [25, 29, 38, 39, 40, 42, 43, 50, 80, 83, 135, 143, 146, 198, 199, 203, 222, 223, 240, 245, 246, 247, 269, 270, 279, 280, 284, 285, 292, 293, 307, 308], "grai": 25, "1257": 25, "540": 25, "7955449482895783": 25, "20647505e": 25, "40255105e": 25, "70948008e": 25, "20647506e": 25, "00000000e": 25, "422": [25, 26], "plot_ml_naive_bayes_exampl": [25, 26, 344], "407": [26, 29], "machine_learn": [26, 344], "record": [28, 29, 62, 114, 116, 117, 118, 119, 122, 128, 228, 237, 238, 243, 244, 323, 348], "signl": 28, "line": [28, 33, 46, 113, 123, 130, 146, 155, 176, 248, 288], "includ": [28, 58, 70, 75, 77, 135, 184, 229, 238, 240, 252, 253, 256, 272, 275, 287, 312, 313, 341, 352], "read": [28, 40, 42, 43, 62, 172, 227, 228, 229, 230, 231, 235, 236, 237, 241, 242, 244, 261, 262, 279, 280, 340, 348], "hdf": [28, 29, 62, 228, 238, 340, 348], "stim": [28, 62, 235, 236, 237, 238, 241, 242, 244, 348], "align": [28, 62, 88, 235, 236, 237, 238, 241, 242, 307, 308, 348], "cycl": [28, 62, 235, 236, 237, 238, 241, 242, 243, 244, 348], "repolaris": [28, 62, 221, 235, 238, 241, 242, 248, 275, 348], "apd": [28, 62, 235, 238, 241, 242, 248, 348], "egm": [28, 62, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 235, 236, 237, 238, 241, 242, 248, 348], "bad": [28, 62, 238, 240, 243, 247, 248, 272, 348], "matrix": [28, 33, 62, 74, 75, 78, 79, 80, 83, 84, 85, 103, 108, 110, 113, 121, 123, 125, 126, 130, 131, 175, 192, 197, 198, 199, 211, 222, 238, 239, 240, 245, 246, 247, 249, 254, 255, 269, 270, 271, 272, 284, 338, 348], "interpol": [28, 43, 50, 62, 88, 108, 110, 138, 139, 146, 147, 148, 154, 174, 175, 188, 238, 240, 241, 262, 278, 279, 280, 292, 293, 348], "conduct": [28, 62, 238, 240, 348], "veloc": [28, 62, 238, 240, 348], "request": [28, 29, 40, 42, 43, 172, 228, 235, 236, 237, 238, 241, 242, 243, 244, 248, 261, 262, 279, 280], "alreadi": [28, 29, 53, 235, 236, 237, 238, 241, 242, 243, 244, 248], "file_nam": [28, 29, 42, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 241, 242, 243, 244, 248], "mea_sample_north_1000mv_1hz": [28, 29, 228, 235, 236, 237, 238, 241, 242, 243, 244, 248], "h5": [28, 29, 66, 228, 235, 236, 237, 238, 241, 242, 243, 244, 248], "path": [28, 29, 42, 43, 46, 66, 172, 227, 228, 229, 231, 235, 236, 237, 238, 241, 242, 243, 244, 248, 252, 253, 256, 261, 262, 279, 280], "exist": [28, 29, 42, 99, 100, 235, 236, 237, 238, 241, 242, 243, 244, 248], "data_sampl": [28, 29, 42, 228, 235, 236, 237, 238, 241, 242, 243, 244, 248], "req": [28, 29, 40, 42, 43, 172, 228, 235, 236, 237, 238, 241, 242, 243, 244, 248, 261, 262, 279, 280], "get": [28, 29, 40, 42, 43, 75, 136, 137, 151, 152, 153, 172, 181, 186, 189, 194, 195, 196, 200, 201, 202, 203, 204, 206, 207, 208, 209, 220, 221, 227, 228, 235, 236, 237, 238, 241, 242, 243, 244, 248, 252, 253, 254, 256, 261, 262, 279, 280, 327], "open": [28, 29, 40, 42, 43, 172, 228, 235, 236, 237, 238, 241, 242, 243, 244, 248, 261, 262, 279, 280], "wb": [28, 29, 40, 42, 43, 172, 228, 235, 236, 237, 238, 241, 242, 243, 244, 248, 261, 262, 279, 280], "content": [28, 29, 40, 42, 43, 172, 228, 235, 236, 237, 238, 241, 242, 243, 244, 248, 261, 262, 279, 280, 348], "features_df": [28, 238], "features_ch": [28, 238], "features_mat": [28, 238], "analyse_mea_fil": [28, 66], "stim_fhz": [28, 29, 66, 235, 236, 237, 238, 241, 242, 243, 244, 248], "500": [28, 29, 41, 85, 101, 139, 173, 185, 224, 225, 226, 235, 236, 237, 238, 241, 242, 248, 254, 274], "durat": [28, 29, 51, 117, 118, 119, 177, 182, 184, 227, 235, 236, 237, 238, 241, 242, 243, 244, 248, 279, 283, 322], "stimulu": [28, 66, 228, 237, 238, 242, 243, 244], "chang": [28, 33, 53, 104, 105, 108, 110, 121, 123, 125, 126, 130, 131, 135, 140, 141, 142, 144, 146, 175, 238, 247, 319, 349, 350, 351, 352, 353], "dur_after_spik": [28, 29, 235, 236, 237, 238, 241, 242, 248], "kei": [28, 29, 119, 129, 228, 231, 303], "keysviewhdf5": [28, 29], "250000": [28, 29], "12450": [28, 29], "per": [28, 29, 140, 141, 142, 144, 235, 236, 237, 238, 241, 242, 243, 244, 279, 287], "etract": [28, 29], "peak_to_peak": [28, 29], "egm_dur": [28, 29], "f_index": [28, 29], "new_dur": [28, 29, 241], "energy_mean": [28, 29, 241], "energy_sd": [28, 29, 241], "noise_var": [28, 29, 241], "egm_feat": [28, 29], "xe": [28, 29, 85, 241, 242, 248, 265], "250": [28, 29, 238], "AT": [28, 29, 220, 221, 235, 238, 248], "egm_f": [28, 29], "ON": [28, 29], "41": [28, 29, 238, 239, 247, 249, 301, 303], "peak": [28, 29, 62, 86, 87, 138, 139, 181, 186, 238, 241, 244, 261, 262, 265, 348], "volt": [28, 29, 140, 141, 142], "manual": [28, 29, 58, 238], "good": [28, 29, 88, 220, 237, 238, 247, 248, 265, 272, 292, 301, 307, 308], "37": [28, 29, 238, 239, 247, 249, 301], "62": [28, 29, 238, 239, 247, 249], "82": [28, 29, 238, 239, 247, 249], "74": [28, 29, 238, 239, 247, 249], "67": [28, 29, 32, 37, 238, 239, 247, 249], "68": [28, 29, 37, 238, 239, 247, 249], "58": [28, 29, 238, 239, 247, 249], "cv_mean": [28, 240], "817": 28, "965": 28, "cv_median": [28, 240], "969": 28, "292": 28, "cv_sd": [28, 240], "987": 28, "459": 28, "inv_spe": [28, 240], "004": [28, 50, 52], "avg_angl": [28, 240], "693": 28, "685": 28, "smooth": [28, 29, 33, 140, 141, 142, 155, 157, 169, 175, 178, 180, 181, 182, 183, 184, 186, 220, 221, 235, 236, 238, 265, 275, 278, 305, 306, 312, 338, 348], "upsampl": [28, 29, 135, 278], "at_ms_mean": 28, "484167": 28, "361333": 28, "at_ms_median": 28, "at_ms_sd": 28, "393794": 28, "116": 28, "845063": 28, "peak_to_peak_mean": 28, "194": 28, "296019": 28, "156": 28, "026815": 28, "peak_to_peak_median": 28, "198": 28, "877604": 28, "170": 28, "335079": 28, "peak_to_peak_sd": 28, "811005": 28, "284933": 28, "egm_duration_mean": 28, "043771": 28, "840246": 28, "egm_duration_median": 28, "205426": 28, "812905": 28, "egm_duration_sd": 28, "499696": 28, "769817": 28, "f_index_mean": 28, "020833": 28, "266667": 28, "f_index_median": 28, "f_index_sd": 28, "142826": 28, "424391": 28, "new_duration_mean": 28, "886978": 28, "366179": 28, "new_duration_median": 28, "396708": 28, "099283": 28, "new_duration_sd": 28, "934721": 28, "052041": 28, "energy_mean_mean": 28, "634": [28, 75], "703597": 28, "508": 28, "018861": 28, "energy_mean_median": 28, "960827": 28, "429": [28, 29], "291967": 28, "energy_mean_sd": 28, "440": 28, "939276": 28, "468": 28, "763144": 28, "energy_sd_mean": 28, "2331": 28, "557953": 28, "1865": 28, "581011": 28, "energy_sd_median": 28, "1981": 28, "04279": 28, "1463": 28, "436099": 28, "energy_sd_sd": 28, "1702": 28, "987816": 28, "1785": 28, "685722": 28, "noise_var_mean": 28, "483589": 28, "748528": 28, "noise_var_median": 28, "398441": 28, "078418": 28, "noise_var_sd": 28, "679903": 28, "1329": 28, "cv_cm_s_mean": 28, "964751": 28, "143832": 28, "cv_cm_s_median": 28, "292091": 28, "923668": 28, "cv_cm_s_sd": 28, "458801": 28, "490185": 28, "004041": 28, "003854": 28, "685121": 28, "692971": 28, "n_bad_ch": 28, "n_good_ch": 28, "at_m": 28, "cv_cm_": 28, "ch_label": [28, 29, 227, 228, 235, 236, 237, 238, 239, 241, 242, 243, 244, 247, 248, 249], "bad_ch": 28, "185": 28, "024967": 28, "888097": 28, "484": 28, "839536": 28, "1738": 28, "891824": 28, "806276": 28, "994262": 28, "207": 28, "645492": 28, "29": [28, 32, 37, 38, 301], "078587": 28, "564": 28, "528219": 28, "1965": 28, "390988": 28, "757493": 28, "972602": 28, "137": 28, "696900": 28, "199420": 28, "346": 28, "427159": 28, "1313": 28, "511807": 28, "826316": 28, "300282": 28, "88": [28, 29, 168], "110": 28, "208074": 28, "244166": 28, "060420": 28, "589": 28, "373654": 28, "835411": 28, "614175": 28, "957333": 28, "186365": 28, "461": 28, "934628": 28, "1633": 28, "030667": 28, "361641": 28, "406259": 28, "146": 28, "507319": 28, "930925": 28, "291": 28, "667150": 28, "1035": 28, "150207": 28, "791908": 28, "158138": 28, "284": [28, 29], "495890": 28, "216436": 28, "963": 28, "708430": 28, "3611": 28, "331072": 28, "189918": 28, "737474": 28, "220": [28, 40, 42], "728300": 28, "077200": 28, "602": 28, "182147": 28, "2302": 28, "812305": 28, "838855": 28, "588377": 28, "426356": 28, "029424": 28, "987956": 28, "203725": 28, "408528": 28, "561067": 28, "163": 28, "620594": 28, "617619": 28, "339": 28, "587586": 28, "1234": 28, "744236": 28, "870040": 28, "872723": 28, "236": 28, "031266": 28, "412209": 28, "742": 28, "615567": 28, "2896": 28, "596687": 28, "079189": 28, "898835": 28, "108": 28, "990994": 28, "115": 28, "117881": 28, "184": [28, 241], "759779": 28, "807": 28, "893237": 28, "395177": 28, "627833": 28, "101": [28, 183, 186, 187, 275], "917566": 28, "773716": 28, "956645": 28, "439767": 28, "768145": 28, "349423": 28, "874862": 28, "418585": 28, "892525": 28, "794201": 28, "143": [28, 84, 103], "344650": 28, "137642": 28, "123060": 28, "695701": 28, "789267": 28, "323118": 28, "031301": 28, "040085": 28, "187772": 28, "775147": 28, "462483": 28, "079279": 28, "501121": 28, "254152": 28, "801556": 28, "250936": 28, "900375": 28, "313894": 28, "303754": 28, "663": 28, "290624": 28, "506374": 28, "691410": 28, "183": 28, "043845": 28, "251336": 28, "489": 28, "891978": 28, "2187": 28, "811774": 28, "457476": 28, "689037": 28, "135": 28, "499567": 28, "598340": 28, "255": [28, 73, 76], "465681": 28, "1225": 28, "741769": 28, "232107": 28, "345526": 28, "208": 28, "095476": 28, "768363": 28, "592": 28, "269185": 28, "1996": 28, "694592": 28, "713667": 28, "572447": 28, "174": [28, 29], "705308": 28, "125530": 28, "423": [28, 39, 313], "162994": 28, "1794": 28, "933818": 28, "115191": 28, "856701": 28, "197": [28, 44], "765137": 28, "110845": 28, "448": 28, "354167": 28, "1605": 28, "567895": 28, "933420": 28, "889576": 28, "199": 28, "990070": 28, "185192": 28, "492698": 28, "2428": 28, "124139": 28, "159148": 28, "929110": 28, "672183": 28, "147": 28, "479525": 28, "204": 28, "713549": 28, "088024": 28, "119499": 28, "305310": 28, "257815": 28, "234": 28, "087601": 28, "857447": 28, "1134": 28, "540542": 28, "3941": 28, "533424": 28, "792507": 28, "295478": 28, "176": [28, 29], "220167": 28, "325327": 28, "089396": 28, "130375": 28, "271223": 28, "789960": 28, "267": 28, "936098": 28, "318821": 28, "1015": 28, "256365": 28, "4205": 28, "093145": 28, "288281": 28, "013662": 28, "357": [28, 29], "085440": 28, "911071": 28, "071337": 28, "123967": 28, "217650": 28, "412884": 28, "394": [28, 29], "475323": 28, "002538": 28, "274187": 28, "299669": 28, "597950": 28, "126649": 28, "585665": 28, "92": [28, 29], "324811": 28, "792306": 28, "006625": 28, "563891": 28, "265852": 28, "349": [28, 29], "784590": 28, "700329": 28, "224369": 28, "403634": 28, "427144": 28, "575117": 28, "345": [28, 29], "949954": 28, "314854": 28, "099146": 28, "136271": 28, "300426": 28, "650681": 28, "242921": 28, "173367": 28, "738626": 28, "416": 28, "599180": 28, "618208": 28, "388949": 28, "154": 28, "565858": 28, "989405": 28, "424": [28, 29, 39], "997858": 28, "1319": 28, "499289": 28, "854213": 28, "678996": 28, "209": [28, 29], "020953": 28, "206467": 28, "167395": 28, "198213": 28, "467681": 28, "108018": 28, "249": 28, "095678": 28, "198601": 28, "1342": 28, "348732": 28, "3865": 28, "931980": 28, "747313": 28, "443430": 28, "818095": 28, "494695": 28, "005287": 28, "164918": 28, "365871": 28, "893927": 28, "301": 28, "713155": 28, "300006": 28, "1185": 28, "619945": 28, "4548": 28, "332537": 28, "208267": 28, "831155": 28, "262": 28, "489993": 28, "555927": 28, "1259": 28, "552318": 28, "3845": 28, "349801": 28, "809549": 28, "468601": 28, "165": 28, "964851": 28, "289210": 28, "433": 28, "586076": 28, "1321": 28, "304302": 28, "306614": 28, "849839": 28, "330": [28, 29], "289875": 28, "507392": 28, "100453": 28, "686527": 28, "543717": 28, "983761": 28, "086544": 28, "286": 28, "334120": 28, "977130": 28, "1075": 28, "300290": 28, "3690": 28, "857045": 28, "709205": 28, "321557": 28, "247": 28, "082172": 28, "098113": 28, "917": 28, "583124": 28, "3972": 28, "649231": 28, "058398": 28, "808972": 28, "354": 28, "963382": 28, "989166": 28, "1744": 28, "744082": 28, "7221": 28, "839931": 28, "985230": 28, "575674": 28, "073097": 28, "149889": 28, "932773": 28, "594577": 28, "105692": 28, "241695": 28, "343": [28, 29], "961333": 28, "552862": 28, "763354": 28, "513844": 28, "714858": 28, "166059": 28, "084073": 28, "270": 28, "760250": 28, "885907": 28, "999": [28, 181, 186], "765942": 28, "3957": 28, "074664": 28, "452439": 28, "681946": 28, "366": 28, "615413": 28, "754012": 28, "1886": [28, 47, 290], "732748": 28, "7866": 28, "874997": 28, "662611": 28, "166111": 28, "235": [28, 29], "104306": 28, "903772": 28, "922": [28, 30], "811550": 28, "3289": 28, "930349": 28, "583009": 28, "173149": 28, "883263": 28, "859990": 28, "694": 28, "105695": 28, "2237": 28, "905717": 28, "284190": 28, "283899": 28, "246": 28, "211356": 28, "157142": 28, "841": 28, "472934": 28, "2985": 28, "265406": 28, "497298": 28, "173894": 28, "285": 28, "388401": 28, "533913": 28, "972": 28, "235101": 28, "3509": 28, "150114": 28, "464566": 28, "511653": 28, "149": 28, "778181": 28, "610816": 28, "930537": 28, "1060": 28, "727601": 28, "077647": 28, "481472": 28, "988603": 28, "106471": 28, "493": 28, "393435": 28, "1688": 28, "048984": 28, "306425": 28, "215825": 28, "275": 28, "228959": 28, "493410": 28, "1024": 28, "767000": 28, "3944": 28, "379419": 28, "551180": 28, "807320": 28, "316": [28, 29], "971262": 28, "380379": 28, "1215": 28, "230557": 28, "4342": 28, "037972": 28, "339405": 28, "325041": 28, "216": 28, "102190": 28, "922939": 28, "646": 28, "841359": 28, "2337": 28, "948079": 28, "871648": 28, "137746": 28, "106": 28, "317816": 28, "826650": 28, "232": 28, "242177": 28, "790": 28, "835827": 28, "137693": 28, "948501": 28, "025948": 28, "196825": 28, "289": 28, "011529": 28, "945": 28, "021764": 28, "442592": 28, "359655": 28, "59": [28, 39], "536550": 28, "652898": 28, "845": 28, "736027": 28, "2641": 28, "059900": 28, "917260": 28, "989802": 28, "plot_mea_minimal_setting_exampl": [28, 30, 66, 344], "25000": [29, 228, 235, 236, 237, 238, 241, 242, 243, 244, 248], "read_hdf": [29, 66, 227, 229, 231, 232, 235, 236, 237, 241, 242, 243, 244, 248, 310], "stim_loc": [29, 235, 236, 237, 241, 242, 244, 248], "get_stim_loc": [29, 66, 235, 236, 237, 238, 241, 242, 248], "fhz": [29, 235, 236, 237, 241, 242, 244, 248], "stim_loc_m": 29, "tix": 29, "tii": 29, "exclude_first_dur": [29, 235, 236, 237, 238, 241, 242, 248], "exclude_last_cycl": [29, 235, 236, 237, 238, 241, 242, 248], "xb": [29, 235, 236, 237, 241, 242, 248], "align_cycl": [29, 66, 235, 236, 238, 241, 242, 248], "pad": [29, 38, 88, 89, 99, 100, 235, 236, 237, 238, 241, 242, 248, 308], "nan": [29, 40, 42, 43, 99, 100, 135, 174, 175, 219, 222, 223, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 272, 279, 280, 284, 285, 286, 287, 289], "aling": [29, 237], "egm_numb": [29, 235, 236, 238, 241, 242], "x1b": [29, 235, 236, 241, 242, 248], "nanmean": [29, 235, 236, 241, 242, 248], "between": [29, 101, 113, 126, 155, 156, 169, 208, 209, 235, 236, 238, 240, 241, 242, 248, 274, 292, 313], "assert": [29, 235, 236, 241, 242], "at_rang": [29, 235, 236, 238, 241, 242, 248], "rt_rang": [29, 235, 238], "at_loc": [29, 221, 235, 236, 241, 242, 248], "activation_time_loc": [29, 66, 220, 221, 235, 238, 241, 242, 248], "togeth": [29, 89, 235, 308], "rt_loc": [29, 221, 235], "activation_repol_time_loc": [29, 66, 220, 221, 236, 238], "at_loc_m": [29, 66, 235, 236], "rt_loc_m": [29, 66, 235], "278": 29, "472": 29, "120": 29, "340": [29, 298, 299], "302": 29, "271": 29, "314": 29, "202": 29, "342": 29, "351": 29, "419": 29, "425": [29, 39, 51, 322], "460": 29, "219": 29, "295": 29, "145": [29, 41, 44], "245": 29, "397": 29, "apd_m": [29, 66, 235], "at_grid": [29, 235, 236], "arrange_mea_grid": [29, 235, 236, 245, 246, 247, 248, 249], "rt_grid": [29, 235], "apd_grid": [29, 235], "mat_1_show": [29, 235, 236, 239, 246, 247, 248, 249], "dur_from_loc": [29, 238, 241, 242, 248], "remove_drift": [29, 238, 241, 242, 248], "atloc": [29, 241, 242, 248], "extract_egm": [29, 66, 238, 241, 248], "act_loc": [29, 241, 242, 248], "egmf": [29, 241], "feat_nam": [29, 241], "egm_featur": [29, 66, 238, 242, 243], "width_rel_height": [29, 238, 241], "findex_rel_dur": [29, 238, 241], "findex_rel_height": [29, 238, 241], "findex_npeak": [29, 238, 241], "good_channel": [29, 238], "bad_channel": [29, 238, 247, 248], "p2p_thr": [29, 238], "bad_ch_stim_thr": [29, 238], "bad_ch_mnmx": [29, 238], "range_act_thr": [29, 238], "bad_channels_list": [29, 247, 248], "bad_channels_idx_1": [29, 243], "find_bad_channels_idx": [29, 66, 238], "mnmx": [29, 243], "plot_dur": [29, 235, 236, 238, 243], "bad_channels_ch_1": 29, "bad_channels_idx_2": 29, "bad_channels_ch_2": 29, "bad_channels_idx_3": 29, "bad_channels_ch_3": 29, "good_channels_list": 29, "good_channels_list_idx": 29, "plot_mea_grid": [29, 66, 239, 242, 245, 246, 247, 249], "act_spik": [29, 248], "title_styl": [29, 242, 248], "trace": [29, 235, 236, 248], "electrogram": [29, 62, 66, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 220, 221, 235, 236, 242, 248, 348], "852": [29, 30], "8768781599376": 29, "1088": 29, "2322322933303": 29, "mxbad": 29, "mea_feature_map": [29, 66, 239, 245, 246, 248, 249], "mv": [29, 241, 243], "fmt": [29, 135, 245, 246, 247], "0f": 29, "intp_param": [29, 238], "pkind": [29, 174, 175, 238], "filter_s": [29, 175, 238], "conv": [29, 97, 98, 175, 238], "axix": 29, "fill_nans_2d": [29, 33, 66, 97, 98, 99, 100, 174, 238, 240], "clip_rang": [29, 175], "mat_list_show": [29, 66, 239, 245, 247, 248, 249], "preserv": 29, "cv_param": [29, 238], "ed": [29, 238, 240], "esp": [29, 132, 156, 159, 166, 167, 170, 223, 238, 240, 250, 285, 286], "cv_pad": [29, 238, 240], "cv_thr": [29, 238, 240], "arr_agg": [29, 238, 240, 272], "cv_df": [29, 240], "cv_theta": 29, "cv0": [29, 240], "cv": [29, 238, 240, 272], "compute_cv": [29, 66, 238], "flip": [29, 240], "cv_thetas_smooth": 29, "silent_mod": [29, 240], "im": [29, 38, 39, 80, 83, 146, 269, 270], "jet": [29, 38, 39, 40, 42, 43, 50, 80, 83, 135, 143, 146, 198, 199, 203, 216, 222, 223, 238, 240, 245, 246, 247, 269, 270, 279, 280, 284, 285, 292, 293, 307, 308], "bilinear": [29, 43, 148, 238, 279, 280, 292, 293], "extent": [29, 38, 39, 40, 42, 43, 80, 83, 269, 270, 279, 280, 292, 293], "contour": [29, 146, 147, 154], "1f": [29, 245, 246, 247], "cond": 29, "cv_arr_prop": [29, 238], "direction_flow_map": [29, 66, 238, 240, 272], "x_theta": [29, 135, 240], "squar": [29, 93, 135, 193, 206, 208, 209, 241, 250, 251], "cbar": [29, 33, 100, 135, 175], "arr_pivot": [29, 135, 240], "mid": [29, 135, 240], "stream_plot": [29, 135], "heatmap_prop": [29, 135, 240], "arr_prop": [29, 135], "stream_prop": [29, 135], "linewidth": [29, 135, 146], "930": [29, 30], "plot_mea_stepwise_exampl": [29, 30, 344], "multielectrod": [30, 66, 344], "announc": [32, 33], "come": [32, 33, 241], "bug": [32, 33, 351, 352, 353], "fix": [32, 33, 51, 75, 121, 123, 126, 130, 131, 136, 137, 156, 158, 159, 164, 166, 167, 248, 257, 273, 312, 322, 349, 350, 351, 352, 353], "organis": 33, "document": [32, 33, 57, 67, 136, 220, 306, 348], "exhaust": 33, "note": [33, 47, 74, 75, 77, 79, 80, 83, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 132, 133, 134, 135, 138, 139, 155, 156, 159, 169, 173, 176, 178, 179, 184, 185, 219, 220, 221, 222, 225, 226, 235, 238, 244, 250, 251, 255, 263, 264, 265, 269, 270, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 290, 291, 293, 304, 305, 306, 307, 308, 312, 349], "ad": [32, 33, 91, 121, 123, 125, 126, 130, 131, 175, 265, 351, 352, 353], "000": [17, 35, 344], "plot_release_highlights_0_0_9_6": [32, 34, 344], "wide": [33, 51, 77, 116, 122, 322], "although": 33, "layout": 33, "standard": [33, 51, 58, 75, 113, 123, 126, 130, 131, 145, 146, 149, 150, 151, 152, 153, 222, 223, 252, 253, 256, 284, 285, 287, 322], "notic": 33, "describ": [33, 181, 186, 327], "bem": [33, 153], "fi": [33, 153], "book": [33, 153, 346], "htm": [33, 153], "en": [33, 73, 76, 88, 94, 95, 98, 104, 106, 107, 108, 109, 110, 111, 116, 122, 128, 133, 134, 145, 149, 153, 155, 156, 157, 164, 169, 176, 177, 178, 181, 185, 186, 260, 263, 264, 277, 290, 294, 295, 296, 297, 304, 307, 308, 312, 327, 331], "wikipedia": [33, 73, 76, 77, 88, 89, 90, 92, 93, 94, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 122, 128, 133, 134, 145, 149, 153, 155, 156, 157, 161, 164, 165, 166, 169, 171, 173, 176, 177, 178, 179, 180, 181, 184, 185, 186, 219, 225, 226, 250, 251, 260, 263, 264, 268, 272, 276, 277, 281, 282, 283, 290, 294, 295, 296, 297, 304, 305, 306, 307, 308, 312, 327, 331], "org": [33, 58, 73, 76, 88, 94, 95, 98, 104, 106, 107, 108, 109, 110, 111, 116, 122, 128, 133, 134, 135, 136, 140, 142, 143, 145, 149, 153, 155, 156, 157, 164, 169, 176, 177, 178, 181, 185, 186, 220, 260, 263, 264, 275, 277, 288, 290, 294, 295, 296, 297, 304, 307, 308, 312, 327, 331], "wiki": [33, 73, 76, 88, 94, 95, 98, 104, 106, 107, 108, 109, 110, 111, 116, 122, 128, 133, 134, 145, 149, 153, 155, 156, 157, 162, 163, 164, 169, 176, 177, 178, 181, 185, 186, 258, 259, 260, 263, 264, 274, 277, 290, 294, 295, 296, 297, 304, 307, 308, 312, 327, 331], "e2": [33, 153, 168, 177, 290, 313], "9320_system_": [33, 153], "mariusthart": [33, 153], "net": [33, 153, 254], "eeg_electrodes_10": [33, 153], "pdf": [33, 153, 275, 346], "beteredingen": [33, 153], "nl": [33, 153], "cz": [33, 301], "point": [33, 75, 108, 133, 134, 135, 146, 151, 152, 153, 154, 155, 193, 197, 198, 199, 200, 201, 203, 204, 206, 208, 209, 221, 231, 241, 245, 246, 247, 263, 275, 279, 287, 288, 290, 291, 319], "horizont": [33, 146, 238, 240], "straight": 33, "tri": [33, 238], "keep": [33, 107, 108, 110, 132, 135, 140, 141, 142, 181, 186, 238, 240, 242, 313, 348], "convent": [33, 99, 100, 153, 175, 319, 351, 352, 353], "see": [33, 51, 58, 75, 99, 135, 138, 139, 144, 153, 275, 288, 322], "topomap": [33, 351, 353], "px": [33, 40, 133, 134, 143, 145, 146, 149, 156, 159, 167, 262, 263, 313, 320], "pos1": [33, 146, 153], "s1020_get_epos2d": [33, 143, 146, 151, 152], "pos2": [33, 146, 153], "z1i": [33, 146], "po": [33, 143, 146, 147, 151, 152, 153, 154], "z2i": [33, 146], "ch_names_emotiv": [33, 153], "ch1": [33, 153], "ch2": [33, 153], "ch_names_al": [33, 153], "preset": [33, 151, 152, 153, 301], "standard_1020_ch": [33, 153, 301], "pos3": [33, 153], "ch3": [33, 153], "ch_names_spkit_al": [33, 153], "standard_1020_spkit_ch": [33, 153], "pos4": [33, 153], "ch4": [33, 153], "va": [33, 151, 152, 153], "axvlin": [33, 85, 105, 138, 153, 220, 221], "lw": [33, 43, 85, 99, 105, 138, 153, 155, 261, 262, 272, 279, 280, 287, 288], "axhlin": [33, 153, 261, 262, 287], "s1010_get_epos2d": [33, 146, 151, 153], "standard_1010_ch": [33, 152], "s1005_get_epos2d": [33, 146, 152, 153], "standard_1005_ch": [33, 151], "conv1d_nan": [33, 97, 98, 100, 132, 351, 353], "scipi": [33, 39, 40, 42, 43, 58, 61, 99, 100, 138, 139, 172, 175, 177, 182, 261, 262, 279, 280, 323], "create_signal_1d": [33, 71, 97, 98, 99, 176, 177, 181, 198, 199, 203, 222, 223, 239, 247, 278, 284, 285, 305, 306, 323], "sg_winlen": [33, 71, 99, 100, 102, 103, 175, 176, 177, 181, 198, 199, 203, 222, 223, 240, 245, 246, 249, 278, 284, 285, 305, 306, 323], "kernel": [33, 97, 98, 99, 100, 132, 175, 178, 180, 181, 182, 183, 184, 186, 187, 220, 221, 235, 236, 277, 327, 338, 348], "ones": [33, 99, 100, 132, 175, 240, 247], "x_scipi": [33, 99], "convolv": [33, 97, 98, 99, 181, 186, 327], "x_spkit": [33, 99], "311": [33, 40, 41, 99, 102, 184, 225, 226, 265], "c0": [33, 99, 127, 135, 138, 248, 272, 275, 287, 288], "isnan": [33, 99, 240, 252, 255, 256, 287], "nanmin": [33, 99], "nanmax": [33, 99], "312": [33, 40, 41, 99, 102, 184, 225, 226, 265], "uisng": [33, 99, 100], "313": [33, 40, 41, 99, 102, 184, 225, 226, 265], "conv2d_nan": [33, 99, 132, 175, 351, 353], "seaborn": [33, 58, 61, 100, 135, 175, 288], "sn": [33, 100, 175], "create_signal_2d": [33, 71, 100, 102, 175, 240, 245, 246, 249], "i_scipi": [33, 100], "convolve2d": [33, 100], "fillvalu": [33, 99, 100, 175], "i_spkit": [33, 100, 175], "heatmap": [33, 100, 135, 175, 238, 245], "annot": [33, 100, 135, 175], "xticklabel": [33, 100, 135, 175], "yticklabel": [33, 100, 135, 175], "imag": [33, 40, 41, 61, 68, 100, 103, 104, 105, 106, 107, 109, 111, 143, 146, 148, 173, 185, 225, 226, 231, 319, 348], "fill_nans_1d": [33, 97, 98, 99, 100, 175], "reflect": [33, 99, 100, 175, 220, 221, 235, 236], "i_fil": [33, 175], "i_sm": [33, 175], "decompositon": 33, "wavelet_decomposed_sign": [33, 88, 308, 322, 351, 353], "lead_nam": [33, 70, 88, 115, 177, 184, 276, 292, 293, 304, 307, 308, 322], "ecg_sample_12lead": [33, 70, 73, 76, 88, 95, 114, 116, 117, 118, 119, 120, 122, 127, 128, 177, 184, 234, 268, 276, 292, 293, 304, 307, 308, 322, 331], "plot_each": [33, 304, 322], "743": [], "plot_release_highlights_0_0_9_7": [33, 34, 344], "release_highlight": [34, 344], "rfb_example_1": [32, 37, 82], "snr": [32, 37, 46, 80, 81, 82, 83, 91, 269, 270], "rfb_example_2": [32, 37, 81], "signal_length": [32, 37, 38, 39, 82], "l1": [32, 37, 39, 79, 175, 254, 271], "regularis": [32, 37, 39, 206], "79": [32, 37, 39], "550": [37, 44], "plot_sp_rfb_for_period_estimation_demo_exampl": [37, 44, 344], "mpl_toolkit": 38, "axes_grid1": 38, "make_axes_locat": 38, "x0": [38, 164, 312], "tile": [38, 39, 80, 83, 269, 270], "x_nois": [38, 39, 80, 83, 269, 270, 275], "add_nois": [38, 39, 80, 83, 97, 139, 158, 159, 160, 161, 162, 163, 165, 167, 258, 259, 260, 269, 270, 275, 296, 297, 305, 312, 313], "snr_db": [38, 39, 80, 83, 91, 97, 139, 158, 159, 160, 161, 162, 163, 165, 167, 258, 259, 260, 269, 270, 275, 296, 297, 305, 312, 313], "pmax": [38, 39, 79, 80, 83, 269, 270, 271], "maximum": [38, 74, 75, 87, 88, 102, 103, 136, 137, 138, 140, 141, 142, 156, 157, 159, 167, 169, 220, 221, 228, 235, 236, 238, 241, 243, 244, 252, 253, 256, 279, 307, 308, 313], "expect": [38, 74, 79, 80, 83, 135, 252, 253, 256, 269, 270, 271, 313], "rcq": [38, 39, 80, 83, 269, 270], "repeat": [38, 80, 83, 180, 181, 183, 269, 270], "rav": [38, 39, 80, 83, 269, 270], "th": [38, 39, 80, 83, 269, 270], "output": [38, 73, 76, 80, 83, 97, 134, 143, 176, 241, 269, 270, 275, 276, 290], "fr": [38, 40, 80, 83, 261, 262, 269, 270], "fa": [38, 80, 83, 269, 270], "ramanujan_filt": [38, 39, 80, 81, 82, 270, 271], "return_filt": [38, 80, 83, 269, 270], "height_ratio": [38, 43, 172, 279, 280, 292, 293], "set_xlabel": [38, 43, 46, 279, 280, 292, 293], "divid": [38, 113, 193, 241, 312], "cax": 38, "append_ax": 38, "aspect": [38, 39, 40, 42, 43, 50, 80, 83, 135, 146, 269, 270, 279, 280, 292, 293, 307, 308], "auto": [38, 39, 40, 42, 43, 50, 80, 83, 97, 98, 99, 135, 136, 269, 270, 279, 280, 288, 292, 293, 307, 308], "set_colorbar": 38, "set_ylabel": [38, 43, 172, 279, 280, 292, 293], "orient": 38, "vertic": [38, 88, 192, 194, 195, 198, 222, 223, 229, 231, 232, 238, 240, 284, 285, 307, 308], "strength": [38, 39, 51, 79, 80, 83, 269, 270, 271, 322], "plist": [38, 83, 129, 270], "ramanujan_filter_prang": [38, 74, 81, 82, 83, 269, 271], "pmin": [38, 83, 270], "penrgi": 38, "x_temp": [38, 39], "ceil": [38, 39, 133, 172, 279, 292], "plot_sp_rfb_for_period_estimation_from_sign": [38, 44, 344], "sy": 39, "linalg": 39, "la": 39, "period_est_l1_1l": 39, "regularised_period_estim": [39, 58, 74, 79, 81, 82, 269, 270, 351, 353], "cvxsol": [39, 58, 79, 271], "period_est_l1_0l": 39, "period_est_l2_1l": 39, "No": [39, 99, 100], "period_est_rbf": 39, "411": 39, "repit": [39, 80, 83, 269, 270], "fft": [39, 98, 108, 110, 133, 134, 138, 139, 170, 172, 263, 277, 278, 279, 292, 313], "fq": 39, "dft": [39, 74, 79, 133, 134, 271, 276, 279, 280, 292, 293, 337, 348], "omega": 39, "penal": [39, 79, 271], "426": 39, "427": 39, "428": 39, "plot_sp_rfb_for_period_estimation_with_sparse_penalti": [39, 44, 344], "four": 40, "dft_analysi": [40, 134, 138, 139, 262, 276, 279, 280, 292, 293, 320], "boxcar": [40, 134, 320], "dft_synthesi": [40, 133, 276, 279, 280, 292, 293, 320], "amplitud": [40, 42, 50, 73, 76, 136, 137, 140, 141, 142, 265, 276, 306, 319, 331], "\u03bcv": [40, 42], "magnitud": [40, 42, 51, 86, 87, 133, 134, 138, 139, 140, 141, 142, 172, 220, 221, 244, 261, 262, 276, 279, 280, 281, 282, 292, 293, 322], "spectrum": [40, 94, 133, 134, 138, 139, 149, 150, 170, 261, 262, 263, 281], "phase": [40, 62, 96, 104, 105, 108, 110, 133, 134, 172, 262, 264, 265, 279, 280, 281, 282, 292, 293, 348], "effect": [40, 47, 100, 134, 140, 141, 142, 268, 278, 290, 323], "hamm": 40, "mxt": [40, 42, 43, 279, 280, 292, 293, 336], "pxt": [40, 42, 43, 143, 150, 279, 280, 292, 293, 336], "stft_analysi": [40, 42, 43, 133, 134, 276, 279, 280, 293, 336], "winlen": [40, 42, 43, 102, 103, 172, 276, 279, 280, 292, 293, 295, 335, 336], "blackmanharri": [40, 42, 43, 133, 276, 279, 280, 292, 335, 336], "nfft": [40, 42, 43, 110, 138, 139, 145, 149, 150, 172, 263, 279, 280, 292, 293, 335, 336], "invers": [40, 75, 133, 134, 173, 185, 225, 226, 276, 279, 280, 292, 293], "stft_synthesi": [40, 133, 134, 276, 279, 280, 292, 336], "spectrogram": [40, 42, 292], "2080": 40, "xa": [40, 330], "ifrft": [40, 41, 133, 134, 173, 185, 225, 276, 279, 280, 292, 293, 330], "yi": [40, 330], "url": 40, "wavfil": [40, 42, 43, 172, 261, 262, 279, 280], "uncom": 40, "ipython": [40, 42], "path1": 40, "com": [40, 42, 43, 66, 86, 172, 238, 252, 255, 256, 261, 262, 279, 280, 346, 351, 352, 353], "web": [40, 55], "blob": 40, "sound": 40, "violin": 40, "b3": 40, "wav": [40, 42, 43, 172, 261, 262, 279, 280], "path2": 40, "sing": [40, 42], "femal": [40, 42], "myfil": 40, "decompis": 40, "sinasod": [40, 133, 134, 276, 279, 280, 281, 292, 293], "track": [40, 43, 80, 83, 269, 270, 276, 279, 280, 282, 283, 351, 352, 353], "fxst": [40, 42, 43, 276, 279, 280, 335], "mxst": [40, 42, 43, 276, 279, 280, 335], "pxst": [40, 42, 43, 276, 279, 280, 335], "sinemodel_analysi": [40, 42, 43, 133, 134, 276, 280, 292, 293, 335], "3001": [40, 42, 43, 279, 280, 335], "750": [40, 42, 43, 279, 280, 335], "maxn_sin": [40, 42, 43, 279, 280, 335], "mindur": [40, 42, 43, 276, 279, 280, 335], "freq_devoffset": [40, 42, 43, 276, 279, 280, 335], "freq_devslop": [40, 42, 43, 276, 279, 280, 335], "sinemodel_synthesi": [40, 42, 43, 133, 134, 276, 279, 292, 293, 335], "crop_end": [40, 43, 279, 280, 335], "511": 40, "auido": 40, "441": [40, 42, 75], "fxt1": [40, 42, 43, 279, 280], "tx": [40, 42, 43, 139, 279, 280, 319], "514": 40, "x_r": [40, 42], "mxrt": [40, 42], "pxrt": [40, 42], "515": 40, "singing_female_recon": 40, "int16": [40, 42], "singing_female_residu": 40, "272243": 40, "44100": 40, "363": [40, 42], "273000": [40, 42], "save": [40, 238, 253, 254], "embed_audio": 40, "attribut": [40, 75, 227, 254, 255], "control": [40, 140, 142, 180, 187, 312], "githubusercont": [40, 252, 255, 256], "master": 40, "src": 40, "residu": [40, 134, 177, 180, 181, 182, 184], "161": [40, 44], "plot_sp_analysis_sythesis_model": [40, 44, 344], "upper": [41, 77, 96, 97, 98, 102, 136, 137, 140, 141, 142, 151, 152, 153, 170, 173, 185, 225, 226, 287, 313], "plot_sp_fractional_fourier_transform": [41, 44, 344], "also": [42, 51, 70, 80, 83, 137, 146, 156, 157, 158, 159, 166, 167, 169, 221, 235, 238, 240, 252, 253, 256, 257, 269, 270, 290, 313, 322, 323, 351, 352, 353], "examin": 42, "0db": 42, "xd": [42, 75], "mxdt": 42, "pxdt": 42, "x_d": 42, "sinmodel_recons_": 42, "sinmodel_residual_": 42, "369": [42, 44], "plot_sp_sinusodal_model_analysis_synthesi": [42, 44, 344], "mlenddataset": [43, 172, 252, 255, 256, 261, 262, 279, 280], "hwd_hp_hum_1": [43, 172, 261, 262, 279, 280], "downloaded_fil": [43, 172, 261, 262, 279, 280], "gridspec_kw": [43, 172, 279, 280, 292, 293], "set_xlim": [43, 172, 198, 199, 203, 222, 223, 279, 280, 284, 285, 292, 293], "set_xticklabel": [43, 172, 279, 280, 292, 293], "stft": [43, 133, 134, 276, 279, 280, 293], "nfrequenc": 43, "sine": [43, 276, 279, 280, 281], "recon": [43, 279, 280, 293], "497": [43, 44], "plot_sp_sinusodal_model_example_sound": [43, 44, 344], "signal_process": [44, 344], "test_2group": [46, 47, 341], "phyaatdataset": 46, "phyaat_attentionscoredata_v1": 46, "d1": 46, "snrdb": 46, "lengthstim": 46, "l3": 46, "sid": 46, "attentionscor": 46, "d2": 46, "renam": 46, "column": [46, 160, 161, 162, 163, 165, 175, 258, 259, 260, 286, 289, 296, 297, 301], "att_sem0_noisefre": 46, "att_sem1_noisefre": 46, "d3": 46, "d4": 46, "att_sem0_noisi": 46, "att_sem1_noisi": 46, "d12": 46, "merg": 46, "d34": 46, "d12_np": 46, "to_numpi": [46, 252, 255, 256], "d34_np": 46, "exp1": 46, "exp2": 46, "exp3": 46, "snrdb_label": 46, "inf": [46, 90, 140, 141, 142, 156, 252, 253, 256, 304, 313], "free": 46, "infti": [46, 313], "attens": 46, "noisi": [46, 91, 93, 135, 155, 157, 168, 169, 171, 220, 221, 275, 306, 313], "102": 46, "412": [46, 48], "plot_stats_group_boxplot": [46, 48, 344], "tpass": [47, 290, 291], "df1": [47, 290], "df2": [47, 290], "tval": [47, 290], "printthr": [47, 290, 291], "print_round": [47, 290, 291], "pre_test": [47, 290], "effect_s": [47, 290], "tabl": [47, 286, 289, 290, 291], "shapiro": [47, 290], "408": 47, "9865": 47, "signific": 47, "indic": [47, 77, 99, 100, 144, 192, 221, 235, 240, 272, 287], "2922": 47, "cohensd": [47, 290], "3199": 47, "0196": 47, "3719": 47, "wilcoxon": [47, 290], "sign": [47, 73, 76, 290, 305, 306, 331], "rank": [47, 290], "028": 47, "407988": [47, 290], "986549": [47, 290], "019631": [47, 290], "371901": [47, 290], "wilcox": [47, 290], "028014": [47, 290], "000000": [47, 290], "mean_diff": [47, 290], "292212": [47, 290], "319897": [47, 290], "7441": 47, "9564": 47, "9299": 47, "9747": 47, "homogen": [47, 290], "leven": [47, 290], "5793": 47, "3182": 47, "small": [47, 66, 73, 76, 96, 177, 182, 221, 235, 237, 238, 242, 312, 313, 331, 352], "suggest": [47, 51, 53, 220, 221, 322], "popul": 47, "1571": 47, "1371": 47, "n1": [47, 107, 108, 110, 198, 199, 203, 207, 222, 223, 284, 285], "n2": [47, 107, 198, 199, 203, 207, 222, 223, 284, 285], "indept": 47, "7572": 47, "3137": 47, "7248": 47, "3521": 47, "shapiro_x1": [47, 290], "744053": [47, 290], "956390": [47, 290], "shapiro_x2": [47, 290], "929865": [47, 290], "974728": [47, 290], "579284": [47, 290], "318210": [47, 290], "757153": [47, 290], "313718": [47, 290], "ranksum": [47, 290], "724771": [47, 290], "352089": [47, 290], "157087": [47, 290], "137073": [47, 290], "127": [47, 48, 177, 182, 292, 293, 323], "plot_stats_testing_2groups_demo": [47, 48, 344], "539": 48, "statist": [48, 57, 59, 219, 238, 286, 287, 289, 344, 346, 348], "scalogramcwt": [50, 104, 105, 106, 107, 109, 110, 111, 112, 319], "compare_cwt_exampl": [50, 108, 319], "load_data": [50, 178, 263, 305, 312, 319, 323], "eegsample_1ch": [50, 319], "wavelet_analysi": [50, 52, 344], "plot_sp_scalogram_cwt_exampl": [50, 52, 344], "convens": 50, "eeg_sample_1ch": [50, 51, 70, 108, 112, 114, 115, 116, 117, 119, 120, 122, 127, 128, 133, 134, 178, 263, 305, 323], "predefin": [50, 227], "xw": [50, 104, 105, 106, 107, 108, 109, 110, 111, 319], "wtype": [50, 104, 105, 106, 107, 108, 109, 110, 111, 319], "plotpsd": [50, 104, 105, 106, 107, 108, 109, 110, 111, 319], "sinc": [50, 51, 73, 76, 88, 108, 109, 136, 137, 145, 151, 152, 153, 170, 237, 238, 277, 278, 292, 319, 322, 331], "custom": [50, 140, 141, 142, 144, 146, 180, 181, 182, 184, 222, 223, 284, 285, 338, 348], "f0": [50, 86, 87, 104, 105, 108, 109, 110, 111, 172, 319], "q": [50, 74, 105, 108, 110], "domain": [50, 104, 105, 106, 107, 109, 111, 275, 305, 313, 319], "plotw": [50, 105, 108, 110, 319], "cmaxican": [50, 108, 110, 111, 319], "cshannon": [50, 108, 109, 110, 319], "background": [51, 135, 176, 177, 300, 302, 322], "classic": [51, 136, 137, 173, 225, 322], "spectral": [51, 110, 136, 137, 143, 156, 157, 164, 168, 169, 170, 171, 178, 180, 181, 182, 183, 184, 261, 262, 288, 305, 322, 338, 348, 351, 352, 353], "techniqu": [51, 322, 351, 352, 353], "It": [51, 66, 100, 104, 105, 106, 107, 109, 111, 113, 149, 150, 151, 152, 153, 156, 158, 159, 166, 167, 176, 220, 221, 228, 232, 234, 237, 238, 244, 248, 257, 268, 272, 284, 285, 312, 313, 319, 322, 323, 331, 348], "famili": [51, 140, 141, 142, 305, 306, 322], "straightforward": [51, 156, 322], "repres": [51, 322], "particular": [51, 322], "back": [51, 92, 305, 322, 347], "machan": [51, 322], "compress": [51, 73, 76, 322, 331], "approach": [51, 75, 79, 138, 140, 141, 142, 173, 178, 225, 271, 275, 278, 322, 323, 329], "literatur": [51, 220, 221, 322], "coeffieci": [51, 322], "theta": [51, 92, 203, 214, 264, 322], "tild": [51, 322], "2log": [51, 322], "coeffient": [51, 322], "too": [51, 99, 100, 108, 135, 238, 255, 290, 322], "One": [51, 66, 221, 244, 254, 291, 313, 322, 346], "outlier": [51, 93, 140, 141, 142, 286, 289, 322], "deviat": [51, 75, 77, 113, 123, 126, 130, 131, 145, 149, 150, 222, 223, 252, 253, 256, 279, 282, 284, 285, 287, 322], "interquartil": [51, 77, 287, 322], "respect": [51, 79, 87, 136, 137, 146, 158, 159, 166, 167, 257, 271, 322], "accord": [51, 268, 287, 322], "theori": [51, 57, 59, 164, 312, 313, 322, 348], "later": [51, 253, 304, 313, 322], "outsid": [51, 322], "thei": [51, 58, 73, 76, 140, 141, 142, 146, 150, 238, 241, 287, 313, 322, 331, 352], "reprepres": [51, 322], "weir": [51, 322], "wai": [51, 58, 73, 76, 86, 87, 136, 137, 291, 301, 312, 313, 322, 331], "procedur": [51, 322], "donoho": [51, 322], "johnston": [51, 322], "ideal": [51, 241, 243, 319, 322], "spatial": [51, 135, 284, 285, 322, 338, 348], "adapt": [51, 322], "shrinkag": [51, 318, 339, 348], "biometrika": [51, 322], "1994": [51, 322], "455": [51, 322], "api": [51, 135, 322, 348, 349, 350, 351, 352, 353], "wavelet_filt": [51, 178, 306, 322, 327], "wavelet_filtering_win": [51, 305, 322], "implement": [51, 75, 107, 108, 110, 185, 225, 226, 275, 322], "chosen": [51, 140, 141, 142, 220, 221, 292, 322], "support": [51, 58, 322], "want": [51, 322], "filter_out_below": [51, 305, 306, 322], "tune": [51, 140, 141, 142, 322], "doc": [51, 61, 322, 351, 352, 353], "section": [51, 178, 322, 327, 347], "wpd_maxlevel": [51, 140, 141, 142, 305, 306], "614": [51, 52], "plot_sp_wavelet_filtering_exampl": [51, 52, 344], "618": 52, "report": 53, "modif": 53, "discuss": 53, "forum": 53, "issu": [53, 351, 352, 353], "contribut": 54, "date": [55, 67], "august": [55, 80, 83, 143, 269, 270, 351, 353], "2024": [55, 351, 353], "novemb": [55, 351, 352, 353], "2023": [55, 143, 351, 352, 353], "v": [55, 74, 79, 80, 83, 84, 108, 110, 189, 192, 193, 194, 195, 197, 198, 199, 203, 204, 216, 217, 220, 221, 222, 223, 229, 231, 232, 235, 236, 237, 238, 263, 269, 270, 271, 284, 285], "march": [55, 351, 352, 353], "2022": [55, 351, 352, 353], "jan": [55, 351, 352, 353], "oct": [55, 351, 352, 353], "2021": [55, 346, 351, 352, 353], "apr": [55, 351, 352, 353], "mar": [55, 351, 352, 353], "skip": [55, 83, 270, 351, 352, 353], "haha": 55, "dec": [55, 351, 352, 353], "2019": [55, 140, 142, 351, 352, 353], "instal": [56, 59, 61, 343, 351, 352, 353], "latest": [56, 57, 343], "offici": [56, 57, 343], "system": [56, 58, 66, 74, 79, 80, 83, 146, 151, 152, 153, 269, 270, 271, 313, 343], "maco": [56, 58, 343], "linux": [56, 58, 343], "packag": [56, 58, 318, 339, 343, 348], "pip": [56, 58, 343], "conda": [56, 58, 61, 343], "world": [57, 68, 348], "Or": [57, 113, 164, 260, 273, 288, 297, 312], "exmapl": 57, "electroencephalographi": [57, 59, 62, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 145, 149, 348], "machin": [57, 59, 348], "complet": [57, 62, 238, 348], "stabl": [58, 87, 107, 135], "built": [58, 252, 253, 256], "plateform": 58, "platform": 58, "envrion": 58, "instruct": 58, "ara": 58, "64bit": 58, "instanc": [58, 75, 352], "homebrew": 58, "brew": 58, "python3": 58, "manag": [58, 238], "anaconda": 58, "miniconda": 58, "miniforg": 58, "administr": 58, "permiss": 58, "those": [58, 113, 140, 141, 142, 237], "Then": 58, "pip3": 58, "venv": 58, "spkitn": [], "env": 58, "forg": 58, "freez": 58, "virtualenv": 58, "environ": 58, "pipelin": [58, 178, 184, 338, 346, 348], "comlet": 58, "share": 58, "might": [58, 67, 136, 137, 237, 238], "conflict": 58, "scikit": [58, 61], "resolv": [58, 292], "mai": [58, 164, 312], "possibl": [58, 87, 136, 137, 140, 141, 142, 313], "up": [58, 67, 174, 175, 252, 253, 256], "prerequit": 58, "pywavelet": 58, "pylfsr": 58, "h5py": 58, "pyedflib": 58, "read_bdf": [58, 228, 229, 231, 232, 310], "cvxpy": [58, 79, 271], "argument": [58, 113, 137, 146, 149, 150, 288, 305, 313], "guid": [59, 67], "under": [59, 66, 107, 108, 110, 250, 251, 265, 346, 347], "develop": [59, 107, 108, 110, 265, 346, 347, 352], "minimum": [61, 87, 156, 172, 238, 250, 251, 252, 253, 254, 268, 279, 282, 283], "purpos": 61, "threadpoolctl": 61, "cython": 61, "benchmark": 61, "memory_profil": 61, "pytest": 61, "cov": 61, "ruff": 61, "272": 61, "black": [61, 135, 248], "mypi": 61, "pyamg": 61, "polar": [61, 92], "pyarrow": 61, "copybutton": 61, "numpydoc": 61, "pillow": 61, "pooch": 61, "prompt": 61, "sphinxext": 61, "opengraph": 61, "plotli": 61, "lock": 61, "mainten": 61, "preprocess": [62, 238, 348], "electrocardiographi": [62, 348], "clean": [62, 96, 151, 152, 265, 283, 348], "detect": [62, 86, 96, 172, 221, 235, 237, 238, 261, 262, 348], "localis": [62, 235, 236, 237, 238, 241, 242, 244, 348], "rt": [62, 221, 235, 238, 348], "identifi": [62, 140, 141, 142, 238, 243, 244, 348], "attenu": [64, 140, 141, 142], "todo": [66, 77, 80, 83, 88, 89, 90, 91, 92, 94, 96, 98, 102, 103, 112, 132, 133, 134, 135, 159, 179, 184, 185, 219, 220, 221, 250, 251, 263, 264, 272, 276, 277, 279, 280, 281, 282, 283, 293, 304, 305, 306, 307, 313, 319], "utili": 66, "mount": 66, "plate": [66, 238, 240], "evenli": [66, 155], "space": [66, 85, 101, 155, 160, 161, 162, 163, 164, 165, 192, 193, 197, 198, 199, 258, 259, 260, 274, 296, 297, 312, 313], "700mm": 66, "apart": 66, "eletrophysiologi": 66, "cell": [66, 220, 221, 235, 236], "tissu": [66, 220, 221, 235, 236], "clinic": 66, "stimul": [66, 244], "certain": 66, "voltag": [66, 228, 238, 241, 243], "regular": [66, 254], "interv": 66, "multichannelsystem": [66, 238], "product": 66, "commonli": [66, 93, 222, 223, 284, 285, 312], "research": 66, "field": [66, 313, 323], "cardiac": [66, 220, 221, 235, 236], "electrophysiologi": 66, "recod": 66, "paramt": [66, 238], "essenti": [66, 108, 110, 193, 275], "files_nam": 66, "format": [66, 228, 232, 238, 245, 246, 247, 303], "html": [66, 135, 164, 288, 312], "modul": [67, 319, 348], "comprehens": 67, "continu": [67, 108, 312, 313, 318, 339, 348], "miss": [67, 99, 135, 174, 175], "docstr": 67, "been": [67, 346], "written": [67, 232, 254], "ecg": [68, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 307, 308, 348], "optic": [68, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 348], "ppg": [68, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 180, 182, 183, 186, 187, 348], "photoplethysmogram": [68, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 348], "gsr": [68, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 348], "eda": [68, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 348], "galvan": [68, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 348], "skin": [68, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 348], "respons": [68, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128, 348], "1d": [33, 68, 73, 76, 77, 80, 83, 85, 88, 91, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 111, 113, 118, 121, 123, 125, 126, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 155, 156, 157, 158, 159, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 183, 220, 221, 222, 223, 234, 235, 236, 241, 249, 250, 252, 253, 255, 256, 257, 263, 268, 269, 270, 272, 274, 275, 276, 278, 279, 280, 281, 284, 285, 286, 287, 289, 290, 292, 293, 295, 304, 305, 306, 307, 308, 323, 327, 348], "arbitari": [68, 102, 103, 348], "patch": [68, 103, 348], "variou": [70, 313, 351, 352, 353], "taken": 70, "eeg_sample_artifact": [70, 114, 115, 116, 117, 118, 120, 122, 127, 128], "x_raw": [70, 118, 119], "ecg_sampl": [70, 115, 116, 117, 118, 119, 120, 122, 127, 128, 220, 221], "collect": [70, 283], "devic": [70, 227], "optical_sampl": [70, 96, 101, 114, 115, 116, 117, 118, 119, 120, 122, 128, 136, 137, 138, 161, 164, 264, 265, 274, 275, 294, 295, 312], "camera": [70, 127], "speci": [70, 127], "ppg_sampl": [70, 114, 115, 116, 117, 118, 119, 120, 122, 127, 180, 182, 183, 186, 187, 327], "known": [70, 116, 122, 138, 139, 254, 275, 323], "electroderm": [70, 114, 115, 116, 117, 118, 119, 120, 122, 127, 128], "gsr_sampl": [70, 114, 115, 116, 117, 118, 119, 120, 127, 128], "eda_sampl": [70, 114, 115, 117, 118, 119, 120, 122, 127, 128], "i1": [71, 103], "ndist": [71, 113, 121], "angl": [71, 92, 113, 126, 135, 240, 272], "wrap": [71, 99, 100, 113, 131], "use_preset": [71, 113], "mclass_gauss": [71, 113, 121, 123, 126, 130, 131], "nclass": [71, 125, 254], "compand": [73, 76, 331], "law": [73, 76, 136, 137, 268, 312], "expand": [73, 76, 331], "laplacian": [73, 76, 331], "distribu": [73, 76, 164, 168, 268, 273, 312, 313, 331], "uniformli": [73, 76, 95, 331], "stretch": [73, 76, 331], "probabilti": [73, 76, 252, 253, 256, 331], "larg": [73, 76, 93, 238, 242, 253, 312, 331], "amplitutd": [73, 76, 331], "probabilt": [73, 76, 255, 331], "expend": [73, 76, 331], "revert": [73, 76, 331], "\u03bc": [73, 76, 136, 137, 164, 273, 312], "slightli": [73, 76, 331], "larger": [73, 76, 81, 82, 177, 182, 331], "dynam": [73, 76, 139, 313, 331], "cost": [73, 76, 331], "wors": [73, 76, 331], "proport": [73, 76, 331], "distort": [73, 76, 331], "nd": [73, 76, 77, 91, 235, 236, 237, 238, 242, 243, 244], "must": [73, 75, 76, 104, 105, 106, 107, 109, 111, 113, 146], "scalar": [73, 76, 91, 92, 99, 100, 106, 109, 113, 121, 123, 125, 126, 130, 131, 138, 139, 140, 141, 142, 144, 146, 168, 170, 171, 176, 184, 185, 216, 225, 226, 228, 235, 236, 237, 238, 240, 241, 242, 243, 254, 265, 276, 287, 290, 291, 304], "factor": [73, 76, 77, 105, 108, 110, 136, 137, 146, 234, 265, 278, 306, 312, 313, 331], "ident": [73, 76, 268], "bool": [73, 76, 79, 83, 88, 91, 97, 99, 100, 102, 108, 110, 113, 121, 123, 125, 126, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 163, 165, 166, 167, 168, 171, 172, 175, 176, 177, 199, 222, 223, 224, 228, 237, 238, 241, 242, 243, 244, 247, 248, 252, 253, 254, 256, 257, 258, 259, 260, 264, 265, 268, 270, 271, 284, 285, 287, 288, 289, 290, 291, 292, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308], "law_algorithm": [73, 76], "3000": [73, 76, 95], "y1": [73, 76, 97, 98, 158, 159, 160, 162, 163, 165, 166, 167, 181, 183, 186, 187, 198, 199, 210, 222, 223, 234, 248, 257, 258, 259, 260, 268, 284, 285, 296, 297, 312, 313, 331], "y2": [73, 76, 97, 98, 158, 159, 160, 162, 163, 165, 167, 183, 186, 187, 198, 199, 210, 222, 223, 234, 257, 258, 260, 268, 284, 285, 296, 297, 312, 313, 331], "histogram": [73, 76, 93, 95, 156, 224], "nmax": 74, "rowsiz": 74, "rfb": [74, 83, 269, 270], "period": [74, 79, 80, 81, 82, 83, 140, 141, 142, 269, 270, 271, 305, 306, 337, 348, 351, 352, 353], "row": [74, 103, 113, 121, 123, 125, 126, 130, 131, 175, 246], "naturalbasi": [74, 79, 271], "relev": 74, "paper": [74, 140, 141, 142], "tenneti": [74, 79, 80, 83, 269, 270, 271], "vaidyanathan": [74, 79, 80, 83, 269, 270, 271], "nest": [74, 79, 271, 303], "matric": [74, 79, 113, 121, 214, 238, 271, 352], "represent": [74, 79, 143, 271], "ieee": [74, 75, 79, 80, 83, 136, 164, 269, 270, 271, 312], "transact": [74, 75, 79, 164, 237, 238, 271, 312], "vol": [74, 79, 271], "3736": [74, 79, 271], "juli": [74, 79, 271], "2015": [74, 79, 80, 83, 269, 270, 271], "implet": [74, 79, 80, 83, 269, 270, 271], "matlab": [74, 79, 80, 83, 269, 270, 271], "caltech": [74, 79, 80, 83, 269, 270, 271], "edu": [74, 79, 80, 83, 269, 270, 271], "dsp": [74, 79, 80, 83, 269, 270, 271], "student": [74, 79, 80, 83, 269, 270, 271, 290], "srikanth": [74, 79, 80, 83, 269, 270, 271], "max_pca_compon": 75, "n_pca_compon": 75, "random_st": 75, "fit_param": 75, "max_it": 75, "useful": 75, "usual": [75, 79, 157, 169, 170, 228, 237, 238, 271, 312, 323], "nf": [75, 254, 255], "choosen": [75, 238, 242], "matirx": [75, 254], "dimension": [75, 85, 91, 101, 162, 164, 192, 222, 223, 274, 284, 285, 312], "reduct": 75, "suppli": [75, 113, 146, 252, 253, 256, 288], "recomposit": [75, 276], "randomst": 75, "specifi": [75, 305], "iter": [75, 97, 102, 103, 180, 181, 183, 184, 254, 265], "substact": 75, "pca_components_": 75, "pca_explained_variance_": 75, "unmixing_matrix_": 75, "unmix": 75, "mixing_matrix_": 75, "whitener_": 75, "deviaat": 75, "self": [75, 160, 161, 162, 169, 192, 199, 252, 253, 256, 258, 259, 273, 313, 348], "ndarrai": [75, 85, 232, 252, 253, 254, 256], "xdata": 75, "tranform": 75, "whiten": [75, 78], "normliz": 75, "normail": 75, "hyv\u00e4rinen": 75, "1999": 75, "fast": [75, 173, 185, 225, 226], "robust": [75, 93, 135], "neural": 75, "network": 75, "626": 75, "bell": [75, 313], "sejnowski": 75, "1995": 75, "maxim": 75, "blind": 75, "separ": [75, 113, 123, 130], "deconvolut": 75, "1129": 75, "1159": 75, "lee": 75, "girolami": 75, "subgaussian": 75, "supergaussian": 75, "417": 75, "ablin": 75, "cardoso": 75, "gramfort": 75, "2017": 75, "faster": [75, 108, 110], "precondit": 75, "hessian": 75, "arxiv": [75, 275], "1706": 75, "08171": 75, "nsampl": 75, "weight": [75, 96, 132, 252, 254, 255, 256], "n_channel": [75, 264, 265], "inplac": 75, "divis": 76, "a_law": [76, 268], "iqr": [77, 286, 287, 289, 305, 306, 322], "include_low": [77, 287], "include_upp": [77, 287], "return_lim": 77, "identyfi": 77, "q1": [77, 105, 287, 305, 306, 319], "q3": [77, 287, 305, 306], "stander": 77, "exclud": [77, 138, 139, 164, 184, 199, 219, 221, 222, 223, 228, 235, 236, 237, 238, 240, 247, 272, 284, 285, 286, 287, 289], "At": 77, "least": [77, 136, 137, 175, 193, 206, 312], "limit": [77, 136, 137, 221, 238, 246, 248, 252, 253, 256, 287, 313], "lt": [77, 287], "ul": 77, "idx_bin": [77, 287], "ut": [77, 287], "apply_whiten": 78, "TO": [78, 140, 141, 142], "BE": [78, 146], "svd": [78, 136, 137, 156, 157, 164, 168, 169, 170, 171, 348, 351, 352, 353], "covari": [78, 113, 121], "fit_transform": 78, "xpca": 78, "fun": [79, 271, 313], "instead": [79, 80, 83, 110, 144, 174, 220, 221], "That": [79, 80, 83, 221, 249], "sequenc": [79, 80, 83, 113, 121, 136, 137, 143, 156, 158, 159, 166, 167, 184, 219, 228, 257, 269, 270, 271, 286, 308], "farrai": [79, 271], "multipli": [79, 113, 131, 247, 271], "regularaz": [79, 271], "_1": [79, 271], "_2": [79, 271], "wether": [79, 271], "solver": [79, 271], "period_energi": [79, 271], "vecotor": [79, 271], "apply_averag": [80, 83, 269, 270], "penalt": [80, 269], "proc": [80, 83, 269, 270], "conf": [80, 83, 269, 270], "acoust": [80, 83, 269, 270], "speech": [80, 83, 269, 270, 312], "brisban": [80, 83, 269, 270], "april": [80, 83, 269, 270], "properti": [80, 83, 135, 247, 248, 269, 270, 288], "european": [80, 83, 269, 270], "confer": [80, 83, 269, 270], "franc": [80, 83, 269, 270], "scaler": [81, 82, 138, 160, 161, 162, 163, 164, 165, 167, 178, 181, 186, 238, 240, 258, 259, 260, 268, 296, 297], "ratio": [81, 82, 91, 135], "create_dictionari": [81, 82, 269, 270, 271], "smallest": [83, 222, 223, 270, 284, 285], "recomend": [83, 270], "deault": [83, 88, 102, 103, 139, 265, 270, 308], "iftru": [83, 270], "singular": [84, 171, 313], "truncat": 84, "mxn": 84, "mxm": 84, "nxn": 84, "cx": 84, "141": [84, 103], "c_x": 84, "142": [84, 103], "allclos": 84, "seri": [85, 168, 281], "signal_embed": [85, 101, 274], "create_multidim_space_sign": 85, "marker": [85, 139, 288], "pfreq": [86, 87, 282], "pmag": [86, 87, 282], "f0c": 86, "mismatch": [86, 87], "frequneci": 86, "candid": [86, 87, 172], "fundament": [86, 87, 172, 313], "f0error": 86, "correspond": [86, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 134, 239, 240, 242, 247, 262, 274, 281], "ref": [86, 108, 110, 319], "beauchamp": 86, "maher": 86, "mtg": 86, "sm": 86, "tool": [86, 229, 231], "f0min": [87, 172], "f0max": [87, 172], "f0_pre": 87, "f0max_err": 87, "previou": [87, 174, 175, 282, 352], "frame": [87, 172, 279, 280, 282, 283, 292, 293], "verticle_stack": [88, 89, 307, 308], "symmetr": [88, 89, 99, 100, 140, 141, 142, 181, 186, 305, 306, 307, 308, 327], "maxlevel": [88, 89, 307, 308], "inpterp": 88, "plottyp": 88, "wpa": [88, 304, 308], "tempor": [88, 139, 157, 169, 250, 251, 307, 308, 312, 313, 318, 337, 339, 348], "discard": [88, 308], "eqaul": [88, 308], "shift": [88, 95, 104, 105, 108, 110, 140, 141, 142, 146, 150, 176, 238, 242, 250, 251, 265, 306, 308], "stack": [88, 89, 103, 307, 308], "last": [88, 155, 184, 237, 238, 241, 243, 254, 275, 308], "abs_log": 88, "abs_log_p1": 88, "abs_log10": 88, "abs_log10_p1": 88, "wk_seq": [88, 308], "wpa_coeff": [88, 304, 308, 351, 353], "wavelet_packet_decomposit": [88, 304, 307, 308], "wk": [88, 307, 308], "256": [88, 176, 308, 323], "wavalet": [90, 304], "return_nois": 91, "sig_pw": 91, "noise_pw": 91, "sig_pw_db": 91, "noise_pw_db": 91, "desir": 91, "decibl": 91, "agg": 92, "aggreg": [92, 238, 240, 272], "direct": [92, 135, 192, 238, 240, 272], "arrow": [92, 135, 238, 240, 272], "coordin": [92, 191, 232], "cartesian": [92, 191], "aaverg": 92, "median": [92, 222, 223, 238, 240, 241, 263, 284, 285, 286, 289, 305, 306], "theta_avg": 92, "show_compass": 92, "compass": [92, 238, 240, 272], "arctan2": [92, 135, 272], "thetas_avg": 92, "9525995459333507": 92, "fd": [93, 136, 137, 156, 158, 159, 166, 167, 224, 257, 267, 268], "freedman": [93, 156, 268], "diaconi": [93, 156, 268], "resili": 93, "account": [93, 312], "doan": [93, 268], "sturg": [93, 268], "better": [93, 136, 137, 138, 169, 252, 256, 290, 292], "scott": [93, 268], "stone": 93, "leav": [93, 140, 141, 142], "integr": 93, "regard": 93, "rice": [93, 268], "doe": [93, 99, 100, 133, 136, 137, 178, 292], "overestim": 93, "optim": [93, 156, 158, 159, 166, 167, 205, 212, 224, 253, 254, 257, 267, 305, 306, 322], "underestim": 93, "root": [93, 252, 253, 256], "excel": [93, 238], "program": 93, "its": [93, 232, 243, 248, 268], "speed": 93, "simplic": 93, "bw": [93, 254], "bw1": 93, "bw2": 93, "blackman": [94, 281, 292], "harri": [94, 281, 292], "posit": [94, 133, 134, 151, 152, 153, 178, 181, 186, 238, 241, 243, 244, 319, 327], "sinc_dirichlet": 94, "window_funct": 94, "5d": [94, 145, 149], "5b36": 94, "20window": 94, "5bedit": [94, 145, 149], "lmag": 94, "cdf": [95, 136, 137, 234, 268, 312], "cumul": [95, 331], "disctribu": [95, 331], "anf": [95, 331], "x_cdf": 95, "low_resolut": [95, 331], "reduc": [95, 175, 234, 252, 253, 331], "resolut": [95, 136, 143, 146, 234, 292, 308], "cumulative_distribution_funct": [95, 331], "xp": [96, 213, 254, 264, 265], "5707963267948966": 96, "141592653589793": [96, 203, 207], "domin": [96, 138, 139], "flatuat": 96, "instani": 96, "combin": [96, 103, 137, 313], "pahs": [96, 281], "xpc": 96, "xp_new": 96, "xpr": 96, "phase_map": [96, 138, 139, 265], "dominent_freq": [96, 139, 264, 265], "phase_map_reconstruct": [96, 138, 139, 264], "dominent_freq_win": [96, 138, 264, 265], "amplitude_equ": [96, 138, 139, 264, 265], "add_sig": [96, 264, 265], "phi": [96, 203, 264, 265], "phi_c": 96, "return_ful": 97, "forward": [97, 178, 275], "backward": [97, 178, 275], "convolut": [97, 98, 99, 100, 108, 110, 132, 175, 180, 181, 183, 238, 275], "convfb": [97, 180, 181, 183, 275, 327], "conv_fb": 97, "recurs": [97, 176, 323], "gaussian_kernel": [97, 98, 183, 186], "itr": 97, "z": [98, 203, 254, 260, 273, 297, 348], "conv1d_fb": 98, "convolution_theorem": 98, "y2x": 98, "denormalise_k": [99, 100], "constant": [99, 100, 136, 137, 140, 141, 142, 145, 149, 150, 164, 263, 273, 305, 306, 312, 319], "propog": [99, 100], "corrupt": [99, 100], "fashion": [99, 100], "simpli": [99, 100, 220, 235, 236, 247, 312], "doen": 99, "adjust": [99, 100, 238, 242], "accordingli": [99, 100, 238, 242], "NOT": [99, 100, 136, 137, 140, 141, 142], "kernel_unnorm": [99, 100], "kernel_norm": [99, 100], "denorm_kernel": [99, 100], "fill": [99, 100, 174, 175, 239, 240, 248], "symm": [99, 100], "flag": [99, 100, 238, 243, 352], "circular": [99, 100, 102, 146, 202], "arrrai": [99, 100], "x_nan": [99, 175], "cx1": 99, "cx2": 99, "even": [100, 175], "replac": [100, 238, 240], "lag": [101, 274], "bipolar": [102, 198, 199, 203, 222, 223, 284, 285], "sg_polyord": [102, 103, 176, 177, 181, 184, 198, 199, 203, 220, 221, 222, 223, 235, 236, 238, 240, 242, 244, 245, 246, 249, 275, 284, 285, 305, 306, 323], "max_dxdt": [102, 103], "kwarg": [102, 113, 121, 123, 124, 126, 130, 131, 135, 138, 139, 140, 141, 142, 146, 150, 220, 221, 235, 236, 237, 238, 240, 241, 288, 294, 295], "sampel": 102, "re": [102, 103, 143, 146, 147, 151, 152, 153, 154, 164, 188, 312], "roughli": 102, "geometr": 102, "vari": [102, 276, 313], "heigher": [102, 103, 181, 186, 238], "smoother": [102, 103, 181, 186, 238], "curvi": 102, "deafult": [102, 103, 125, 133, 134, 135, 138, 139, 140, 141, 142, 144, 146, 149, 150, 168, 171, 180, 184, 238, 241, 242, 247, 252, 256, 289, 290, 291, 292, 304, 305, 306], "deriv": [102, 103, 177, 181, 182, 186, 220, 221, 235, 236, 275, 319, 327], "smoothen": [102, 103], "until": [102, 103], "achiv": [102, 103, 138], "regardless": [102, 103, 238], "deafault": [102, 103, 238], "pixel": [103, 254], "height": [103, 238, 241, 248, 252, 255, 256], "patchi": 103, "i2": 103, "i3": 103, "rbg": 103, "t0": [104, 105, 108, 110, 172, 221, 235, 236, 238, 248, 278], "gabor": [104, 108, 110, 318, 339, 348], "technic": [104, 313, 319], "psi": [104, 105, 106, 107, 109, 111, 319], "t_0": [104, 105, 319], "jf_0": [104, 105, 111, 319], "f_0": [104, 105, 109, 111, 172, 319], "jt_0": [104, 319], "oscil": [104, 108, 110, 111, 319], "frequenct": 104, "span": [104, 105, 106, 107, 109, 111], "frquenci": [104, 105, 107, 108, 109, 110, 111, 138, 313], "oscillas": 104, "suggeest": [104, 105, 108, 109, 110, 111], "wt": [104, 105, 106, 107, 109, 111, 319], "wf": [104, 105, 106, 107, 109, 111, 319], "effici": [104, 105, 106, 107, 109, 111, 349, 350, 351, 352, 353], "easi": [104, 105, 106, 107, 109, 111], "gabor_wavelet": 104, "a1": 104, "a2": 104, "wt1": [104, 105, 106, 107, 109, 111, 319], "wf1": [104, 105, 106, 107, 109, 111, 319], "wt2": [104, 105, 106, 107, 109, 111, 319], "wf2": [104, 105, 106, 107, 109, 111, 319], "jft_0": [105, 319], "parametr": 105, "spread": [105, 146, 180, 181, 186, 187, 319], "bandwidth": [105, 108, 109, 110, 319], "gauss": [105, 108, 110, 180, 318, 339, 348], "q2": [105, 319], "f01": [105, 319], "f02": [105, 319], "2f": [105, 136, 137, 220, 221], "morlat": 106, "5t": [106, 319], "k_": [106, 319], "5w": [106, 319], "2e": [106, 111, 319], "morlet": [106, 108, 110, 318, 339, 348], "morlet_wavelet": [106, 108, 110], "sig1": 106, "sig2": 106, "poisson": [107, 108, 110, 318, 339, 348], "jw": [107, 319], "admidd": [107, 319], "const": [107, 319], "dt": [107, 244, 252, 253, 256, 275, 294, 319], "jt": [107, 111, 319], "unit": [107, 140, 141, 142, 156, 158, 166, 167, 241, 245, 246, 247, 257, 313, 319], "integ": [107, 156, 158, 159, 166, 167, 255, 257, 268, 319], "exactli": [107, 108, 110], "compatibil": [107, 108, 110], "framework": [107, 108, 110], "yet": [107, 108, 110, 348], "produc": [107, 135, 146, 238, 352], "poisson_wavelet": [107, 108, 110], "fftmeth": [108, 110], "frequeci": [108, 110, 276, 292, 312], "scall": [108, 110, 228], "plote": [108, 110, 133, 242], "etc": [108, 110, 135, 238], "complext": 108, "accept": [108, 173, 225], "maxican": [108, 111, 318, 339, 348], "shannon": [108, 109, 110, 170, 318, 339, 348], "fw": [108, 109, 110], "logspac": [108, 110], "001": [108, 110, 250], "interg": [108, 110], "maxicanhat": [108, 110, 111], "complex_mexican_hat_wavelet": [108, 110, 111], "shannon_wavelet": [108, 109, 110], "xn": 108, "2j": [109, 319], "f_0t": [109, 319], "prod": [109, 319], "w_0": [109, 111, 304, 319], "leq": [109, 319], "dfft": 110, "experiment": [110, 140, 141, 142], "freq": [110, 172], "hat": [111, 319], "erf": [111, 319], "slog": 112, "return_para": [113, 121, 123, 125, 126, 130, 131], "wrong": 113, "distibut": 113, "turn": [113, 149, 150, 222, 223, 284, 285, 351, 352, 353], "irrelev": 113, "func": [113, 238, 246], "1x2": [113, 126], "translat": [113, 126], "place": [113, 126, 281], "circl": [113, 126, 201], "radian": [113, 126, 135], "slope": [113, 123, 279, 282], "bia": [113, 123], "contact": [114, 120], "electrocardiogram": [114, 115, 116, 117, 118, 119, 120, 122, 127, 128], "egm_sampl": [114, 115, 116, 117, 118, 119, 122, 127, 128], "copper": [116, 122], "plat": [116, 122], "part": [116, 117, 118, 119, 122, 128, 225, 226, 304], "electrodermal_act": [116, 122], "fname": [117, 119, 129, 255], "eeg16secdata": 117, "pkl": [117, 119], "xtype": 118, "eeg16sec_artifact": 119, "x_fil": 119, "x_ica": 119, "aftifact": [119, 144], "x_atar_soft": 119, "x_atar_elim": 119, "electr": 120, "physiolog": [120, 157, 169, 275, 313, 323], "mixtur": 121, "arg": 124, "showplot": [125, 147], "rabbit": 127, "cam1": 127, "cam2": 127, "obtain": 128, "puls": 128, "sensor": [128, 146], "primitive_polynomials_gf2_dict": 129, "txt": [129, 300, 302], "primit": 129, "till": [129, 252, 253, 256], "pplist": 129, "sinusod": [130, 276, 313], "keep_scal": 132, "often": [132, 235, 238, 241], "rel": [132, 238, 241, 242], "nkernel": 132, "denprmis": 132, "11111111": 132, "scaling_db": [133, 134], "normalize_win": 133, "discret": [133, 134, 136, 137, 267, 318, 337, 348], "ofshap": 133, "rectangular": [133, 172, 288, 292], "log2": [133, 172, 279, 292, 312], "wondow": 133, "recommend": [133, 136, 137, 176, 178, 238, 352], "phse": 133, "along": [133, 138, 139, 140, 141, 142, 175, 265, 272, 290], "spectra": [133, 134, 138, 292, 293], "idft": [133, 134, 276, 279, 280, 292, 293], "istft": [133, 134, 276, 279, 280, 292, 293], "frourier": [133, 134, 276, 279, 280, 292, 293], "discrete_fourier_transform": [133, 134], "rescal": [134, 268], "undo": 134, "synthes": [134, 280, 293, 351, 352, 353], "still": [134, 135, 181, 186, 327], "wa": [134, 135, 290, 291, 313, 346], "rectangu": 134, "flow": 135, "backgound": 135, "streamlin": 135, "locat": [135, 138, 146, 221, 222, 223, 235, 236, 237, 238, 240, 241, 242, 244, 248, 252, 253, 256, 261, 262, 281, 284, 285], "behind": [135, 352], "metric": [135, 238, 250, 252, 253, 256], "confid": 135, "uncertain": [135, 170, 313], "best": 135, "look": [135, 252, 256, 301], "uniform": [135, 170, 208, 312, 313], "prepand": 135, "string": [135, 252, 253, 255, 256, 303, 351, 352, 353], "new_size_of_grid": 135, "old_size_of_grid": 135, "configur": [135, 238], "keyword": [135, 138, 139], "seprat": [135, 238], "2g": 135, "annot_kw": 135, "linecolor": 135, "white": [135, 196], "cbar_kw": 135, "cbar_ax": 135, "pydata": [135, 288], "pivot": 135, "shaft": 135, "headwidthfloat": 135, "headlengthfloat": 135, "headaxislengthfloat": 135, "minshaftfloat": 135, "minlengthfloat": 135, "_as_gen": 135, "quiver": 135, "arrows": 135, "arrowstyl": 135, "minlength": 135, "zorder": [135, 272], "start_point": 135, "maxlength": 135, "integration_direct": 135, "broken_streamlin": 135, "streamplot": 135, "tupl": [135, 136, 158, 166, 167, 246, 248, 257, 304], "propoerti": 135, "itself": [135, 222, 223, 238, 284, 285, 288], "anyth": 135, "retur": 135, "headwidth": 135, "headlength": 135, "headaxislength": 135, "minshaft": 135, "ax_theta": [135, 240, 272], "ax_bad": [135, 240, 272], "xy": [135, 146, 147, 159, 165, 252, 253, 256, 348], "mapping_typ": [136, 137], "de_norm": [136, 137], "h_": [136, 137, 157, 159, 160, 161, 162, 163, 164, 167, 168, 169, 171, 258, 348], "calcul": [136, 137], "multiscal": [136, 137, 164], "quantiz": [136, 137, 267, 268, 312, 313], "downsampl": [136, 234, 331], "multipscal": 136, "npp": [136, 137], "outcom": [136, 137], "incorrect": [136, 137], "never": [136, 137], "nomal": [136, 137], "npf": [136, 137], "worst": [136, 137], "lack": [136, 137], "word": [136, 137], "achiev": [136, 137], "nup": [136, 137], "sens": [136, 137, 151, 152, 153, 180, 181, 183, 227], "me": [136, 137], "disp_entr": [136, 137], "x_discret": [136, 137], "total_patterns_found": [136, 137], "total_patterns_poss": [136, 137], "dispersion_entropy_multiscale_refin": [136, 164, 312], "entropy_spectr": [136, 137, 156, 157, 164, 168, 169, 171, 313, 351, 352, 353], "entropy_svd": [136, 137, 156, 157, 164, 168, 169, 170, 313], "entropy_permut": [136, 137, 156, 157, 164, 169, 170, 171, 313], "permut": [136, 137, 156, 157, 164, 168, 169, 170, 171, 222, 223, 284, 285, 348], "entropy_differenti": [136, 137, 156, 157, 168, 169, 170, 171, 273, 312, 351, 353], "differenti": [136, 137, 156, 157, 162, 164, 165, 168, 169, 170, 171, 181, 186, 238, 260, 273, 275, 296, 297, 309, 318, 327, 337, 348], "ieeexplor": 136, "7434608": 136, "h_de1": [136, 137, 312], "prob1": [136, 137, 312], "h_d": [136, 137], "refin": [137, 138, 139, 222, 223, 238, 241, 262, 284, 285], "defin": [137, 222, 223, 238, 241, 284, 285, 313, 319], "disctionari": 137, "welch": [138, 139, 145, 149, 150, 170, 263, 313], "hann": [138, 139, 145, 149, 150, 172, 263, 279], "exclude_lower_fr": [138, 139], "refine_peak": [138, 139], "nperseg": [138, 139, 145, 149, 150, 170, 263], "return_spectrum": [138, 139], "discern": 138, "physiologi": 138, "prefer": [138, 139], "posibl": [138, 305, 306], "periodogram": [138, 139, 149, 150, 170, 261, 262, 313, 352], "further": [138, 175, 252, 253, 323], "parobol": [138, 139], "spectum": [138, 139, 276], "peridogram": [138, 139], "dc": [138, 139, 176, 177, 184, 323], "2hz": [138, 139], "aadit": [138, 139], "df": [138, 139, 286, 289, 291], "clean_phas": [138, 139, 264, 265], "local": [138, 312], "pmc5673341": [138, 139], "dfq": 138, "dfq1": 138, "frq1": [138, 263], "dfq2": 138, "frq2": [138, 263], "dfq3": 138, "mx3": 138, "frq3": 138, "dfq4": 138, "mx4": 138, "frq4": 138, "3f": 138, "win_len": 139, "move": [139, 323], "df_win": 139, "nw": 139, "chekc": 139, "variat": [139, 145, 149, 150, 275, 294, 295], "wpd_mode": [140, 141, 142, 305, 306], "recons_method": [140, 141, 142], "ham": [140, 141, 142, 144, 149, 150, 263, 279, 292, 306], "hopes": [140, 141, 142, 144, 306], "packetwis": [140, 141, 142, 305, 306], "lvl": [140, 141, 142, 305, 306], "theta_g": [140, 141, 142], "theta_b": [140, 141, 142], "interpercentil": [140, 141, 142], "aggress": [140, 141, 142], "bound": [140, 141, 142, 294], "defult": [140, 141, 142, 146, 237], "microvolt": [140, 141, 142], "uv": [140, 141, 142, 246], "theshold": [140, 141, 142], "express": [140, 141, 142, 164, 312], "equat": [140, 141, 142, 254, 287], "w_max": [140, 141, 142], "vebos": 140, "recommoned": [140, 141, 142], "recommond": [140, 141, 142, 176, 181, 186, 221, 238, 275], "decompisiton": [140, 141, 142], "hamwin": [140, 141, 142], "IT": [140, 141, 142, 240], "multipl": [140, 141, 144, 245, 246, 265, 291], "doi": [140, 142, 143, 164, 312], "1016": [140, 142], "bspc": [140, 142], "xc": [140, 142], "x_c": [140, 142], "tuanabl": [141, 142, 144], "normalizeeachband": 143, "spatio": 143, "ssfi": 143, "ximg": 143, "3d": [143, 150, 198, 199, 203, 206, 216, 222, 223, 284, 285, 338, 348], "nt": [143, 150], "chennel": [143, 238, 243], "instant": 143, "project": [143, 146, 151, 152, 153, 154, 198, 199, 203, 205, 212, 213, 222, 223, 284, 285], "improt": 143, "requena": 143, "carri\u00f3n": 143, "deep": 143, "scienc": [143, 351, 352, 353], "9825": 143, "3390": 143, "app13179825": 143, "link": [143, 349], "frameon": [143, 150, 275], "winmeth": 144, "r3cb126c15dac": 144, "icam": 144, "accur": [144, 155], "vise": 144, "versa": 144, "cbiey": 144, "ind": 144, "win": [145, 149, 150, 263, 312], "detrend": [145, 149, 150, 263], "noverlap": [145, 149, 150, 263], "rhythm": [145, 149, 150], "5b73": [145, 149], "20of": [145, 149], "20eeg": [145, 149], "20band": [145, 149], "bind": [145, 149], "within": [145, 149, 221, 238, 241], "zi": [146, 147, 154], "1020": 146, "electro": 146, "IF": 146, "sure": [146, 222, 223, 238, 284, 285], "interest": [146, 220], "addtion": [146, 155], "modifi": [146, 288, 305, 306, 313], "displi": 146, "supress": 146, "shift_origin": [146, 147], "postion": 146, "fx": [146, 147, 246, 247, 319], "fy": [146, 147], "lim": 146, "rx": [146, 198, 199, 203, 222, 223, 284, 285], "ry": [146, 198, 199, 203, 222, 223, 284, 285], "radiu": [146, 201, 203, 285], "ellip": 146, "clip": [146, 175, 305, 306], "outter": 146, "area": [146, 190], "poisit": 146, "dx": [146, 155, 220, 221, 275, 294], "dy": 146, "gca": 146, "contours_n": 146, "contours_lw": 146, "showsensor": [146, 147, 154], "cicl": 146, "sensor_prop": 146, "fontdict": [146, 147], "font_prop": 146, "showhead": [146, 147, 154], "head": [146, 290, 291], "head_prop": [146, 147], "markers": 146, "showbound": [146, 147], "bound_prop": [146, 147], "oval": 146, "show_vhlin": [146, 147], "verticl": [146, 248], "through": [146, 193, 206], "show_colorbar": 146, "colorbar_label": 146, "match_sh": [146, 147], "crop": [146, 184, 244], "obatain": 146, "exterpol": [146, 174, 175], "gen_ssfi": 146, "returnim": 147, "f1": [147, 216, 252, 254, 256, 301], "f2": [147, 254, 301], "r1": 147, "r2": [147, 207], "markeredgewidth": 147, "sensorprop": 147, "fontkwd": 147, "ir": 148, "kersiz": 148, "rgb": 148, "filter_kwarg": [149, 150], "periodogram_kwarg": [149, 150], "filter_warn": [149, 150], "periodogram_warn": [149, 150], "overrid": [149, 150, 238], "filtfilt": [149, 150, 178, 329], "overid": [149, 150], "show_plot": [149, 150, 170, 263, 313], "statement": [149, 150], "pdt": 150, "case_sensit": [151, 152, 153], "reorder": [151, 152, 153], "clean_label": [151, 152, 153], "use_precomput": [151, 152, 153], "lowercas": [151, 152, 153], "rearrag": [151, 152, 153], "doesn": [151, 152, 153, 156, 158, 159, 166, 167, 255, 257], "close": [153, 181, 186, 221, 250, 327], "match": [153, 313], "mariust": 153, "hart": 153, "show_lin": 155, "find": [155, 231, 237, 238, 241], "elbow": 155, "knee": 155, "perpendicular": 155, "distanc": [155, 198, 199, 222, 223, 238, 240, 284, 285, 313, 338, 348], "dist": [155, 198], "argmax": 155, "show_dist": 155, "excecut": 155, "command": 155, "knee_of_a_curv": 155, "return_n_bin": [156, 158, 159, 166, 167, 257], "ignorezero": [156, 158, 159, 166, 167, 257], "\u03b1": 156, "generalis": [156, 313], "form": [156, 192, 239, 240, 246, 247, 248, 313], "collis": [156, 313], "nat": [156, 158, 164, 166, 167, 170, 257, 273, 312, 313], "ban": [156, 158, 166, 167, 257, 313], "versionad": 156, "omit": [156, 158, 159, 166, 167, 257], "entropy_": 156, "458019387223165": [156, 313], "043357283463282": [156, 313], "9996833158270148": [156, 313], "8503760993630085": [156, 313], "ae": [157, 348], "suit": [157, 169, 313], "iid": [157, 169, 313], "symbol": [157, 169, 298, 299, 313], "tolar": [157, 169, 313], "absolut": [157, 169, 242, 313], "consequit": [157, 169, 280], "quit": [157, 169, 170, 313], "approximate_entropi": 157, "5661144425748899": 157, "20696275451476875": 157, "nx": [158, 159, 166, 167, 257], "ny": [158, 159, 166, 167, 257], "hx1y": 158, "divers": [158, 159, 166, 167, 257], "h_x1y1": [158, 313], "h_x1y2": [158, 313], "096371831484375": 158, "260323284620403": 158, "648381759654535": [158, 159, 167], "pre_vers": [159, 167], "h_xy": [159, 162, 167, 273], "h_xy1": [159, 160, 162, 163, 166, 167, 312, 313], "h_xy2": [159, 160, 162, 163, 167, 312, 313], "020654071198377": 159, "529035477039111": 159, "present_first": [160, 161, 163, 165, 258, 259, 260, 273, 296, 297, 312], "partial": [160, 161, 162, 163, 164, 165, 258, 259, 260, 273, 296, 297, 348], "x_i": [160, 161, 163, 165, 258, 259, 260, 273, 296, 297, 312], "y_i": [160, 163, 165, 258, 260, 273, 296, 297, 312], "past": [160, 161, 163, 165, 258, 259, 260, 296, 297], "h_x1y": [160, 163], "entropy_diff_cond_self": [160, 162, 273, 296, 312], "signal_delayed_spac": [160, 161, 162, 163, 164, 165, 258, 259, 260, 296, 297, 312], "h_y1x": [160, 312], "h_y2x": [160, 312], "h_x1x": [161, 273, 312], "entropy_diff_cond": [161, 162, 273, 296, 312], "y_": [163, 165, 260, 273, 296, 297, 348], "entropy_diff_joint": [163, 258, 259, 273, 312], "is_multidim": [164, 273, 312], "exclude_const": 164, "return_cov": 164, "raise_error": 164, "multivari": [164, 273, 312], "\u03c3": [164, 273, 312], "ln": [164, 273, 312], "2\u03c0": [164, 273, 312], "multidimension": 164, "statproofbook": [164, 312], "mvn": [164, 312], "dent": [164, 312], "multivariate_normal_distribut": [164, 312], "differential_entropi": [164, 312], "gokhal": [164, 312], "dv": [164, 244, 312], "ahm": [164, 312], "na": [164, 312], "bc": [164, 312], "piscatawai": [164, 312], "nj": [164, 312], "1989": [164, 312], "Their": [164, 312], "688": [164, 312], "692": [164, 312], "1109": [164, 312], "30996": [164, 312], "hd0": [164, 312], "hd1": [164, 312], "directli": [164, 312], "granger": [165, 260, 273, 296, 297, 348], "causal": [165, 176, 178, 260, 273, 296, 297, 348], "gc_": [165, 348], "yx": 165, "xdy": 165, "gc": 165, "gc_xy": [165, 273], "gc_yx": [165, 273], "gc_xdy": [165, 273], "transfer_entropi": [165, 260, 273, 297, 351, 353], "transfer": [165, 260, 273, 296, 297, 318, 337, 348], "transfer_entropy_cond": [165, 296], "partial_transfer_entropi": [165, 273, 296, 297, 351, 353], "gc_x1y1": 165, "gc_y1x1": 165, "gc_x1dy1": 165, "gc_x1y2": 165, "gc_y2x1": 165, "gc_x1dy2": 165, "histogram2d": 166, "hxy": 166, "52651374518646": 166, "h_kl": [167, 313], "37227231154384194": 167, "8806537173845745": 167, "h_pi": 168, "bandt": 168, "christoph": 168, "bernd": 168, "pomp": 168, "natur": [168, 312, 313], "physic": 168, "review": 168, "letter": 168, "2002": 168, "174102": 168, "h_p": [168, 313], "5156504111997058": 168, "556358399367036": 168, "sampen": [169, 313], "se": [169, 348], "computation": 169, "sample_entropi": 169, "6757312057041359": 169, "6700625342505353": 169, "h_f": [170, 313], "drawn": [170, 288, 313], "distrobut": [170, 313], "almost": [170, 221, 312], "wekch": 170, "h_fx": 170, "hx1": [170, 313], "hx2": [170, 313], "hx1_se": [170, 313], "hx2_se": [170, 313], "hx1_n": [170, 313], "hx2_n": [170, 313], "hx1_se_n": [170, 313], "hx2_se_n": [170, 313], "label1": [170, 313], "label2": [170, 313], "p1x": [170, 313], "f1q": [170, 313], "p2x": [170, 313], "f2q": [170, 313], "889476342103717": 170, "7850662938305786": 170, "950686888274901": 170, "8204484006660255": 170, "9826348642134711": 170, "3972294995395931": 170, "8308686349524237": 170, "8445663920995877": 170, "h_svd": 171, "34210072132884417": 171, "394331263550738": 171, "f0err": 172, "return_cand": 172, "twm": 172, "shorter": [172, 237, 238, 242, 292], "resolt": [172, 234, 292], "upto": [172, 290, 291, 292], "neg": [172, 220, 221, 235, 236, 238, 241, 243, 244, 279], "maximim": 172, "f0cand": 172, "correspod": [172, 227], "f0_cand": 172, "f0_mag": 172, "set_label": 172, "perfect": 173, "iffrft": [173, 185, 226], "kind": [174, 175, 220, 221, 238, 312], "nearest": [174, 175, 199, 338, 348], "slinear": [174, 175], "quadrat": [174, 175], "cubic": [174, 175], "restore_original_valu": 175, "exter": 175, "polat": 175, "smoot": 175, "restor": 175, "denot": 175, "convol": 175, "conv_nan": 175, "odd": [175, 177, 182, 292], "l0": 175, "smotth": 175, "xk": 175, "x_fill": 175, "x_smooth": 175, "return_background": [176, 177, 323], "initialize_zero": 176, "remv": [176, 323], "drift": [176, 177, 182, 238, 242, 275, 338, 348], "implemenat": [176, 323], "initi": [176, 245], "slowli": 176, "savitzki": [176, 177, 178, 180, 181, 182, 183, 184, 238, 242, 275, 338, 348], "golai": [176, 177, 178, 180, 181, 182, 183, 184, 238, 242, 275, 338, 348], "employ": 176, "introduc": [176, 178, 313], "dc_bia": 176, "polyord": [177, 182, 238, 242, 323, 327], "interp": [177, 182], "cval": [177, 182], "fluctuat": [177, 182], "neget": [177, 182], "curvei": [177, 182], "savgol_filt": [177, 182], "xm": 177, "filterdc": [177, 184, 323], "93golay_filt": 177, "filtr_keywor": 178, "buttorworth": [178, 323], "basic": [178, 351, 352, 353], "wrapper": 178, "cut": [178, 184], "lowpass": [178, 179, 184, 338, 348], "bandstop": [178, 338, 348], "lfilter": 178, "sosfilt": 178, "sosfiltfilt": 178, "butterworth": [178, 179], "digit": 178, "cascad": 178, "filter_smooth_sgolai": [178, 180, 181, 183, 184, 275, 327, 351, 352, 353], "filter_smooth_gauss": [178, 181, 182, 183, 184, 220, 221, 275, 327, 351, 352, 353], "filter_smooth_mollifi": [178, 180, 182, 183, 265, 351, 352, 353], "mollifi": [178, 180, 181, 182, 183, 186, 265, 338, 348], "filter_with_kernel": [178, 180, 181, 182, 184, 186, 187, 275, 351, 352, 353], "filtering_pipelin": 178, "filter_powerlin": [178, 184], "powerlin": [178, 179, 184, 323, 338, 348], "interfer": [178, 338, 348], "butterworth_filt": 178, "4hz": 178, "12hz": 178, "interef": [179, 184], "equivil": 179, "interf": 179, "50hz": [179, 184], "60hz": [179, 184], "sigma_scal": [180, 183, 186, 187, 327], "xf2": [180, 182, 327], "xf3": [180, 182, 327], "wl": [180, 182, 254], "kurt": [181, 186, 187, 327], "otto": [181, 186, 187, 327], "friedrich": [181, 186, 187, 327], "sharp": [181, 186, 327], "remain": [181, 186, 327], "nonsmooth": [181, 186, 327], "intuit": [181, 186, 327], "irregular": [181, 186, 327], "infinit": [181, 186, 327], "analyt": [181, 186, 264, 327], "vanish": [181, 186, 327], "therefor": [181, 186, 241, 327], "middl": [181, 186, 237, 238, 244], "narrow": [181, 186], "flate": [181, 186], "triangular": [181, 186, 288], "kurt_otto_friedrich": [181, 186, 327], "x_n": 181, "shuffl": [181, 252, 255, 256], "retain": [182, 276], "sharpen": 183, "custamis": 183, "proces": 183, "kernel1": [183, 186, 187], "kernel2": [183, 186, 187], "friedrichs_mollifier_kernel": [183, 187], "window_s": [183, 186, 187], "kernel3": [183, 186, 187], "y3": [183, 186, 187, 198, 199, 222, 223, 268, 284, 285, 331], "231": [183, 186, 187], "trim": 184, "iir_alpha": 184, "sg_window": [184, 220, 221, 235, 236, 238, 242, 244, 275], "1001": 184, "sg_itr": 184, "filter_lpf": 184, "filter_pwrlin": 184, "last_filter_keyword": 184, "sgolai": [184, 220, 221, 235, 236], "interefer": [184, 323], "trime": [184, 301], "1sec": 184, "empti": [184, 227, 242, 246, 248, 305, 306], "ffrft": [185, 225, 226], "fractional_fourier_transform": 185, "ker_mol": 186, "ker": 187, "xy_loc": 188, "plane": [188, 193, 206], "get_imag": 188, "get_image2": 188, "triangul": [189, 194, 195, 197], "graph": [189, 222, 223, 284, 285, 338, 348], "getborder_edg": 189, "getedges_idx": 189, "get_tri_with_edg": 189, "indx2points_edg": 189, "isedge_intri": 189, "removetri_with_edg": 189, "seledg": 189, "get_edges_deg": 189, "deg": 189, "edg": [189, 244], "p1": [190, 241], "p2": [190, 241], "p3": 190, "triangl": 190, "spheric": [191, 215], "adjm": [192, 197, 198, 199, 222, 284], "ordin": 192, "adjac": [192, 197, 198, 199, 211, 222, 284, 338, 348], "v_i": 192, "v_j": 192, "vertex": 192, "connect": [192, 197, 198, 199, 222, 232, 284, 348], "cordin": 192, "lamda": 193, "face": [194, 195, 197, 229, 231, 232], "npoint_rot": 195, "zshift": 195, "remove_self_con": [197, 198, 199], "ignore_matrix": [197, 198, 199], "trianglut": 197, "node2c": [197, 198, 199, 211], "node_a": [197, 198, 199], "list_of_nodes_connected_to_node_a": [197, 198, 199], "euclidean": [198, 199], "get_ellipsoid": [198, 199, 222, 223, 284, 285], "rz": [198, 199, 203, 222, 223, 284, 285], "adjm1": [198, 199, 222, 284], "adjm2": [198, 199, 222, 284], "adjm3": [198, 199, 222, 284], "graph_filter_adj": [198, 199, 223, 284, 285, 351, 353], "exclude_self": [198, 199, 222, 223, 284, 285], "subplot_kw": [198, 199, 203, 222, 223, 284, 285], "scatter3d": [198, 199, 203, 222, 223, 284, 285], "view_init": [198, 199, 203, 222, 223, 284, 285], "elev": [198, 199, 203, 222, 223, 284, 285], "azim": [198, 199, 203, 222, 223, 284, 285], "roll": [198, 199, 203, 222, 223, 284, 285], "set_zlim": [198, 199, 203, 222, 223, 284, 285], "knn": 199, "neibhbour": 199, "neareast": 199, "neighbour": [199, 338, 348], "accend": 199, "rl": 202, "rmax": 202, "phi_rang": [203, 207], "283185307179586": [203, 207], "theta_rang": [203, 207], "ellipsoid": 203, "get_sphar": 203, "get_circl": 203, "get_circular_grid": 203, "get_squar": 203, "get_square_grid": 203, "neibour": [204, 222, 223, 284, 285], "lamd": 206, "r3": 207, "sphare": 207, "vl": 209, "hl": 209, "inpeterpol": 210, "xp1": 213, "xp1c": 213, "xp2": 213, "7853981633974483": 214, "cartesiancoordin": 215, "colormap_valu": 216, "value_rang": 216, "show_point": 216, "scale_factor": 216, "scale_mod": 216, "scalars_mag": 216, "colormap_arr": 216, "arr_rang": 216, "tip_length": 216, "tip_radiu": 216, "shaft_radiu": 216, "color_mod": 216, "color_by_scalar": 216, "fign": 216, "98": [216, 244], "surfac": [216, 217], "mayavi": 216, "shift_mean": 217, "only_out": 217, "recosntruct": 217, "detail_level": [219, 286], "return_nam": 219, "quick": [219, 289], "min_dvdt": [220, 221, 235, 236, 238, 244], "gradient_method": [220, 221, 235, 236, 238, 244], "fdiff": [220, 221, 235, 236, 238, 244, 275], "gauss_window": [220, 221, 235, 236, 238, 244, 275], "gauss_itr": [220, 221, 235, 236, 238, 244, 275], "gradient": [220, 221, 235, 236, 244, 254, 275, 318, 337, 348], "depolaris": [220, 235, 236], "heart": [220, 221, 235, 236], "occur": [220, 221, 235, 236, 238], "biolog": [220, 235, 236], "electorgram": [220, 235, 236], "deflect": [220, 221, 235, 236, 238, 241, 244], "dvdt": [220, 221, 235, 236], "volatg": [220, 221, 235, 236], "sometim": [220, 235, 236, 238, 244], "mislead": [220, 235, 236], "locatio": [220, 244], "action": 220, "potenti": 220, "max_dvdt": [220, 221, 235, 236, 237, 238, 244], "unipolar": 220, "consod": 220, "max_abs_dvdt": [220, 221, 235, 236], "liter": [220, 221], "agre": [220, 221], "fgrad": [220, 221, 235, 236, 244, 275], "sgdiff": [220, 221, 235, 236, 244, 275], "sgdrift_diff": [220, 221, 235, 236, 244, 275], "sgsmooth_diff": [220, 221, 235, 236, 244, 275], "gauss_diff": [220, 221, 235, 236, 244, 275], "npdiff": [220, 221, 235, 236, 244, 275, 294, 295], "signal_diff": [220, 221, 235, 236, 244, 351, 353], "mag": [220, 221, 244, 276], "get_repolarisation_tim": [220, 235, 236, 238], "pmc1458874": 220, "opencarp": 220, "02_ep_tissu": 220, "08_lat": 220, "idea": [55, 220, 237, 238, 312], "t_rang": [221, 235, 236, 241, 242], "contrast": [221, 235], "recoveri": [221, 235], "hard": [221, 235], "reliabl": [221, 235, 241], "lost": [221, 235], "restrict": [221, 235, 236], "search": [221, 235, 236, 237, 238, 241], "whole": [221, 235, 236, 248], "gap": 221, "alwai": [221, 275, 290, 291], "wyatt": 221, "diffrent": 221, "get_activation_tim": [221, 235, 236, 238, 244], "pmc10119409": 221, "pmc4315451": 221, "sort_with_dist": [222, 223, 284, 285], "default_valu": [222, 223, 284, 285], "media": [222, 223, 272, 284, 285], "invari": [222, 223, 284, 285], "iof": [222, 223, 284, 285], "mena": [222, 284], "sapc": [222, 223, 284, 285], "geomartri": [222, 223, 284, 285], "callabl": [222, 223, 284, 285], "newfun": [222, 223, 284, 285], "neigbour": [222, 223, 284, 285], "variant": [222, 223, 284, 285], "extra": [222, 223, 241, 284, 285], "home": [222, 284], "geometri": [222, 223, 231, 284, 285], "get_adjacency_matrix_knn": [222, 284], "proxim": [223, 285, 338, 348], "spatial_filter_adj": [223, 285], "spatial_filter_dist": 223, "disctribut": 224, "800": 224, "1200": 224, "count": [224, 252, 253, 256], "imaginari": [225, 226], "recostruct": [226, 265, 276], "readsign": 227, "fs_meth": 227, "getsamplefrequ": 227, "attr": 227, "channel_axi": 227, "edf": [227, 340, 348], "bdf": [227, 238, 340, 348], "medic": 227, "instrument": [227, 323], "my_signal_record": 227, "fileobj": 227, "ith": 227, "numnber": 227, "signals_in_fil": 227, "attrs_default": 227, "patient": 227, "methds_deafult": 227, "getsignallabel": 227, "ch_header": 227, "getsignalhead": 227, "gender": 227, "getgend": 227, "sex": 227, "getsex": 227, "getfiledur": 227, "cahnnel": 227, "attribu": 227, "read_surf": [227, 228, 231, 232, 310], "read_vtk": [227, 228, 229, 232, 310], "write_vtk": [227, 228, 229, 231, 310], "full_accessible_path": [227, 228, 229, 231, 232], "to_bdf_fil": 227, "max_volt": [228, 238], "base_kei": 228, "signal_hkei": 228, "recording_0": 228, "analogstream": 228, "stream_0": 228, "signal_kei": 228, "channeldata": 228, "info_kei": 228, "infochannel": 228, "ch_axi": 228, "hierarch": [228, 303, 342], "25khz": [228, 237, 238, 243, 244], "datatyp": [228, 238], "recoridng": [228, 238], "int32": [228, 238], "32768": [228, 238], "32767": [228, 238], "float32": [228, 238], "store": 228, "n_ch": [228, 237], "to_hdf_fil": 228, "surf": [229, 230, 340, 348], "geenrat": 229, "to_surf_fil": 229, "v_name": 231, "f_name": 231, "polygon": 231, "nv_idx": 231, "nf_idx": 231, "vtk": [231, 232, 340, 348], "contain": [231, 235, 236], "access": [231, 238], "to_vtk_fil": [231, 232], "filenam": 232, "paraview": 232, "kitwar": 232, "softwar": [232, 238], "reli": 232, "writer": 232, "legagi": 232, "ascii": 232, "mesh": 232, "disk": 232, "num": 233, "decim": [234, 245, 246, 247, 290, 291, 312, 331], "x_low": 234, "cdf_map": [234, 268], "2000": [234, 331], "reoolaris": 235, "seperatli": 235, "spike": [237, 238, 248], "1m": [237, 238, 243], "ve": [237, 238, 241, 244, 268], "1hz": [237, 238], "cylc": [237, 243], "n_sampl": 237, "n_cycl": 237, "repol_comput": 238, "recor": 238, "datafram": [238, 240, 286, 289, 290, 291], "export": 238, "argumet": 238, "well": [238, 244, 272, 275], "optimis": 238, "8x8": [238, 240, 247, 248], "datamanag": 238, "eg": 238, "mea_north_1000_1hz": 238, "mutipl": 238, "unnormalis": 238, "consol": 238, "silent": [238, 241, 248, 252, 254, 256], "stim_id_param": 238, "finit": [238, 275], "fist": 238, "id": 238, "2m": [238, 243], "safe": 238, "side": [238, 242, 243], "1st": 238, "2nd": 238, "3rd": [238, 287], "cancel": 238, "at_id_param": 238, "exctract": [238, 242], "egm_id_param": 238, "apply_aft": [238, 242], "10m": 238, "eletrogram": 238, "91": [238, 242], "enough": [238, 242], "appropri": [238, 242], "intermedi": [238, 242, 275], "egm_feat_param": 238, "energi": [238, 241], "overview": 238, "hight": [238, 241], "region": [238, 241, 248, 312], "explain": [238, 241, 291], "exce": [238, 241], "similarli": [238, 241], "goe": [238, 241], "mm": [238, 240], "epsilon": [238, 240], "dive": [238, 240], "boot": [238, 240], "longer": 238, "bad_ch_thr": 238, "valtag": 238, "threhold": [238, 290, 291], "descres": 238, "dfault": 238, "okai": 238, "grater": 238, "mention": 238, "alwasi": 238, "map_prop": 238, "customis": 238, "colormap": [238, 245, 246, 247], "p2p_rang": 238, "dur_rang": 238, "f_rang": 238, "cv_rang": 238, "apd_rang": 238, "at_cmap": 238, "countour_n": 238, "countour_clr": 238, "countour": 238, "conducnt": [238, 240], "across": 238, "labe": 238, "tab": 238, "fdf": 238, "fch": 238, "fmat": 238, "arrang": [239, 246, 247, 248, 249], "mea8x8": 239, "unarrange_mea_grid": 239, "elctrod": 240, "featir": 240, "matix": 240, "inpterpol": 240, "volateg": 241, "pictori": 241, "v1": 241, "v2": 241, "p12": 241, "p11": 241, "p22": 241, "p21": 241, "positive_peak_height": 241, "negative_peak_height": 241, "situat": 241, "everi": 241, "pair": [241, 288, 290], "positive_fr_peak": 241, "negative_fr_peak": 241, "fration": 241, "consider": 241, "6745": [241, 305, 306], "peak2peak": 241, "findex": 241, "85450567176613": 241, "872375332449366": 241, "0013948950132979746": 241, "3948950132979747": 241, "86761415086482": 241, "314866535924523": 241, "001132594661436981": 241, "132594661436981": 241, "0126410178332197": 241, "501": 242, "plot_toffset": 242, "______________________": 242, "cylcl": [242, 248], "over": [243, 279, 351, 352, 353], "\u00b5v": 243, "electod": 243, "ploot": 243, "bad_channels_idx": 243, "stimlu": 244, "number_sampl": 244, "abs_dvdt": 244, "transit": 244, "stim_mag": 244, "quarter": 244, "zoom": [244, 248], "precis": [245, 246, 247], "obj": [245, 288], "arrag": 246, "inclus": [247, 248], "showm": 247, "fx_bad": 247, "fxb": 247, "rep_spik": 248, "fill_apd": 248, "fill_color": 248, "limi": 248, "red": [248, 298, 299, 300, 302], "blue": [248, 298, 299, 300, 302], "green": [248, 298, 299], "shade": 248, "specif": 248, "y0": 248, "edit": [248, 304], "revers": 249, "chanel": 249, "compare_ms": 250, "plot_log": 250, "show_legend": 250, "mmse": 250, "mmins": 250, "sum_0": [250, 251], "min_samples_split": [252, 253, 256], "min_impur": [252, 253, 256], "thresholdfrommean": [252, 253, 256], "super": [252, 253, 256, 312], "decisiontre": [252, 256, 351, 352, 353], "decsion": [252, 256], "decreas": [252, 253], "impur": [252, 253], "selct": [252, 253], "concecut": [252, 253], "feaur": [252, 253], "mlend_happiness_dataset": [252, 255, 256], "happi": [252, 255, 256], "mlendhd_attribut": [252, 255, 256], "ag": [252, 255, 256], "happinesslevel": [252, 255, 256], "x_train": [252, 255, 256], "x_test": [252, 255, 256], "y_train": [252, 255, 256], "y_test": [252, 255, 256], "leaf_label": [252, 253, 256], "unhappi": 252, "dictdepth": [252, 253, 256], "fn": [252, 256], "trainign": [252, 253, 256], "get_tre": [252, 253, 256], "learnign": [252, 253, 256], "showdirect": [252, 253, 256], "hline": [252, 253, 256], "dcml": [252, 253, 256], "plottreepath": [252, 253, 256], "treepath": [252, 253, 256], "ttftft": [252, 253, 256], "label_count": [252, 253, 256], "returen": [252, 253, 256], "predic": [252, 253, 256], "y_prob": [252, 253, 256], "y_count": [252, 253, 256], "y_path": [252, 253, 256], "prunetre": [252, 253, 256], "prun": [252, 253, 256], "set_featurenam": [252, 253, 256], "set_xynod": [252, 253, 256], "lxy": [252, 253, 256], "rxy": [252, 253, 256], "ldiff": [252, 253, 256], "showtre": [252, 253, 256], "helper": [252, 253, 256], "fot": [252, 253, 256], "shrinktre": [252, 253, 256], "shink": [252, 253, 256], "treedepth": [252, 253, 256], "prune": [252, 253, 256], "y_p": 254, "sigmoid": 254, "softmax": 254, "decent": 254, "elast": 254, "intercept": 254, "toler": 254, "stop": 254, "n_class": 254, "n_featur": 254, "add_gridspec": 254, "add_subplot": 254, "alphap": 254, "8833333333333333": 254, "08365012491975303": 254, "polyfeatur": 254, "extrat": 254, "printat": 254, "warm": 254, "debug": 254, "reiniti": 254, "getweight": 254, "getweightsaslist": 254, "hardbound": 254, "alphab": 254, "probal": 254, "show_eq": 254, "dictionri": 255, "308": 255, "215": 255, "8558139534883721": 255, "8924731182795699": 255, "unappi": 255, "mlend": 255, "signma": 255, "probabiltii": 255, "mutut": 257, "i_xy1": [257, 258, 312, 313], "i_xy2": [257, 258, 312, 313], "29196123466326007": 257, "6874431530714116": 257, "i_": [258, 259, 348], "i_x1i": 258, "mutual_info_diff_self": [258, 273, 312], "i_x1x": [259, 312], "i_y1i": [259, 312], "entopri": [260, 273, 297], "te_": [260, 273, 296, 297, 348], "z_i": [260, 273, 297], "te_x2y1z": [260, 273, 297], "entropy_granger_caus": [260, 273, 296, 297, 351, 353], "te_x_y1_1z": [260, 297], "te_x_y2_1z": [260, 297], "te_y1_x_1z": [260, 297], "te_y2_x_1z": [260, 297], "te": [260, 296, 297], "ploc": [261, 262], "parabol": 262, "loction": 262, "kp_": 262, "kp": 262, "kp_new": 262, "iploc": 262, "ipmag": [262, 281], "ipphas": [262, 281], "peak_detect": 262, "peak_int": 262, "2500": 262, "showlog": 263, "return_frq": 263, "px1": 263, "px2": [263, 313], "tan": 264, "a_i": 264, "a_x": 264, "hilbert": 264, "ht": 264, "analytic_sign": 264, "amp_shift": 265, "amp_mult": 265, "cleaning_phas": 265, "mollier": 265, "substract": 265, "new_amplitud": 265, "old_amplitud": 265, "suddon": 265, "deatult": 265, "instanteni": 265, "x_e": 265, "venn": 266, "distplot": 266, "jointplot": 266, "printval": 266, "min_bin": 267, "keep_amp_scal": 267, "bin_method": [267, 268], "n_level": [268, 331], "keep_rang": 268, "bin_scal": 268, "min_level": 268, "equalis": [268, 331], "cummul": [268, 331], "optimum": 268, "bw_scale": 268, "compad": 268, "y_int": 268, "post": 268, "nonlinear": 268, "mu_law": 268, "yint": [268, 331], "m3": [268, 331], "all_arrow_prop": 272, "edgecolor": 272, "facecolor": 272, "avg_arrow_prop": 272, "045": 272, "ax_theta_avg": 272, "ax_theta_avg_bd": 272, "usu": [273, 312], "formula": 273, "h_x1xy": 273, "h_xy1xi": 273, "entropy_diff_joint_cond": [273, 312], "i_xx": 273, "i_xi": 273, "mutual_info_diff": [273, 312], "eq1": [273, 296], "eq2": [273, 296], "te_x2i": [273, 296], "gauss_sigscal": 275, "event": 275, "kernal": 275, "derivet": 275, "unnecessari": 275, "compl": 275, "1701": 275, "00439": 275, "023": 275, "dx1": 275, "dx2": 275, "singal": 275, "wave": [276, 279], "dirichlet": 277, "blackman_lob": 277, "sinc_funct": 277, "dirichlet_kernel": 277, "fxt": [279, 280], "synthesis": 280, "ipfreq": 281, "pphase": 282, "tfreq": [282, 283], "freqdevoffset": 282, "freqdevslop": 282, "current": [282, 298, 299], "incom": 282, "0hz": [282, 323], "tfreqn": [282, 283], "tmagn": 282, "tphasen": 282, "mintracklength": 283, "delet": 283, "fragment": 283, "special": [284, 285, 313], "graph_filter_dist": [285, 351, 353], "add_esp": 286, "q25": [286, 289], "q75": [286, 289], "kur": [286, 289], "skw": [286, 289], "gmean": 286, "stats_nam": 286, "sdf": [286, 289], "quick_stat": 286, "029575": 286, "016306": 286, "0001": 286, "522644": 286, "942269": 286, "726123": 286, "640879": 286, "367002": 286, "017887": 286, "007691": 286, "530046": 286, "945704": 286, "return_thr": 287, "beyond": 287, "l_t": 287, "u_t": 287, "eqaut": 287, "x_outlr": 287, "indentifi": 287, "tuppl": 287, "x_outlr1": 287, "lt1": 287, "ut1": 287, "x_outlr2": 287, "lt2": 287, "ut2": 287, "box_palett": 288, "dodg": 288, "notch": 288, "showmean": 288, "show_box": 288, "lines_group": 288, "group_color": 288, "boxplot": 288, "trend": 288, "tilt": 288, "palett": 288, "box": 288, "pastel": 288, "husl": 288, "set2": 288, "flare": 288, "meanprop": 288, "colour": 288, "line_kw": 288, "line_marker_kw": 288, "markerfacecolor": 288, "box_kw": 288, "color_palett": 288, "x4": 288, "unpair": [288, 290], "return_t": 289, "get_stat": 289, "003649": 289, "022257": 289, "000009": 289, "486239": 289, "938597": 289, "71816": 289, "66914": 289, "3873": 289, "029687": 289, "013038": 289, "declar": [290, 291], "cohen": 290, "statisit": 290, "interpret": 290, "avail": [290, 291, 346, 352], "doubl": 290, "df_test": [290, 291], "df_esiz": 290, "test_group": [290, 341], "view": [290, 303, 342], "27s_t": 290, "wilcoxon_sign": 290, "rank_test": 290, "wilk": 290, "93wilk_test": 290, "27s_test": 290, "anova": 291, "000111": 291, "388809": 291, "choic": 292, "del_f": 292, "def_f": 292, "poor": 292, "nframe": 293, "tv": 294, "sum_n": 294, "tv_x1": 294, "tv_x2": 294, "tv_win": 295, "total_vari": [295, 351, 353], "te_x_y1": 296, "te_x_y2": 296, "te_y1_x": 296, "te_y2_x": 296, "te_y1_y2": 296, "selftermin": [298, 299], "sym": [298, 299], "cyan": [298, 299], "yellow": [298, 299, 300, 302], "termin": [298, 299, 300, 302], "compat": 299, "jupyterlab": 299, "progbar": [299, 313, 342], "txcolor": [300, 342], "cred": [300, 302], "font": [300, 302], "endc": [300, 302], "byellow": [300, 302], "cblue": [300, 302], "okgreen": [300, 302], "trimlength": 301, "pretti": 301, "seper": [301, 303, 327], "item": 301, "lpa": 301, "rpa": 301, "nz": 301, "fp1": 301, "fpz": 301, "fp2": 301, "af9": 301, "af7": 301, "af5": 301, "af1": 301, "afz": 301, "af2": 301, "af6": 301, "af8": 301, "af10": 301, "f9": 301, "f5": 301, "fz": 301, "f6": 301, "f10": 301, "ft9": 301, "ft7": 301, "fc3": 301, "fc1": 301, "fcz": 301, "fc2": 301, "fc4": 301, "ft8": 301, "ft10": 301, "t9": 301, "c5": 301, "c4": 301, "c6": 301, "t10": 301, "bcolor": 302, "file_obj": 303, "return_str": 303, "attribuet": 303, "printabl": 303, "dobj": 303, "plot_fin": 304, "w_1": 304, "w_2": 304, "sum_": [304, 313], "w_k": 304, "slow": [304, 323], "down": 304, "wpa_plot": [304, 308, 351, 353], "wavelet_transform": 304, "sf": [305, 306], "plot_abs_coef": [305, 306], "dwt": 305, "idwt": 305, "2logn": [305, 306], "kr": [305, 306], "threshold_l": [305, 306], "tukei": [305, 306], "fenc": [305, 306], "thompson": [305, 306], "tau": [305, 306], "coeefici": [305, 306, 307], "zere": [305, 306], "clipe": [305, 306], "obov": [305, 306], "global": [305, 306], "wintyp": 306, "windowing_befor": 306, "fumction": 306, "long": 308, "unlik": [312, 319], "fine": 312, "assig": 312, "think": 312, "belong": 312, "impliment": 312, "\u00b5": 312, "skipe": 312, "everu": 312, "hhave": 312, "third": [312, 352], "actual": 312, "deal": 312, "noth": 312, "eegsampl": 312, "log_": 312, "2774414315752844": 312, "patter": 312, "int64": 312, "86637389336799": 312, "de_tempor": 312, "scl": 312, "sacl": 312, "5456280627759336": 312, "6984938704051236": 312, "682837351130069": 312, "5585556625642476": 312, "7480275694000103": 312, "4767472897625806": 312, "543855087400606": 312, "greek": 313, "concept": 313, "infrom": 313, "disord": 313, "thermo": 313, "1803": 313, "1877": 313, "1948": 313, "claud": 313, "uncertian": 313, "surpris": 313, "rightarrow": [313, 348], "straighforward": 313, "4488156358175899": 313, "4488156357251847": 313, "stabil": 313, "computat": 313, "dit": 313, "hartlei": 313, "sphx_glr_auto_examples_information_theory_plot_it_discreet_exampl": 313, "notion": 313, "ne": 313, "equip": 313, "minmum": 313, "5849625007211563": 313, "5093848128656548": 313, "366782329927496": 313, "2471013326629172": 313, "2223924209998192": 313, "elwood": 313, "mathemat": 313, "commun": 313, "journal": 313, "379": 313, "deminesion": 313, "rare": 313, "exact": 313, "mind": 313, "typic": 313, "though": 313, "cosid": 313, "characterst": 313, "indirect": 313, "propos": 313, "let": 313, "thicksim": 313, "aprroxim": 313, "23429": 313, "23462": 313, "59213": 313, "19315": 313, "67204": 313, "24992": 313, "11875": 313, "06139": 313, "1625": 313, "0159": 313, "now": [313, 348, 352], "px3": 313, "parenttoc": 318, "gausswav": 319, "mexican": 319, "exponenti": 319, "exploit": 319, "baselin": 323, "wonder": 323, "appear": 323, "carri": 323, "vital": 323, "major": [323, 349, 350, 351, 352, 353], "unintend": 323, "unimport": 323, "caus": 323, "underli": 323, "studi": 323, "wander": 323, "quantize_sign": [331, 351, 353], "sinasudol": [337, 348], "bandreject": [338, 348], "gropu": [340, 348], "statict": 341, "progross": 342, "view_hierarchical_ord": 342, "cours": 346, "introduct": 346, "mainli": 346, "focus": 346, "languag": 346, "sceinc": 346, "materi": 346, "hypothesi": 346, "roc": 346, "plan": 346, "tutori": 347, "enhanc": [349, 350, 351, 352, 353], "page": 349, "tip": 349, "subscrib": 349, "notifi": 349, "elbow_knee_point": [351, 353], "simplify_sign": [351, 353], "core": [351, 353], "infotheori": [351, 353], "geomatri": [351, 353], "functionaliet": [351, 352, 353], "artic": [351, 352, 353], "sciencedirect": [351, 352, 353], "pii": [351, 352, 353], "s1746809419302058": [351, 352, 353], "algorith": [351, 352, 353], "countinu": [351, 352, 353], "tar": [351, 352, 353], "gz": [351, 352, 353], "treat": 352, "nmf": 352, "minibatchnmf": 352, "25438": 352, "yotam": 352, "avidar": 352, "constantini": 352, "get_feature_names_out": 352, "notfittederror": 352, "metadata": 352, "rout": 352, "enable_metadata_rout": 352, "enabl": 352, "set_config": 352, "config_context": 352, "parti": 352, "prepar": 352, "strongli": 352, "hide": 352, "24027": 352, "adrin": 352, "jalali": 352, "benjamin": 352, "bossan": 352, "omar": 352, "salman": 352, "demo1": 32, "demo2": 32, "979": [], "467": [], "446": [], "ramajuna": 32, "992": [32, 34], "395": [33, 34], "387": 34, "45836212511516": 15, "050864252588681": 15, "9997601726826201": 15, "8586045779433459": 15, "878442630682764": 15, "874297680532265": 15, "836835178964307": 15, "241": [15, 17, 344], "medium": [], "90myhbr8osb": [], "introdcut": 346, "dl": 346, "cu_fdp": [], "artifici": 346, "intellig": 346, "supervis": 346, "deliv": 346, "invit": 346, "talk": 346, "slide": 346, "ppt": 346, "tutorials_ml_dl": [], "intorduction_to_ml_": [], "_dl_30_07_21": [], "pptx": [], "26_dl_30_07_21": [], "nbviewer": 346, "mnist": 346, "deeplearn": 346, "googl": 346, "colab": 346, "tinyurl": 346, "mltutori": 346, "cu": 346, "fdp": 346, "chandigarh": 346, "univers": 346, "faculti": 346, "why": 55, "relseas": [], "pypi": 55, "histori": []}, "objects": {"": [[67, 0, 0, "module-0", "spkit"]], "spkit": [[73, 1, 1, "", "A_law"], [75, 2, 1, "", "ICA"], [76, 1, 1, "", "Mu_law"], [77, 1, 1, "", "OutLiers"], [78, 2, 1, "", "PCA"], [79, 1, 1, "", "PeriodStrength"], [80, 1, 1, "", "RFB"], [81, 1, 1, "", "RFB_example_1"], [82, 1, 1, "", "RFB_example_2"], [83, 1, 1, "", "RFB_prange"], [84, 1, 1, "", "SVD"], [85, 1, 1, "", "TD_Embed"], [86, 1, 1, "", "TWM_algo"], [87, 1, 1, "", "TWM_f0"], [89, 1, 1, "", "WPA_temporal"], [90, 1, 1, "", "Wavelet_decompositions"], [91, 1, 1, "", "add_noise"], [92, 1, 1, "", "agg_angles"], [93, 1, 1, "", "bin_width"], [94, 1, 1, "", "blackman_lobe"], [95, 1, 1, "", "cdf_mapping"], [96, 1, 1, "", "clean_phase"], [97, 1, 1, "", "conv1d_fb"], [98, 1, 1, "", "conv1d_fft"], [99, 1, 1, "", "conv1d_nan"], [100, 1, 1, "", "conv2d_nan"], [74, 1, 1, "", "create_dictionary"], [101, 1, 1, "", "create_multidim_space_signal"], [102, 1, 1, "", "create_signal_1d"], [103, 1, 1, "", "create_signal_2d"], [67, 0, 0, "-", "data"], [132, 1, 1, "", "denorm_kernel"], [133, 1, 1, "", "dft_analysis"], [134, 1, 1, "", "dft_synthesis"], [135, 1, 1, "", "direction_flow_map"], [136, 1, 1, "", "dispersion_entropy"], [137, 1, 1, "", "dispersion_entropy_multiscale_refined"], [138, 1, 1, "", "dominent_freq"], [139, 1, 1, "", "dominent_freq_win"], [67, 0, 0, "module-1", "eeg"], [155, 1, 1, "", "elbow_knee_point"], [156, 1, 1, "", "entropy"], [157, 1, 1, "", "entropy_approx"], [158, 1, 1, "", "entropy_cond"], [159, 1, 1, "", "entropy_cross"], [160, 1, 1, "", "entropy_diff_cond"], [161, 1, 1, "", "entropy_diff_cond_self"], [162, 1, 1, "", "entropy_diff_joint"], [163, 1, 1, "", "entropy_diff_joint_cond"], [164, 1, 1, "", "entropy_differential"], [165, 1, 1, "", "entropy_granger_causality"], [166, 1, 1, "", "entropy_joint"], [167, 1, 1, "", "entropy_kld"], [168, 1, 1, "", "entropy_permutation"], [169, 1, 1, "", "entropy_sample"], [170, 1, 1, "", "entropy_spectral"], [171, 1, 1, "", "entropy_svd"], [172, 1, 1, "", "f0_detection"], [173, 1, 1, "", "ffrft"], [174, 1, 1, "", "fill_nans_1d"], [175, 1, 1, "", "fill_nans_2d"], [176, 1, 1, "", "filterDC"], [177, 1, 1, "", "filterDC_sGolay"], [178, 1, 1, "", "filter_X"], [179, 1, 1, "", "filter_powerline"], [180, 1, 1, "", "filter_smooth_gauss"], [181, 1, 1, "", "filter_smooth_mollifier"], [182, 1, 1, "", "filter_smooth_sGolay"], [183, 1, 1, "", "filter_with_kernel"], [184, 1, 1, "", "filtering_pipeline"], [185, 1, 1, "", "frft"], [186, 1, 1, "", "friedrichs_mollifier_kernel"], [187, 1, 1, "", "gaussian_kernel"], [218, 1, 1, "", "getQuickStats"], [219, 1, 1, "", "getStats"], [220, 1, 1, "", "get_activation_time"], [221, 1, 1, "", "get_repolarisation_time"], [222, 1, 1, "", "graph_filter_adj"], [223, 1, 1, "", "graph_filter_dist"], [224, 1, 1, "", "hist_plot"], [225, 1, 1, "", "iffrft"], [226, 1, 1, "", "ifrft"], [67, 0, 0, "-", "io"], [233, 1, 1, "", "is_power2"], [234, 1, 1, "", "low_resolution"], [250, 1, 1, "", "mean_minSE"], [251, 1, 1, "", "minMSE"], [67, 0, 0, "-", "ml"], [257, 1, 1, "", "mutual_info"], [258, 1, 1, "", "mutual_info_diff"], [259, 1, 1, "", "mutual_info_diff_self"], [260, 1, 1, "", "partial_transfer_entropy"], [261, 1, 1, "", "peak_detection"], [262, 1, 1, "", "peak_interp"], [263, 1, 1, "", "periodogram"], [264, 1, 1, "", "phase_map"], [265, 1, 1, "", "phase_map_reconstruction"], [266, 1, 1, "", "plotJointEntropyXY"], [267, 1, 1, "", "quantize_FD"], [268, 1, 1, "", "quantize_signal"], [269, 1, 1, "", "ramanujan_filter"], [270, 1, 1, "", "ramanujan_filter_prange"], [271, 1, 1, "", "regularised_period_estimation"], [272, 1, 1, "", "show_compass"], [273, 1, 1, "", "show_farmulas"], [274, 1, 1, "", "signal_delayed_space"], [275, 1, 1, "", "signal_diff"], [276, 1, 1, "", "simplify_signal"], [277, 1, 1, "", "sinc_dirichlet"], [278, 1, 1, "", "sinc_interp"], [279, 1, 1, "", "sineModel_analysis"], [280, 1, 1, "", "sineModel_synthesis"], [281, 1, 1, "", "sine_spectrum"], [282, 1, 1, "", "sine_tracking"], [283, 1, 1, "", "sinetracks_cleaning"], [284, 1, 1, "", "spatial_filter_adj"], [285, 1, 1, "", "spatial_filter_dist"], [292, 1, 1, "", "stft_analysis"], [293, 1, 1, "", "stft_synthesis"], [294, 1, 1, "", "total_variation"], [295, 1, 1, "", "total_variation_win"], [296, 1, 1, "", "transfer_entropy"], [297, 1, 1, "", "transfer_entropy_cond"], [304, 1, 1, "", "wavelet_decomposed_signals"], [305, 1, 1, "", "wavelet_filtering"], [306, 1, 1, "", "wavelet_filtering_win"], [307, 1, 1, "", "wpa_coeff"], [308, 1, 1, "", "wpa_coeff_win"], [88, 1, 1, "", "wpa_plot"]], "spkit.ICA": [[75, 3, 1, "", "fit"], [75, 3, 1, "", "get_sMatrix"], [75, 3, 1, "", "get_tMatrix"], [75, 3, 1, "", "transform"], [75, 3, 1, "", "whitening"]], "spkit.PCA": [[78, 3, 1, "", "fit"], [78, 3, 1, "", "fit_transform"], [78, 3, 1, "", "transform"], [78, 3, 1, "", "whitening"]], "spkit.cwt": [[104, 1, 1, "", "GaborWave"], [105, 1, 1, "", "GaussWave"], [106, 1, 1, "", "MorlateWave"], [107, 1, 1, "", "PoissonWave"], [108, 1, 1, "", "ScalogramCWT"], [109, 1, 1, "", "ShannonWave"], [110, 1, 1, "", "WavePSD"], [111, 1, 1, "", "cMaxicanHatWave"], [112, 1, 1, "", "compare_cwt_example"]], "spkit.data": [[113, 1, 1, "", "create_dataset"], [114, 1, 1, "", "ecg_sample"], [115, 1, 1, "", "ecg_sample_12leads"], [116, 1, 1, "", "eda_sample"], [117, 1, 1, "", "eeg_sample_14ch"], [118, 1, 1, "", "eeg_sample_1ch"], [119, 1, 1, "", "eeg_sample_artifact"], [120, 1, 1, "", "egm_sample"], [121, 1, 1, "", "gaussian"], [122, 1, 1, "", "gsr_sample"], [123, 1, 1, "", "linear"], [124, 1, 1, "", "linear_data"], [125, 1, 1, "", "mclass_gauss"], [126, 1, 1, "", "moons"], [127, 1, 1, "", "optical_sample"], [128, 1, 1, "", "ppg_sample"], [129, 1, 1, "", "primitive_polynomials"], [130, 1, 1, "", "sinusoidal"], [131, 1, 1, "", "spiral"]], "spkit.eeg": [[140, 1, 1, "", "ATAR"], [141, 1, 1, "", "ATAR_1Ch"], [142, 1, 1, "", "ATAR_mCh"], [144, 1, 1, "", "ICA_filtering"], [145, 1, 1, "", "RhythmicDecomposition"], [147, 1, 1, "", "TopoMap_Zi"], [148, 1, 1, "", "display_topo_RGB"], [143, 1, 1, "", "gen_ssfi"], [149, 1, 1, "", "rhythmic_powers"], [150, 1, 1, "", "rhythmic_powers_win"], [151, 1, 1, "", "s1005_get_epos2d"], [152, 1, 1, "", "s1010_get_epos2d"], [153, 1, 1, "", "s1020_get_epos2d"], [154, 1, 1, "", "showTOPO"], [146, 1, 1, "", "topomap"]], "spkit.geometry": [[188, 2, 1, "", "Inter2DPlane"], [189, 2, 1, "", "TriAng"], [190, 1, 1, "", "area_tri"], [191, 1, 1, "", "car2spar"], [192, 1, 1, "", "dir_vectors"], [193, 1, 1, "", "divide_space"], [194, 1, 1, "", "getTriFaces"], [195, 1, 1, "", "getTriFaces_V2"], [196, 1, 1, "", "get_PCA"], [197, 1, 1, "", "get_adjacency_matrix_depth"], [198, 1, 1, "", "get_adjacency_matrix_dist"], [199, 1, 1, "", "get_adjacency_matrix_kNN"], [200, 1, 1, "", "get_center"], [201, 1, 1, "", "get_circle"], [202, 1, 1, "", "get_circular_grid"], [203, 1, 1, "", "get_ellipsoid"], [204, 1, 1, "", "get_neibours"], [205, 1, 1, "", "get_optimal_projection"], [206, 1, 1, "", "get_plane"], [207, 1, 1, "", "get_sphare"], [208, 1, 1, "", "get_square"], [209, 1, 1, "", "get_square_grid"], [210, 1, 1, "", "lin_inter"], [211, 1, 1, "", "node2C_to_adjacency_matrix"], [212, 1, 1, "", "opt_project"], [213, 1, 1, "", "plot_proj"], [214, 1, 1, "", "rotation_matrix"], [215, 1, 1, "", "spar2car"], [216, 1, 1, "", "surface_plot_mayavi"], [217, 1, 1, "", "surface_reconstruction"]], "spkit.geometry.TriAng": [[189, 3, 1, "", "get_edges_deg"]], "spkit.io": [[227, 1, 1, "", "read_bdf"], [228, 1, 1, "", "read_hdf"], [229, 1, 1, "", "read_surf"], [230, 1, 1, "", "read_surf_file"], [231, 1, 1, "", "read_vtk"], [232, 1, 1, "", "write_vtk"]], "spkit.mea": [[235, 1, 1, "", "activation_repol_time_loc"], [236, 1, 1, "", "activation_time_loc"], [237, 1, 1, "", "align_cycles"], [238, 1, 1, "", "analyse_mea_file"], [239, 1, 1, "", "arrange_mea_grid"], [240, 1, 1, "", "compute_cv"], [241, 1, 1, "", "egm_features"], [242, 1, 1, "", "extract_egm"], [243, 1, 1, "", "find_bad_channels_idx"], [244, 1, 1, "", "get_stim_loc"], [245, 1, 1, "", "mat_1_show"], [246, 1, 1, "", "mat_list_show"], [247, 1, 1, "", "mea_feature_map"], [248, 1, 1, "", "plot_mea_grid"], [249, 1, 1, "", "unarrange_mea_grid"]], "spkit.ml": [[252, 2, 1, "", "ClassificationTree"], [253, 2, 1, "", "DecisionTree"], [254, 2, 1, "", "LogisticRegression"], [255, 2, 1, "", "NaiveBayes"], [256, 2, 1, "", "RegressionTree"]], "spkit.ml.ClassificationTree": [[252, 3, 1, "", "DictDepth"], [252, 3, 1, "", "fit"], [252, 3, 1, "", "getLcurve"], [252, 3, 1, "", "getTreeDepth"], [252, 3, 1, "", "get_tree"], [252, 3, 1, "", "plotLcurve"], [252, 3, 1, "", "plotTree"], [252, 3, 1, "", "plotTreePath"], [252, 3, 1, "", "predict"], [252, 3, 1, "", "predict_proba"], [252, 3, 1, "", "pruneTree"], [252, 3, 1, "", "set_featureNames"], [252, 3, 1, "", "set_xyNode"], [252, 3, 1, "", "showTree"], [252, 3, 1, "", "shrinkTree"], [252, 3, 1, "", "treeDepth"], [252, 3, 1, "", "updateTree"]], "spkit.ml.DecisionTree": [[253, 3, 1, "", "DictDepth"], [253, 3, 1, "", "fit"], [253, 3, 1, "", "getLcurve"], [253, 3, 1, "", "getTreeDepth"], [253, 3, 1, "", "get_tree"], [253, 3, 1, "", "plotLcurve"], [253, 3, 1, "", "plotTree"], [253, 3, 1, "", "plotTreePath"], [253, 3, 1, "", "predict"], [253, 3, 1, "", "predict_proba"], [253, 3, 1, "", "pruneTree"], [253, 3, 1, "", "set_featureNames"], [253, 3, 1, "", "set_xyNode"], [253, 3, 1, "", "showTree"], [253, 3, 1, "", "shrinkTree"], [253, 3, 1, "", "treeDepth"], [253, 3, 1, "", "updateTree"]], "spkit.ml.LogisticRegression": [[254, 3, 1, "", "Loss"], [254, 3, 1, "", "Normalize"], [254, 3, 1, "", "PolyFeature"], [254, 3, 1, "", "fit"], [254, 3, 1, "", "getWeights"], [254, 3, 1, "", "getWeightsAsList"], [254, 3, 1, "", "oneHot"], [254, 3, 1, "", "plot_Lcurve"], [254, 3, 1, "", "plot_boundries"], [254, 3, 1, "", "plot_weights"], [254, 3, 1, "", "plot_weights2"], [254, 3, 1, "", "predict"], [254, 3, 1, "", "predict_proba"], [254, 3, 1, "", "regularization"], [254, 3, 1, "", "sigmoid"], [254, 3, 1, "", "softmax"]], "spkit.ml.NaiveBayes": [[255, 3, 1, "", "VizPx"], [255, 3, 1, "", "fit"], [255, 3, 1, "", "predict"], [255, 3, 1, "", "predict_prob"], [255, 3, 1, "", "set_class_labels"], [255, 3, 1, "", "set_feature_names"]], "spkit.ml.RegressionTree": [[256, 3, 1, "", "DictDepth"], [256, 3, 1, "", "fit"], [256, 3, 1, "", "getLcurve"], [256, 3, 1, "", "getTreeDepth"], [256, 3, 1, "", "get_tree"], [256, 3, 1, "", "plotLcurve"], [256, 3, 1, "", "plotTree"], [256, 3, 1, "", "plotTreePath"], [256, 3, 1, "", "predict"], [256, 3, 1, "", "predict_proba"], [256, 3, 1, "", "pruneTree"], [256, 3, 1, "", "set_featureNames"], [256, 3, 1, "", "set_xyNode"], [256, 3, 1, "", "showTree"], [256, 3, 1, "", "shrinkTree"], [256, 3, 1, "", "treeDepth"], [256, 3, 1, "", "updateTree"]], "spkit.stats": [[286, 1, 1, "", "get_stats"], [287, 1, 1, "", "outliers"], [288, 1, 1, "", "plot_groups_boxes"], [289, 1, 1, "", "quick_stats"], [290, 1, 1, "", "test_2groups"], [291, 1, 1, "", "test_groups"]], "spkit.utils": [[298, 1, 1, "", "ProgBar"], [299, 1, 1, "", "ProgBar_JL"], [300, 2, 1, "", "bcolors"], [301, 1, 1, "", "pretty_print"], [302, 2, 1, "", "txcolors"], [303, 1, 1, "", "view_hierarchical_order"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"electroencephalographi": [0, 9, 64], "eeg": [0, 2, 3, 4, 5, 6, 7, 9, 14, 67, 70, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 319, 352], "atar": [1, 3, 5, 64, 140], "automat": 1, "tunabl": 1, "artifact": [1, 3, 4, 5, 64, 70], "remov": [1, 3, 4, 5, 64, 323, 326], "algorithm": [1, 54, 64], "appli": [1, 2], "soft": 1, "threshold": [1, 51], "linear": [1, 3, 123, 331], "attenu": [1, 3], "elimin": [1, 3], "tune": 1, "beta": 1, "control": 1, "aggress": 1, "elim": 1, "other": 1, "set": [1, 28], "chang": [1, 313], "wavelet": [1, 9, 33, 49, 50, 51, 67, 318, 319, 322, 327, 332, 339, 347], "function": [1, 54, 67, 312, 319], "upper": 1, "lower": 1, "bound": 1, "k_1": 1, "k_2": 1, "ipr": 1, "interpercentil": 1, "rang": [1, 38, 319], "us": [1, 3, 4, 5, 75, 81, 82, 91, 93, 99, 100, 102, 103, 108, 112, 113, 115, 117, 118, 133, 134, 135, 136, 140, 144, 146, 149, 150, 151, 152, 153, 156, 157, 158, 159, 166, 167, 169, 174, 175, 177, 178, 185, 224, 226, 228, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 254, 255, 256, 257, 269, 270, 271, 279, 280, 288, 290, 292, 293, 299, 301, 304, 305, 324, 328, 334], "fix": [1, 54], "theta_": 1, "alpha": [1, 313], "window": [1, 7, 312], "length": 1, "5": [1, 29, 66, 351, 352, 353], "sec": 1, "independ": 2, "principl": 2, "compon": 2, "analysi": [2, 9, 29, 40, 42, 49, 65, 66, 67, 311, 318, 319, 320, 322, 330, 333, 335, 336, 337, 339, 347], "load": [2, 3, 4, 5, 7], "filter": [2, 3, 4, 5, 7, 37, 38, 51, 63, 64, 65, 67, 322, 323, 324, 325, 326, 327, 328, 329, 338, 347], "signal": [2, 3, 4, 5, 7, 9, 14, 33, 36, 38, 39, 62, 67, 71, 318, 319, 321, 322, 331, 334, 337, 338, 346, 347], "ica": [2, 4, 5, 64, 75], "plot": [2, 3, 5, 6, 46, 66, 319], "decomposit": [2, 33, 51, 67], "construct": 2, "matric": 2, "extend": 2, "infomax": 2, "mode": [3, 5], "On": 4, "smaller": 4, "segment": 4, "three": 5, "correct": [5, 33], "residu": [5, 42], "comput": [6, 8, 17, 26, 29, 30, 34, 35, 44, 48, 52, 64, 66, 344], "rhythmic": [6, 7, 64], "featur": [6, 19, 29, 64, 66, 315], "phyaat": 6, "semant": 6, "dataset": [6, 25], "extract": [6, 29, 66], "compar": 6, "topograph": [7, 33, 64], "map": [7, 29, 33, 64, 66, 67, 331], "power": [7, 64], "topomap": [7, 146], "total": 7, "specif": [7, 38], "time": [7, 8, 17, 26, 29, 30, 34, 35, 44, 48, 52, 65, 66, 313, 336, 344, 347], "exampl": [9, 21, 22, 25, 28, 29, 33, 37, 38, 42, 47, 50, 57, 64, 66, 75, 81, 82, 91, 93, 99, 100, 102, 103, 108, 112, 113, 115, 117, 118, 133, 134, 135, 136, 140, 144, 146, 149, 150, 151, 152, 153, 156, 157, 158, 159, 166, 167, 169, 174, 175, 177, 178, 185, 224, 226, 228, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 254, 255, 256, 257, 269, 270, 271, 279, 280, 288, 290, 292, 293, 299, 301, 304, 305, 312, 313, 320, 322, 330, 335, 336], "multi": [9, 14, 27, 32, 33, 65, 66, 67, 312], "electrod": [9, 27, 32, 33, 66, 67], "arrai": [9, 27, 32, 33, 66, 67], "mea": [9, 27, 28, 29, 32, 33, 67, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 352], "releas": [9, 31, 32, 33, 58, 349], "highlight": [9, 31, 32, 33], "inform": [9, 10, 67, 309, 312, 313, 346], "theori": [9, 10, 67, 309, 346], "machin": [9, 18, 67, 314, 346], "learn": [9, 18, 67, 314, 346], "process": [9, 32, 33, 36, 62, 66, 67, 318, 346, 347, 352], "statist": [9, 45, 67, 340, 341], "dispers": [11, 12, 312], "entropi": [11, 12, 13, 14, 15, 16, 67, 156, 311, 312, 313], "embed": [11, 312], "dim": 11, "top": 12, "pattern": 12, "discreet": [13, 313, 322], "sourc": [13, 15, 313], "channel": [14, 29, 65, 66, 70], "real": [15, 67, 70, 313], "valu": [15, 33, 313], "sampl": [16, 57, 67, 68, 69, 70, 312, 313], "approxim": [16, 313], "comparison": [16, 50], "decis": [19, 20, 21, 22, 23, 315], "tree": [19, 20, 21, 22, 23, 315], "without": 19, "convert": 19, "catogor": 19, "classif": [20, 21, 25, 315, 316], "depth": 20, "boundari": 20, "shrink": [21, 22, 315], "capabl": [21, 22], "regress": [22, 24, 315, 316], "visualis": [23, 24, 25, 315], "while": 23, "buid": 23, "logist": [24, 316], "naiv": [25, 317], "bay": [25, 317], "classifi": 25, "1": [25, 29, 37, 40, 47, 66, 312, 319, 323, 351, 352, 353], "iri": 25, "2": [25, 29, 33, 37, 40, 47, 51, 66, 319, 351, 352, 353], "breast": 25, "cancer": 25, "3": [25, 29, 39, 40, 66, 319, 351, 352, 353], "digit": 25, "minim": 28, "result": 28, "step": [29, 66], "wise": [29, 66], "read": [29, 66, 67, 310], "file": [29, 42, 66, 67, 310], "stim": [29, 66], "localis": [29, 66], "align": [29, 66], "cycl": [29, 66], "4": [29, 40, 66, 312, 351, 352, 353], "averag": [29, 66], "select": [29, 66], "one": [29, 66], "6": [29, 32, 66, 351, 352, 353], "activ": [29, 65, 66], "repolaris": [29, 66], "7": [29, 33, 66, 351, 352, 353], "apd": [29, 66], "8": [29, 66, 351, 352, 353], "egm": [29, 65, 66], "9": [29, 32, 33, 66, 351, 352, 353], "10": [29, 33, 38, 39, 66], "bad": [29, 66], "11": [29, 66], "matrix": [29, 66, 67, 324, 328], "12": [29, 66, 70], "interpol": [29, 66], "13": [29, 66], "conduct": [29, 66], "veloc": [29, 66], "spkit": [32, 33, 58, 67, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 352], "0": [32, 33, 38, 351, 352, 353], "20": [33, 42], "system": 33, "locat": 33, "all": 33, "eletrod": 33, "05": 33, "convolut": [33, 347], "miss": 33, "nan": 33, "fill": 33, "inter": 33, "exterpol": 33, "decomp": 33, "ramanujan": [32, 37, 38, 39, 67, 333], "bank": [37, 38], "demo": 37, "diff": 37, "period": [32, 37, 38, 39, 333], "snr": [38, 39], "estim": [32, 38], "from": [38, 42], "multipl": 38, "dictionari": 39, "spars": 39, "penalti": 39, "synthesi": [40, 42, 43, 320, 330, 335, 336], "model": [40, 42, 43, 67, 334, 335], "dft": [40, 334], "stft": [40, 42], "fraction": [40, 41, 330], "fourier": [40, 41, 320, 330, 336, 347], "transform": [40, 41, 67, 319, 322, 330, 332, 336], "frft": [40, 41, 185], "sinasodu": 40, "audio": [40, 42, 43, 319], "sinusoid": [42, 43, 130, 335], "download": 42, "onli": 42, "sinusod": 42, "track": 42, "discard": 42, "part": 42, "mostli": 42, "hiss": 42, "sound": 42, "save": 42, "plai": 42, "jupyt": 42, "auditori": 46, "attent": 46, "group": [46, 47, 341], "data": [46, 57, 67, 68, 70, 71, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 346], "test": [47, 54, 341], "two": [47, 341], "pair": 47, "unpair": 47, "scalogram": [50, 319], "cwt": [50, 67, 104, 105, 106, 107, 108, 109, 110, 111, 112], "gauss": [50, 319], "morlet": [50, 319], "gabor": [50, 319], "poisson": [50, 319], "complex": [50, 334], "maxican": [50, 319], "shannon": [50, 312, 313, 319], "optim": 51, "an": [51, 312], "db3": 51, "With": [51, 319], "sd": 51, "iqr": 51, "limit": 51, "number": 51, "level": 51, "db12": 51, "symlet": 51, "sym4": 51, "coiflet": 51, "coif4": 51, "contribut": 53, "how": 53, "contibut": 53, "involv": 53, "develop": [54, 67, 348, 351, 353], "bug": 54, "document": 54, "improv": 54, "user": [54, 348], "guid": [54, 348], "tutori": [54, 346], "ad": 54, "new": [54, 67], "version": [55, 351, 352, 353], "empti": [56, 343], "page": [56, 343], "head": [56, 343], "get": 57, "start": 57, "instal": [57, 58, 348], "api": [57, 67], "latest": 58, "troubleshoot": 58, "option": [58, 66], "tabl": 59, "Of": 59, "content": 59, "biomed": 62, "electrocardiographi": 63, "clean": 63, "r": 63, "peak": 63, "detect": 63, "preprocess": 64, "electrogram": [65, 72], "phase": [65, 67], "complet": 66, "record": 66, "hdf": [66, 310], "rt": 66, "i": [66, 67, 312, 313, 347], "identifi": 66, "creat": 66, "figur": 66, "refer": [67, 312, 313, 327], "funtion": 67, "core": [67, 352], "advanc": 67, "sythesi": 67, "advnace_techniqu": 67, "dwt": 67, "method": [32, 67, 333], "simul": [67, 71], "event": 67, "angl": 67, "domin": 67, "frequenc": [67, 319, 347], "ml": [67, 71, 252, 253, 254, 255, 256, 352], "For": 67, "statistist": 67, "stat": [67, 286, 287, 288, 289, 290, 291, 352], "write": [67, 310], "o": 67, "io": [67, 227, 228, 229, 230, 231, 232, 310], "util": [67, 298, 299, 300, 301, 302, 303, 340, 342], "geometr": 67, "under": [67, 348, 351, 353], "geometri": [67, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217], "TO": 67, "BE": 67, "deprec": 67, "data2": 69, "world": 70, "14": 70, "singl": 70, "ecg": 70, "lead": 70, "optic": 70, "rabbit": 70, "heart": 70, "ppg": 70, "photoplethysmogram": 70, "gsr": 70, "eda": 70, "galvan": 70, "skin": 70, "respons": 70, "1d": 71, "arbitari": 71, "2d": 71, "imag": 71, "patch": 71, "a_law": 73, "create_dictionari": 74, "mu_law": 76, "outlier": [77, 287], "pca": 78, "periodstrength": 79, "rfb": 80, "rfb_example_1": 81, "rfb_example_2": 82, "rfb_prang": 83, "svd": [84, 313], "td_emb": 85, "twm_algo": 86, "twm_f0": 87, "wpa_plot": 88, "wpa_tempor": 89, "wavelet_decomposit": 90, "add_nois": 91, "agg_angl": 92, "bin_width": 93, "blackman_lob": 94, "cdf_map": 95, "clean_phas": 96, "conv1d_fb": 97, "conv1d_fft": 98, "conv1d_nan": 99, "conv2d_nan": 100, "create_multidim_space_sign": 101, "create_signal_1d": 102, "create_signal_2d": 103, "gaborwav": 104, "gausswav": 105, "morlatewav": 106, "poissonwav": 107, "scalogramcwt": 108, "shannonwav": 109, "wavepsd": 110, "cmaxicanhatwav": 111, "compare_cwt_exampl": 112, "create_dataset": 113, "ecg_sampl": 114, "ecg_sample_12lead": 115, "eda_sampl": 116, "eeg_sample_14ch": 117, "eeg_sample_1ch": 118, "eeg_sample_artifact": 119, "egm_sampl": 120, "gaussian": [121, 327], "gsr_sampl": 122, "linear_data": 124, "mclass_gauss": 125, "moon": 126, "optical_sampl": 127, "ppg_sampl": 128, "primitive_polynomi": 129, "spiral": 131, "denorm_kernel": 132, "dft_analysi": 133, "dft_synthesi": 134, "direction_flow_map": 135, "dispersion_entropi": 136, "dispersion_entropy_multiscale_refin": 137, "dominent_freq": 138, "dominent_freq_win": 139, "atar_1ch": 141, "atar_mch": 142, "gen_ssfi": 143, "ica_filt": 144, "rhythmicdecomposit": 145, "topomap_zi": 147, "display_topo_rgb": 148, "rhythmic_pow": 149, "rhythmic_powers_win": 150, "s1005_get_epos2d": 151, "s1010_get_epos2d": 152, "s1020_get_epos2d": 153, "showtopo": 154, "elbow_knee_point": 155, "entropy_approx": 157, "entropy_cond": 158, "entropy_cross": 159, "entropy_diff_cond": 160, "entropy_diff_cond_self": 161, "entropy_diff_joint": 162, "entropy_diff_joint_cond": 163, "entropy_differenti": 164, "entropy_granger_caus": 165, "entropy_joint": 166, "entropy_kld": 167, "entropy_permut": 168, "entropy_sampl": 169, "entropy_spectr": 170, "entropy_svd": 171, "f0_detect": 172, "ffrft": 173, "fill_nans_1d": 174, "fill_nans_2d": 175, "filterdc": 176, "filterdc_sgolai": 177, "filter_x": 178, "filter_powerlin": 179, "filter_smooth_gauss": 180, "filter_smooth_mollifi": 181, "filter_smooth_sgolai": 182, "filter_with_kernel": 183, "filtering_pipelin": 184, "friedrichs_mollifier_kernel": 186, "gaussian_kernel": 187, "inter2dplan": 188, "triang": 189, "area_tri": 190, "car2spar": 191, "dir_vector": 192, "divide_spac": 193, "gettrifac": 194, "gettrifaces_v2": 195, "get_pca": 196, "get_adjacency_matrix_depth": 197, "get_adjacency_matrix_dist": 198, "get_adjacency_matrix_knn": 199, "get_cent": 200, "get_circl": 201, "get_circular_grid": 202, "get_ellipsoid": 203, "get_neibour": 204, "get_optimal_project": 205, "get_plan": 206, "get_sphar": 207, "get_squar": 208, "get_square_grid": 209, "lin_int": 210, "node2c_to_adjacency_matrix": 211, "opt_project": 212, "plot_proj": 213, "rotation_matrix": 214, "spar2car": 215, "surface_plot_mayavi": 216, "surface_reconstruct": 217, "getquickstat": 218, "getstat": 219, "get_activation_tim": 220, "get_repolarisation_tim": 221, "graph_filter_adj": 222, "graph_filter_dist": 223, "hist_plot": 224, "iffrft": 225, "ifrft": 226, "read_bdf": 227, "read_hdf": 228, "read_surf": 229, "read_surf_fil": 230, "read_vtk": 231, "write_vtk": 232, "is_power2": 233, "low_resolut": 234, "activation_repol_time_loc": 235, "activation_time_loc": 236, "align_cycl": 237, "analyse_mea_fil": 238, "arrange_mea_grid": 239, "compute_cv": 240, "egm_featur": 241, "extract_egm": 242, "find_bad_channels_idx": 243, "get_stim_loc": 244, "mat_1_show": 245, "mat_list_show": 246, "mea_feature_map": 247, "plot_mea_grid": 248, "unarrange_mea_grid": 249, "mean_mins": 250, "minms": 251, "classificationtre": 252, "decisiontre": 253, "logisticregress": 254, "naivebay": 255, "regressiontre": 256, "mutual_info": 257, "mutual_info_diff": 258, "mutual_info_diff_self": 259, "partial_transfer_entropi": 260, "peak_detect": 261, "peak_interp": 262, "periodogram": 263, "phase_map": 264, "phase_map_reconstruct": 265, "plotjointentropyxi": 266, "quantize_fd": 267, "quantize_sign": 268, "ramanujan_filt": 269, "ramanujan_filter_prang": 270, "regularised_period_estim": 271, "show_compass": 272, "show_farmula": 273, "signal_delayed_spac": 274, "signal_diff": 275, "simplify_sign": 276, "sinc_dirichlet": 277, "sinc_interp": 278, "sinemodel_analysi": 279, "sinemodel_synthesi": 280, "sine_spectrum": 281, "sine_track": 282, "sinetracks_clean": 283, "spatial_filter_adj": 284, "spatial_filter_dist": 285, "get_stat": 286, "plot_groups_box": 288, "quick_stat": 289, "test_2group": 290, "test_group": 291, "stft_analysi": 292, "stft_synthesi": 293, "total_vari": 294, "total_variation_win": 295, "transfer_entropi": 296, "transfer_entropy_cond": 297, "progbar": 298, "progbar_jl": 299, "bcolor": 300, "pretty_print": 301, "txcolor": 302, "view_hierarchical_ord": 303, "wavelet_decomposed_sign": 304, "wavelet_filt": 305, "wavelet_filtering_win": 306, "wpa_coeff": 307, "wpa_coeff_win": 308, "edf": 310, "bdf": 310, "surf": 310, "vtk": 310, "applic": 311, "transfer": [311, 320], "te_": 311, "x": [311, 312, 313], "rightarrow": 311, "y": [311, 312, 313], "partial": [311, 312], "z": 311, "granger": 311, "causal": 311, "gc_": 311, "connect": 311, "differenti": [312, 321], "h_": [312, 313], "de": 312, "background": 312, "dimens": 312, "slide": 312, "scale": [312, 319], "multiscal": 312, "cdot": 312, "self": 312, "condit": [312, 313], "x_": 312, "y_": 312, "joint": [312, 313], "mutual": [312, 313], "i_": 312, "base": 313, "r\u00e9nyi": 313, "order": [313, 323], "h": 313, "cross": 313, "xy": 313, "kl": 313, "diverg": 313, "ae": 313, "se": 313, "spectral": [313, 323, 327, 329], "f": 313, "sigma": 313, "permut": 313, "pi": 313, "prone": 315, "catogori": 315, "continu": [319, 332], "paramet": 319, "default": 319, "q": 319, "speech": 319, "type": 319, "n": 319, "discret": 320, "gradient": 321, "shrinkag": 322, "packag": 322, "decompos": 322, "tempor": [322, 331], "drift": 323, "iir": 323, "savitzki": [323, 327], "golai": [323, 327], "graph": 324, "adjac": [324, 328], "proxim": [324, 328], "distanc": [324, 328], "nearest": [324, 328], "neighbour": [324, 328], "kernel": 325, "pipelin": 326, "powerlin": 326, "interfer": 326, "smooth": 327, "mollifi": 327, "spatial": 328, "3d": 328, "lowpass": 329, "highpass": 329, "bandpass": 329, "bandreject": 329, "bandstop": 329, "custom": 329, "quantiz": 331, "low": 331, "resolut": 331, "non": 331, "A": 331, "law": 331, "\u03bc": 331, "cdf": 331, "simplifi": 334, "sinasudol": 334, "short": 336, "gropu": 341, "scienc": 346, "program": 346, "interact": 346, "wigdet": 346, "what": 347, "domain": 347, "histori": 349, "experiment": [351, 353], "infotheori": 352, "geomatri": 352, "packet": 33, "blog": 346, "session": 346}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Electroencephalography (EEG)": [[0, "electroencephalography-eeg"], [9, "electroencephalography-eeg"]], "ATAR: Automatic and Tunable Artifact Removal Algorithm": [[1, "atar-automatic-and-tunable-artifact-removal-algorithm"]], "Applying ATAR Algorithm": [[1, "applying-atar-algorithm"]], "Soft Thresholding:": [[1, "soft-thresholding"]], "Linear Attenuation:": [[1, "linear-attenuation"]], "Elimination:": [[1, "elimination"]], "Tuning \\beta with \u2018soft\u2019 : Controlling the aggressiveness": [[1, "tuning-beta-with-soft-controlling-the-aggressiveness"]], "Tuning \\beta with \u2018elim\u2019": [[1, "tuning-beta-with-elim"]], "Other settings": [[1, "other-settings"]], "Changing wavelet function": [[1, "changing-wavelet-function"]], "Changing upper and lower bounds: k_1, k_2": [[1, "changing-upper-and-lower-bounds-k-1-k-2"]], "Changing IPR -  Interpercentile range": [[1, "changing-ipr-interpercentile-range"]], "Using the fix threshold \\theta_\\alpha": [[1, "using-the-fix-threshold-theta-alpha"]], "Changing window length (5 sec)": [[1, "changing-window-length-5-sec"]], "Independed Principle Component analysis": [[2, "independed-principle-component-analysis"]], "Load and filter EEG Signal": [[2, "load-and-filter-eeg-signal"], [3, "load-and-filter-eeg-signal"], [4, "load-and-filter-eeg-signal"], [5, "load-and-filter-eeg-signal"], [7, "load-and-filter-eeg-signal"]], "Applying ICA": [[2, "applying-ica"]], "Plots": [[2, "plots"], [3, "plots"]], "Decomposition and Construction matrices (Extended InfoMax)": [[2, "decomposition-and-construction-matrices-extended-infomax"]], "EEG Artifact removal using ATAR": [[3, "eeg-artifact-removal-using-atar"]], "ATAR: Linear Attenuation Mode": [[3, "atar-linear-attenuation-mode"]], "ATAR - Elimination Mode": [[3, "atar-elimination-mode"]], "EEG Artifact removal using ICA": [[4, "eeg-artifact-removal-using-ica"]], "Artifact removal using ICA": [[4, "artifact-removal-using-ica"], [5, "artifact-removal-using-ica"]], "On smaller segment": [[4, "on-smaller-segment"]], "EEG Artifact: ATAR and ICA": [[5, "eeg-artifact-atar-and-ica"]], "ATAR - three modes": [[5, "atar-three-modes"]], "Plots of Corrections": [[5, "plots-of-corrections"]], "Plots of Residuals": [[5, "plots-of-residuals"]], "EEG Computing Rhythmic Features - PhyAAt - Semanticity": [[6, "eeg-computing-rhythmic-features-phyaat-semanticity"]], "PhyAAt Dataset": [[6, "phyaat-dataset"]], "Extract Rhythmic Features": [[6, "extract-rhythmic-features"]], "Plots to compare": [[6, "plots-to-compare"]], "EEG Topographic Map": [[7, "eeg-topographic-map"]], "Rhythmic Powers,": [[7, "rhythmic-powers"]], "Topomap of Total power": [[7, "topomap-of-total-power"]], "Topomap for specific time-windows": [[7, "topomap-for-specific-time-windows"]], "Computation times": [[8, "computation-times"], [17, "computation-times"], [26, "computation-times"], [30, "computation-times"], [34, "computation-times"], [35, "computation-times"], [44, "computation-times"], [48, "computation-times"], [52, "computation-times"], [344, "computation-times"]], "Examples": [[9, "examples"], [57, "examples"]], "Multi-Electrode-Array (MEA)": [[9, "multi-electrode-array-mea"], [27, "multi-electrode-array-mea"]], "Release Highlights": [[9, "release-highlights"], [31, "release-highlights"]], "Information Theory": [[9, "information-theory"], [10, "information-theory"], [309, "information-theory"], [346, "information-theory"]], "Machine Learning": [[9, "machine-learning"], [18, "machine-learning"], [67, "machine-learning"], [314, "machine-learning"], [346, "machine-learning"]], "Signal Processing": [[9, "signal-processing"], [36, "signal-processing"], [346, "signal-processing"], [347, "signal-processing"], [318, "signal-processing"]], "Statistics": [[9, "statistics"], [45, "statistics"], [67, "statistics"], [341, "statistics"]], "Wavelet Analysis": [[9, "wavelet-analysis"], [49, "wavelet-analysis"], [67, "wavelet-analysis"], [67, "id4"], [339, "wavelet-analysis"], [347, "wavelet-analysis"], [318, "wavelet-analysis"]], "Dispersion Entropy with Embedding dim": [[11, "dispersion-entropy-with-embedding-dim"]], "Dispersion Entropy with top patterns": [[12, "dispersion-entropy-with-top-patterns"]], "Entropy  -  Discreet Source": [[13, "entropy-discreet-source"]], "Entropy  -  EEG Signal - Multi-Channel": [[14, "entropy-eeg-signal-multi-channel"]], "Entropy  -  Real-Valued Source": [[15, "entropy-real-valued-source"]], "Sample and Approximate Entropy: Comparison": [[16, "sample-and-approximate-entropy-comparison"]], "Decision Trees without converting Catogorical Features": [[19, "decision-trees-without-converting-catogorical-features"]], "Classification Trees: Depth & Decision boundaries": [[20, "classification-trees-depth-decision-boundaries"]], "Decision Trees with shrinking capability - Classification example": [[21, "decision-trees-with-shrinking-capability-classification-example"]], "Decision Trees with shrinking capability - Regression example": [[22, "decision-trees-with-shrinking-capability-regression-example"]], "Decision Trees with visualisations while buiding tree": [[23, "decision-trees-with-visualisations-while-buiding-tree"]], "Logistic Regression -  Visualisation": [[24, "logistic-regression-visualisation"]], "Naive Bayes classifier -  Visualisation": [[25, "naive-bayes-classifier-visualisation"]], "Example 1 : Iris dataset": [[25, "example-1-iris-dataset"]], "Example 2: Breast Cancer": [[25, "example-2-breast-cancer"]], "Example 3:: Digit Classification": [[25, "example-3-digit-classification"]], "MEA: Minimal Setting: Example": [[28, "mea-minimal-setting-example"]], "Results": [[28, "results"]], "MEA: Step-wise Analysis: Example": [[29, "mea-step-wise-analysis-example"]], "Step 1: Read File": [[29, "step-1-read-file"]], "Step 2: Stim Localisation": [[29, "step-2-stim-localisation"]], "Step 3: Align Cycles": [[29, "step-3-align-cycles"]], "Step 4: Average Cycles or Select one": [[29, "step-4-average-cycles-or-select-one"]], "Step 5-6: Activation and Repolarisation Time": [[29, "step-5-6-activation-and-repolarisation-time"]], "Step 7: APD Computation": [[29, "step-7-apd-computation"]], "Step 8: Extract EGMs": [[29, "step-8-extract-egms"]], "Step 9: EGM Feature Extraction": [[29, "step-9-egm-feature-extraction"]], "Step 10: BAD Channels": [[29, "step-10-bad-channels"]], "Step 11: Feature Matrix": [[29, "step-11-feature-matrix"]], "Step 12: Interpolating Activation Map": [[29, "step-12-interpolating-activation-map"]], "Step 13: Computing Conduction Velocity and maps": [[29, "step-13-computing-conduction-velocity-and-maps"]], "Release Highlights for spkit 0.0.9.6": [[32, "release-highlights-for-spkit-0-0-9-6"]], "MEA: Multi-Electrode Array Processing": [[32, "mea-multi-electrode-array-processing"], [33, "mea-multi-electrode-array-processing"]], "Ramanujan Methods for period estimation": [[32, "ramanujan-methods-for-period-estimation"]], "Release Highlights for spkit 0.0.9.7": [[33, "release-highlights-for-spkit-0-0-9-7"]], "Topographic Map correction: 10-20 System": [[33, "topographic-map-correction-10-20-system"]], "Location of all the eletrodes": [[33, "location-of-all-the-eletrodes"]], "Topographic Map 10-10 System": [[33, "topographic-map-10-10-system"]], "Topographic Map 10-05 System": [[33, "topographic-map-10-05-system"]], "Convolution with missing values (NaNs)": [[33, "convolution-with-missing-values-nans"]], "Filling Missing values with inter/exterpolation": [[33, "filling-missing-values-with-inter-exterpolation"]], "Wavelet Decomped Signals": [[33, "wavelet-decomped-signals"]], "Example 2: Wavelet Packet Decomposition": [[33, "example-2-wavelet-packet-decomposition"]], "Ramanujan Filter Banks -  Demos": [[37, "ramanujan-filter-banks-demos"]], "Example demo 1": [[37, "example-demo-1"]], "Example demo 2": [[37, "example-demo-2"]], "Example demo 2 with diff periods": [[37, "example-demo-2-with-diff-periods"]], "Ramanujan Filter Banks Example": [[38, "ramanujan-filter-banks-example"]], "Signal with period 10 and SNR = 0": [[38, "signal-with-period-10-and-snr-0"]], "Period Estimation from specific range of period": [[38, "period-estimation-from-specific-range-of-period"]], "Multiple Periods": [[38, "multiple-periods"]], "Ramanujan Dictionary  - with sparse penalty": [[39, "ramanujan-dictionary-with-sparse-penalty"]], "Signal with 3-periods and SNR=10": [[39, "signal-with-3-periods-and-snr-10"]], "Analysis and Synthesis Models": [[40, "analysis-and-synthesis-models"]], "1 DFT Model": [[40, "dft-model"]], "2 STFT Model": [[40, "stft-model"]], "3 Fractional Fourier Transform: FRFT": [[40, "fractional-fourier-transform-frft"]], "4 Sinasodual Model: Audio": [[40, "sinasodual-model-audio"]], "Fractional Fourier Transform: FRFT": [[41, "fractional-fourier-transform-frft"]], "Sinusoidal Model:  Analysis and Synthesis": [[42, "sinusoidal-model-analysis-and-synthesis"]], "Example": [[42, "example"]], "Download audio file": [[42, "download-audio-file"]], "STFT of Audio": [[42, "stft-of-audio"]], "Analysis of Audio with only 20 sinusodal tracks": [[42, "analysis-of-audio-with-only-20-sinusodal-tracks"]], "Synthesis of Audio from 20 sinusodal tracks": [[42, "synthesis-of-audio-from-20-sinusodal-tracks"]], "Residual: Discarded part of Audio - mostly hissing sound": [[42, "residual-discarded-part-of-audio-mostly-hissing-sound"]], "Save files and Play with Jupyter": [[42, "save-files-and-play-with-jupyter"]], "Sinusoidal Model : Synthesis : Audio": [[43, "sinusoidal-model-synthesis-audio"]], "Auditory Attention: Plot Group Data": [[46, "auditory-attention-plot-group-data"]], "Testing two groups": [[47, "testing-two-groups"]], "Example 1: Paired": [[47, "example-1-paired"]], "Example 2: Unpaired": [[47, "example-2-unpaired"]], "Scalogram CWT": [[50, "scalogram-cwt"]], "Comparison Example": [[50, "comparison-example"]], "Gauss wavelet": [[50, "gauss-wavelet"], [319, "gauss-wavelet"]], "Morlet wavelet": [[50, "morlet-wavelet"], [319, "morlet-wavelet"]], "Gabor wavelet": [[50, "gabor-wavelet"], [319, "gabor-wavelet"]], "Poisson wavelet": [[50, "poisson-wavelet"], [319, "poisson-wavelet"]], "Complex Maxican wavelet": [[50, "complex-maxican-wavelet"]], "Complex Shannon wavelet": [[50, "complex-shannon-wavelet"]], "Wavelet Filtering": [[51, "wavelet-filtering"], [327, "wavelet-filtering"]], "Wavelet filtering with optimal threshold ans db3": [[51, "wavelet-filtering-with-optimal-threshold-ans-db3"]], "With SD threshold": [[51, "with-sd-threshold"]], "With IQR": [[51, "with-iqr"]], "Limit the number of levels for decomposition to 2": [[51, "limit-the-number-of-levels-for-decomposition-to-2"]], "With db12": [[51, "with-db12"]], "With Symlet - sym4": [[51, "with-symlet-sym4"]], "With Coiflet - coif4": [[51, "with-coiflet-coif4"]], "Contributing": [[53, "contributing"]], "How to contibute or Involve?": [[53, "how-to-contibute-or-involve"]], "Development": [[54, "development"]], "Testing functions and fixing bugs": [[54, "testing-functions-and-fixing-bugs"]], "Documentation Improving": [[54, "documentation-improving"]], "User Guide Improving": [[54, "user-guide-improving"]], "Developing Tutorials": [[54, "developing-tutorials"]], "Adding new algorithms": [[54, "adding-new-algorithms"]], "Empty Page": [[56, "empty-page"], [343, "empty-page"]], "Heading": [[56, "heading"], [343, "heading"]], "Getting Started": [[57, "getting-started"]], "Install": [[57, "install"]], "Sample Data": [[57, "sample-data"]], "API": [[57, "api"]], "Installing spkit": [[58, "installing-spkit"]], "Installing the latest release": [[58, "installing-the-latest-release"]], "Troubleshooting": [[58, "troubleshooting"]], "Optional": [[58, "optional"]], "Table Of Contents": [[59, "table-of-contents"]], "Electrocardiography": [[63, "electrocardiography"]], "Filtering (cleaning)": [[63, "filtering-cleaning"]], "R Peak Detection": [[63, "r-peak-detection"]], "Electroencephalography": [[64, "electroencephalography"]], "Preprocessing": [[64, "preprocessing"]], "Filtering": [[64, "filtering"], [65, "filtering"], [347, "filtering"]], "Power computation": [[64, "power-computation"]], "Rhythmic Features": [[64, "rhythmic-features"]], "Examples:": [[64, null], [64, null], [64, null], [64, null], [66, null], [66, null], [313, null], [313, null], [313, null], [313, null], [313, null], [320, null], [322, null], [330, null], [335, null], [336, null]], "Topographic Map": [[64, "topographic-map"]], "Removing Artifacts": [[64, "removing-artifacts"]], "ATAR Algorithm": [[64, "atar-algorithm"]], "ICA Algorithm": [[64, "ica-algorithm"]], "Electrogram": [[65, "electrogram"], [72, "electrogram"]], "Activation Time": [[65, "activation-time"]], "Phase Analysis": [[65, "phase-analysis"]], "Multi-Channel EGMs": [[65, "multi-channel-egms"]], "Multi-Electrode Array Processing": [[66, "multi-electrode-array-processing"]], "Complete Analysis of a recording": [[66, "complete-analysis-of-a-recording"]], "Step-wise Analysis": [[66, "step-wise-analysis"]], "1. Read HDF File": [[66, "read-hdf-file"]], "2. Stim Localisation": [[66, "stim-localisation"]], "3. Alignment of Stim Cycles": [[66, "alignment-of-stim-cycles"]], "4. Averaging Cycles or Selecting one": [[66, "averaging-cycles-or-selecting-one"]], "5. Activation Time": [[66, "activation-time"]], "6. Repolarisation Time (optional)": [[66, "repolarisation-time-optional"]], "7. APD (if RT is computed)": [[66, "apd-if-rt-is-computed"]], "8. Extracting EGM": [[66, "extracting-egm"]], "9. EGM Feature Extraction": [[66, "egm-feature-extraction"]], "10. Identifying BAD Channels/electrodes": [[66, "identifying-bad-channels-electrodes"]], "11. Creating Feature Matrix": [[66, "creating-feature-matrix"]], "12. Interpolation": [[66, "interpolation"]], "13. Conduction Velocity": [[66, "conduction-velocity"]], "Plots and Figures": [[66, "plots-and-figures"]], "Extracting EGM": [[66, "id1"]], "EGM Processing & Feature Extractions": [[66, "egm-processing-feature-extractions"]], "Conduction and Activation Map": [[66, "conduction-and-activation-map"]], "API Reference": [[67, "api-reference"]], "Entropy Funtions": [[67, "entropy-funtions"]], "spkit.core": [[67, "spkit-core"], [67, "id1"], [67, "id2"], [67, "id3"]], "Information Theory - Advanced": [[67, "information-theory-advanced"]], "Filtering - Signal Processing": [[67, "filtering-signal-processing"]], "spkit.core.processing": [[67, "spkit-core-processing"], [352, "spkit-core-processing"]], "Analysis & Sythesis Models": [[67, "analysis-sythesis-models"]], "spkit.core.advnace_techniques": [[67, "spkit-core-advnace-techniques"]], "spkit.core : DWT": [[67, "spkit-core-dwt"]], "spkit.cwt: CWT": [[67, "spkit-cwt-cwt"]], "Ramanujan Methods": [[67, "ramanujan-methods"], [67, "id5"], [333, "ramanujan-methods"]], "Simulate Signals": [[67, "simulate-signals"]], "EEG Signal Processing": [[67, "eeg-signal-processing"], [67, "id6"]], "spkit.eeg": [[67, "module-spkit.eeg"], [352, "spkit-eeg"]], "MEA  - Multi-Electrode Array": [[67, "mea-multi-electrode-array"]], "spkit.mea": [[67, "spkit-mea"], [352, "spkit-mea"]], "Signal Analysis and Processing": [[67, "signal-analysis-and-processing"]], "New Methods": [[67, "new-methods"]], "Signal Transformations/Mapping": [[67, "signal-transformations-mapping"]], "Event Analysis": [[67, "event-analysis"]], "Phase, Angles, Dominent Frequencies": [[67, "phase-angles-dominent-frequencies"]], "spkit.ml": [[67, "module-spkit.ml"], [352, "spkit-ml"]], "Sample Data & Simulate": [[67, "sample-data-simulate"]], "spkit.data": [[67, "module-spkit.data"]], "Sample of real data/signal": [[67, "sample-of-real-data-signal"]], "Simulation of Data": [[67, "simulation-of-data"]], "For Machine Learning": [[67, "for-machine-learning"]], "For Signal Processing": [[67, "for-signal-processing"]], "Matrix Decomposition": [[67, "matrix-decomposition"]], "Statististics": [[67, "statististics"]], "spkit.stats": [[67, "spkit-stats"], [352, "spkit-stats"]], "Read/Write Files I/O": [[67, "read-write-files-i-o"]], "spkit.io": [[67, "module-spkit.io"]], "Utilities": [[67, "utilities"], [342, "utilities"]], "spkit.utils": [[67, "spkit-utils"]], "Geometrical functions [UNDER DEVELOPMENT]": [[67, "geometrical-functions-under-development"]], "spkit.geometry": [[67, "spkit-geometry"]], "TO BE DEPRECATED": [[67, "to-be-deprecated"]], "IO Utilities": [[67, "io-utilities"]], "Data": [[67, "data"]], "Data Samples": [[68, "data-samples"]], "Real-world-Samples": [[70, "real-world-samples"]], "EEG-Sample": [[70, "eeg-sample"]], "14-Channel": [[70, "channel"]], "Single-Channel": [[70, "single-channel"]], "Artifact-Sample": [[70, "artifact-sample"]], "ECG-Sample": [[70, "ecg-sample"]], "12-lead ECG": [[70, "lead-ecg"]], "Single-lead ECG": [[70, "single-lead-ecg"], [70, "id1"]], "Optical Data": [[70, "optical-data"]], "Rabbit-Heart": [[70, "rabbit-heart"]], "PPG:  Photoplethysmogram": [[70, "ppg-photoplethysmogram"]], "GSR/EDA: Galvanic Skin Response": [[70, "gsr-eda-galvanic-skin-response"]], "Simulation": [[71, "simulation"]], "1D- Arbitary signal": [[71, "d-arbitary-signal"]], "2D-Image Patch": [[71, "d-image-patch"]], "2D-Data for ML": [[71, "d-data-for-ml"]], "spkit.A_law": [[73, "spkit-a-law"]], "spkit.ICA": [[75, "spkit-ica"]], "Examples using spkit.ICA": [[75, "examples-using-spkit-ica"]], "spkit.Mu_law": [[76, "spkit-mu-law"]], "spkit.OutLiers": [[77, "spkit-outliers"]], "spkit.PCA": [[78, "spkit-pca"]], "spkit.PeriodStrength": [[79, "spkit-periodstrength"]], "spkit.RFB": [[80, "spkit-rfb"]], "spkit.RFB_example_1": [[81, "spkit-rfb-example-1"]], "Examples using spkit.RFB_example_1": [[81, "examples-using-spkit-rfb-example-1"]], "spkit.RFB_example_2": [[82, "spkit-rfb-example-2"]], "Examples using spkit.RFB_example_2": [[82, "examples-using-spkit-rfb-example-2"]], "spkit.RFB_prange": [[83, "spkit-rfb-prange"]], "spkit.SVD": [[84, "spkit-svd"]], "spkit.TD_Embed": [[85, "spkit-td-embed"]], "spkit.TWM_algo": [[86, "spkit-twm-algo"]], "spkit.TWM_f0": [[87, "spkit-twm-f0"]], "spkit.WPA_temporal": [[89, "spkit-wpa-temporal"]], "spkit.Wavelet_decompositions": [[90, "spkit-wavelet-decompositions"]], "spkit.add_noise": [[91, "spkit-add-noise"]], "Examples using spkit.add_noise": [[91, "examples-using-spkit-add-noise"]], "spkit.agg_angles": [[92, "spkit-agg-angles"]], "spkit.bin_width": [[93, "spkit-bin-width"]], "Examples using spkit.bin_width": [[93, "examples-using-spkit-bin-width"]], "spkit.blackman_lobe": [[94, "spkit-blackman-lobe"]], "spkit.cdf_mapping": [[95, "spkit-cdf-mapping"]], "spkit.clean_phase": [[96, "spkit-clean-phase"]], "spkit.conv1d_fb": [[97, "spkit-conv1d-fb"]], "spkit.conv1d_fft": [[98, "spkit-conv1d-fft"]], "spkit.conv1d_nan": [[99, "spkit-conv1d-nan"]], "Examples using spkit.conv1d_nan": [[99, "examples-using-spkit-conv1d-nan"]], "spkit.conv2d_nan": [[100, "spkit-conv2d-nan"]], "Examples using spkit.conv2d_nan": [[100, "examples-using-spkit-conv2d-nan"]], "spkit.create_multidim_space_signal": [[101, "spkit-create-multidim-space-signal"]], "spkit.create_signal_1d": [[102, "spkit-create-signal-1d"]], "Examples using spkit.create_signal_1d": [[102, "examples-using-spkit-create-signal-1d"]], "spkit.create_signal_2d": [[103, "spkit-create-signal-2d"]], "Examples using spkit.create_signal_2d": [[103, "examples-using-spkit-create-signal-2d"]], "spkit.cwt.GaborWave": [[104, "spkit-cwt-gaborwave"]], "spkit.cwt.GaussWave": [[105, "spkit-cwt-gausswave"]], "spkit.cwt.MorlateWave": [[106, "spkit-cwt-morlatewave"]], "spkit.cwt.PoissonWave": [[107, "spkit-cwt-poissonwave"]], "spkit.cwt.ScalogramCWT": [[108, "spkit-cwt-scalogramcwt"]], "Examples using spkit.cwt.ScalogramCWT": [[108, "examples-using-spkit-cwt-scalogramcwt"]], "spkit.cwt.ShannonWave": [[109, "spkit-cwt-shannonwave"]], "spkit.cwt.WavePSD": [[110, "spkit-cwt-wavepsd"]], "spkit.cwt.cMaxicanHatWave": [[111, "spkit-cwt-cmaxicanhatwave"]], "spkit.cwt.compare_cwt_example": [[112, "spkit-cwt-compare-cwt-example"]], "Examples using spkit.cwt.compare_cwt_example": [[112, "examples-using-spkit-cwt-compare-cwt-example"]], "spkit.data.create_dataset": [[113, "spkit-data-create-dataset"]], "Examples using spkit.data.create_dataset": [[113, "examples-using-spkit-data-create-dataset"]], "spkit.data.ecg_sample": [[114, "spkit-data-ecg-sample"]], "spkit.data.ecg_sample_12leads": [[115, "spkit-data-ecg-sample-12leads"]], "Examples using spkit.data.ecg_sample_12leads": [[115, "examples-using-spkit-data-ecg-sample-12leads"]], "spkit.data.eda_sample": [[116, "spkit-data-eda-sample"]], "spkit.data.eeg_sample_14ch": [[117, "spkit-data-eeg-sample-14ch"]], "Examples using spkit.data.eeg_sample_14ch": [[117, "examples-using-spkit-data-eeg-sample-14ch"]], "spkit.data.eeg_sample_1ch": [[118, "spkit-data-eeg-sample-1ch"]], "Examples using spkit.data.eeg_sample_1ch": [[118, "examples-using-spkit-data-eeg-sample-1ch"]], "spkit.data.eeg_sample_artifact": [[119, "spkit-data-eeg-sample-artifact"]], "spkit.data.egm_sample": [[120, "spkit-data-egm-sample"]], "spkit.data.gaussian": [[121, "spkit-data-gaussian"]], "spkit.data.gsr_sample": [[122, "spkit-data-gsr-sample"]], "spkit.data.linear": [[123, "spkit-data-linear"]], "spkit.data.linear_data": [[124, "spkit-data-linear-data"]], "spkit.data.mclass_gauss": [[125, "spkit-data-mclass-gauss"]], "spkit.data.moons": [[126, "spkit-data-moons"]], "spkit.data.optical_sample": [[127, "spkit-data-optical-sample"]], "spkit.data.ppg_sample": [[128, "spkit-data-ppg-sample"]], "spkit.data.primitive_polynomials": [[129, "spkit-data-primitive-polynomials"]], "spkit.data.sinusoidal": [[130, "spkit-data-sinusoidal"]], "spkit.data.spiral": [[131, "spkit-data-spiral"]], "spkit.denorm_kernel": [[132, "spkit-denorm-kernel"]], "spkit.dft_analysis": [[133, "spkit-dft-analysis"]], "Examples using spkit.dft_analysis": [[133, "examples-using-spkit-dft-analysis"]], "spkit.dft_synthesis": [[134, "spkit-dft-synthesis"]], "Examples using spkit.dft_synthesis": [[134, "examples-using-spkit-dft-synthesis"]], "spkit.direction_flow_map": [[135, "spkit-direction-flow-map"]], "Examples using spkit.direction_flow_map": [[135, "examples-using-spkit-direction-flow-map"]], "spkit.dispersion_entropy": [[136, "spkit-dispersion-entropy"]], "Examples using spkit.dispersion_entropy": [[136, "examples-using-spkit-dispersion-entropy"]], "spkit.dispersion_entropy_multiscale_refined": [[137, "spkit-dispersion-entropy-multiscale-refined"]], "spkit.dominent_freq": [[138, "spkit-dominent-freq"]], "spkit.dominent_freq_win": [[139, "spkit-dominent-freq-win"]], "spkit.eeg.ATAR": [[140, "spkit-eeg-atar"]], "Examples using spkit.eeg.ATAR": [[140, "examples-using-spkit-eeg-atar"]], "spkit.eeg.ATAR_1Ch": [[141, "spkit-eeg-atar-1ch"]], "spkit.eeg.ATAR_mCh": [[142, "spkit-eeg-atar-mch"]], "spkit.eeg.ICA_filtering": [[144, "spkit-eeg-ica-filtering"]], "Examples using spkit.eeg.ICA_filtering": [[144, "examples-using-spkit-eeg-ica-filtering"]], "spkit.eeg.RhythmicDecomposition": [[145, "spkit-eeg-rhythmicdecomposition"]], "spkit.eeg.TopoMap_Zi": [[147, "spkit-eeg-topomap-zi"]], "spkit.eeg.display_topo_RGB": [[148, "spkit-eeg-display-topo-rgb"]], "spkit.eeg.rhythmic_powers": [[149, "spkit-eeg-rhythmic-powers"]], "Examples using spkit.eeg.rhythmic_powers": [[149, "examples-using-spkit-eeg-rhythmic-powers"]], "spkit.eeg.rhythmic_powers_win": [[150, "spkit-eeg-rhythmic-powers-win"]], "Examples using spkit.eeg.rhythmic_powers_win": [[150, "examples-using-spkit-eeg-rhythmic-powers-win"]], "spkit.eeg.s1005_get_epos2d": [[151, "spkit-eeg-s1005-get-epos2d"]], "Examples using spkit.eeg.s1005_get_epos2d": [[151, "examples-using-spkit-eeg-s1005-get-epos2d"]], "spkit.eeg.s1010_get_epos2d": [[152, "spkit-eeg-s1010-get-epos2d"]], "Examples using spkit.eeg.s1010_get_epos2d": [[152, "examples-using-spkit-eeg-s1010-get-epos2d"]], "spkit.eeg.s1020_get_epos2d": [[153, "spkit-eeg-s1020-get-epos2d"]], "Examples using spkit.eeg.s1020_get_epos2d": [[153, "examples-using-spkit-eeg-s1020-get-epos2d"]], "spkit.eeg.showTOPO": [[154, "spkit-eeg-showtopo"]], "spkit.elbow_knee_point": [[155, "spkit-elbow-knee-point"]], "spkit.entropy": [[156, "spkit-entropy"]], "Examples using spkit.entropy": [[156, "examples-using-spkit-entropy"]], "spkit.entropy_approx": [[157, "spkit-entropy-approx"]], "Examples using spkit.entropy_approx": [[157, "examples-using-spkit-entropy-approx"]], "spkit.entropy_cond": [[158, "spkit-entropy-cond"]], "Examples using spkit.entropy_cond": [[158, "examples-using-spkit-entropy-cond"]], "spkit.entropy_cross": [[159, "spkit-entropy-cross"]], "Examples using spkit.entropy_cross": [[159, "examples-using-spkit-entropy-cross"]], "spkit.entropy_diff_cond": [[160, "spkit-entropy-diff-cond"]], "spkit.entropy_diff_cond_self": [[161, "spkit-entropy-diff-cond-self"]], "spkit.entropy_diff_joint": [[162, "spkit-entropy-diff-joint"]], "spkit.entropy_diff_joint_cond": [[163, "spkit-entropy-diff-joint-cond"]], "spkit.entropy_differential": [[164, "spkit-entropy-differential"]], "spkit.entropy_granger_causality": [[165, "spkit-entropy-granger-causality"]], "spkit.entropy_joint": [[166, "spkit-entropy-joint"]], "Examples using spkit.entropy_joint": [[166, "examples-using-spkit-entropy-joint"]], "spkit.entropy_kld": [[167, "spkit-entropy-kld"]], "Examples using spkit.entropy_kld": [[167, "examples-using-spkit-entropy-kld"]], "spkit.entropy_permutation": [[168, "spkit-entropy-permutation"]], "spkit.entropy_sample": [[169, "spkit-entropy-sample"]], "Examples using spkit.entropy_sample": [[169, "examples-using-spkit-entropy-sample"]], "spkit.entropy_spectral": [[170, "spkit-entropy-spectral"]], "spkit.entropy_svd": [[171, "spkit-entropy-svd"]], "spkit.f0_detection": [[172, "spkit-f0-detection"]], "spkit.ffrft": [[173, "spkit-ffrft"]], "spkit.fill_nans_1d": [[174, "spkit-fill-nans-1d"]], "Examples using spkit.fill_nans_1d": [[174, "examples-using-spkit-fill-nans-1d"]], "spkit.fill_nans_2d": [[175, "spkit-fill-nans-2d"]], "Examples using spkit.fill_nans_2d": [[175, "examples-using-spkit-fill-nans-2d"]], "spkit.filterDC": [[176, "spkit-filterdc"]], "spkit.filterDC_sGolay": [[177, "spkit-filterdc-sgolay"]], "Examples using spkit.filterDC_sGolay": [[177, "examples-using-spkit-filterdc-sgolay"]], "spkit.filter_X": [[178, "spkit-filter-x"]], "Examples using spkit.filter_X": [[178, "examples-using-spkit-filter-x"]], "spkit.filter_powerline": [[179, "spkit-filter-powerline"]], "spkit.filter_smooth_gauss": [[180, "spkit-filter-smooth-gauss"]], "spkit.filter_smooth_mollifier": [[181, "spkit-filter-smooth-mollifier"]], "spkit.filter_smooth_sGolay": [[182, "spkit-filter-smooth-sgolay"]], "spkit.filter_with_kernel": [[183, "spkit-filter-with-kernel"]], "spkit.filtering_pipeline": [[184, "spkit-filtering-pipeline"]], "spkit.frft": [[185, "spkit-frft"]], "Examples using spkit.frft": [[185, "examples-using-spkit-frft"]], "spkit.friedrichs_mollifier_kernel": [[186, "spkit-friedrichs-mollifier-kernel"]], "spkit.gaussian_kernel": [[187, "spkit-gaussian-kernel"]], "spkit.geometry.Inter2DPlane": [[188, "spkit-geometry-inter2dplane"]], "spkit.geometry.TriAng": [[189, "spkit-geometry-triang"]], "spkit.geometry.area_tri": [[190, "spkit-geometry-area-tri"]], "spkit.geometry.car2spar": [[191, "spkit-geometry-car2spar"]], "spkit.geometry.dir_vectors": [[192, "spkit-geometry-dir-vectors"]], "spkit.geometry.divide_space": [[193, "spkit-geometry-divide-space"]], "spkit.geometry.getTriFaces": [[194, "spkit-geometry-gettrifaces"]], "spkit.geometry.getTriFaces_V2": [[195, "spkit-geometry-gettrifaces-v2"]], "spkit.geometry.get_PCA": [[196, "spkit-geometry-get-pca"]], "spkit.geometry.get_adjacency_matrix_depth": [[197, "spkit-geometry-get-adjacency-matrix-depth"]], "spkit.geometry.get_adjacency_matrix_dist": [[198, "spkit-geometry-get-adjacency-matrix-dist"]], "spkit.geometry.get_adjacency_matrix_kNN": [[199, "spkit-geometry-get-adjacency-matrix-knn"]], "spkit.geometry.get_center": [[200, "spkit-geometry-get-center"]], "spkit.geometry.get_circle": [[201, "spkit-geometry-get-circle"]], "spkit.geometry.get_circular_grid": [[202, "spkit-geometry-get-circular-grid"]], "spkit.geometry.get_ellipsoid": [[203, "spkit-geometry-get-ellipsoid"]], "spkit.geometry.get_neibours": [[204, "spkit-geometry-get-neibours"]], "spkit.geometry.get_optimal_projection": [[205, "spkit-geometry-get-optimal-projection"]], "spkit.geometry.get_plane": [[206, "spkit-geometry-get-plane"]], "spkit.geometry.get_sphare": [[207, "spkit-geometry-get-sphare"]], "spkit.geometry.get_square": [[208, "spkit-geometry-get-square"]], "spkit.geometry.get_square_grid": [[209, "spkit-geometry-get-square-grid"]], "spkit.geometry.lin_inter": [[210, "spkit-geometry-lin-inter"]], "spkit.geometry.node2C_to_adjacency_matrix": [[211, "spkit-geometry-node2c-to-adjacency-matrix"]], "spkit.geometry.opt_project": [[212, "spkit-geometry-opt-project"]], "spkit.geometry.plot_proj": [[213, "spkit-geometry-plot-proj"]], "spkit.geometry.rotation_matrix": [[214, "spkit-geometry-rotation-matrix"]], "spkit.geometry.spar2car": [[215, "spkit-geometry-spar2car"]], "spkit.geometry.surface_plot_mayavi": [[216, "spkit-geometry-surface-plot-mayavi"]], "spkit.geometry.surface_reconstruction": [[217, "spkit-geometry-surface-reconstruction"]], "spkit.getQuickStats": [[218, "spkit-getquickstats"]], "spkit.getStats": [[219, "spkit-getstats"]], "spkit.get_activation_time": [[220, "spkit-get-activation-time"]], "spkit.get_repolarisation_time": [[221, "spkit-get-repolarisation-time"]], "spkit.graph_filter_adj": [[222, "spkit-graph-filter-adj"]], "spkit.graph_filter_dist": [[223, "spkit-graph-filter-dist"]], "spkit.hist_plot": [[224, "spkit-hist-plot"]], "Examples using spkit.hist_plot": [[224, "examples-using-spkit-hist-plot"]], "spkit.iffrft": [[225, "spkit-iffrft"]], "spkit.ifrft": [[226, "spkit-ifrft"]], "Examples using spkit.ifrft": [[226, "examples-using-spkit-ifrft"]], "spkit.io.read_bdf": [[227, "spkit-io-read-bdf"]], "spkit.io.read_hdf": [[228, "spkit-io-read-hdf"]], "Examples using spkit.io.read_hdf": [[228, "examples-using-spkit-io-read-hdf"]], "spkit.io.read_surf": [[229, "spkit-io-read-surf"]], "spkit.io.read_surf_file": [[230, "spkit-io-read-surf-file"]], "spkit.io.read_vtk": [[231, "spkit-io-read-vtk"]], "spkit.io.write_vtk": [[232, "spkit-io-write-vtk"]], "spkit.is_power2": [[233, "spkit-is-power2"]], "spkit.low_resolution": [[234, "spkit-low-resolution"]], "spkit.mea.activation_repol_time_loc": [[235, "spkit-mea-activation-repol-time-loc"]], "Examples using spkit.mea.activation_repol_time_loc": [[235, "examples-using-spkit-mea-activation-repol-time-loc"]], "spkit.mea.activation_time_loc": [[236, "spkit-mea-activation-time-loc"]], "Examples using spkit.mea.activation_time_loc": [[236, "examples-using-spkit-mea-activation-time-loc"]], "spkit.mea.align_cycles": [[237, "spkit-mea-align-cycles"]], "Examples using spkit.mea.align_cycles": [[237, "examples-using-spkit-mea-align-cycles"]], "spkit.mea.analyse_mea_file": [[238, "spkit-mea-analyse-mea-file"]], "Examples using spkit.mea.analyse_mea_file": [[238, "examples-using-spkit-mea-analyse-mea-file"]], "spkit.mea.arrange_mea_grid": [[239, "spkit-mea-arrange-mea-grid"]], "Examples using spkit.mea.arrange_mea_grid": [[239, "examples-using-spkit-mea-arrange-mea-grid"]], "spkit.mea.compute_cv": [[240, "spkit-mea-compute-cv"]], "Examples using spkit.mea.compute_cv": [[240, "examples-using-spkit-mea-compute-cv"]], "spkit.mea.egm_features": [[241, "spkit-mea-egm-features"]], "Examples using spkit.mea.egm_features": [[241, "examples-using-spkit-mea-egm-features"]], "spkit.mea.extract_egm": [[242, "spkit-mea-extract-egm"]], "Examples using spkit.mea.extract_egm": [[242, "examples-using-spkit-mea-extract-egm"]], "spkit.mea.find_bad_channels_idx": [[243, "spkit-mea-find-bad-channels-idx"]], "Examples using spkit.mea.find_bad_channels_idx": [[243, "examples-using-spkit-mea-find-bad-channels-idx"]], "spkit.mea.get_stim_loc": [[244, "spkit-mea-get-stim-loc"]], "Examples using spkit.mea.get_stim_loc": [[244, "examples-using-spkit-mea-get-stim-loc"]], "spkit.mea.mat_1_show": [[245, "spkit-mea-mat-1-show"]], "Examples using spkit.mea.mat_1_show": [[245, "examples-using-spkit-mea-mat-1-show"]], "spkit.mea.mat_list_show": [[246, "spkit-mea-mat-list-show"]], "Examples using spkit.mea.mat_list_show": [[246, "examples-using-spkit-mea-mat-list-show"]], "spkit.mea.mea_feature_map": [[247, "spkit-mea-mea-feature-map"]], "Examples using spkit.mea.mea_feature_map": [[247, "examples-using-spkit-mea-mea-feature-map"]], "spkit.mea.plot_mea_grid": [[248, "spkit-mea-plot-mea-grid"]], "Examples using spkit.mea.plot_mea_grid": [[248, "examples-using-spkit-mea-plot-mea-grid"]], "spkit.mea.unarrange_mea_grid": [[249, "spkit-mea-unarrange-mea-grid"]], "spkit.mean_minSE": [[250, "spkit-mean-minse"]], "spkit.minMSE": [[251, "spkit-minmse"]], "spkit.ml.ClassificationTree": [[252, "spkit-ml-classificationtree"]], "Examples using spkit.ml.ClassificationTree": [[252, "examples-using-spkit-ml-classificationtree"]], "spkit.ml.DecisionTree": [[253, "spkit-ml-decisiontree"]], "spkit.ml.LogisticRegression": [[254, "spkit-ml-logisticregression"]], "Examples using spkit.ml.LogisticRegression": [[254, "examples-using-spkit-ml-logisticregression"]], "spkit.ml.NaiveBayes": [[255, "spkit-ml-naivebayes"]], "Examples using spkit.ml.NaiveBayes": [[255, "examples-using-spkit-ml-naivebayes"]], "spkit.ml.RegressionTree": [[256, "spkit-ml-regressiontree"]], "Examples using spkit.ml.RegressionTree": [[256, "examples-using-spkit-ml-regressiontree"]], "spkit.mutual_info": [[257, "spkit-mutual-info"]], "Examples using spkit.mutual_info": [[257, "examples-using-spkit-mutual-info"]], "spkit.mutual_info_diff": [[258, "spkit-mutual-info-diff"]], "spkit.mutual_info_diff_self": [[259, "spkit-mutual-info-diff-self"]], "spkit.partial_transfer_entropy": [[260, "spkit-partial-transfer-entropy"]], "spkit.peak_detection": [[261, "spkit-peak-detection"]], "spkit.peak_interp": [[262, "spkit-peak-interp"]], "spkit.periodogram": [[263, "spkit-periodogram"]], "spkit.phase_map": [[264, "spkit-phase-map"]], "spkit.phase_map_reconstruction": [[265, "spkit-phase-map-reconstruction"]], "spkit.plotJointEntropyXY": [[266, "spkit-plotjointentropyxy"]], "spkit.quantize_FD": [[267, "spkit-quantize-fd"]], "spkit.quantize_signal": [[268, "spkit-quantize-signal"]], "spkit.ramanujan_filter": [[269, "spkit-ramanujan-filter"]], "Examples using spkit.ramanujan_filter": [[269, "examples-using-spkit-ramanujan-filter"]], "spkit.ramanujan_filter_prange": [[270, "spkit-ramanujan-filter-prange"]], "Examples using spkit.ramanujan_filter_prange": [[270, "examples-using-spkit-ramanujan-filter-prange"]], "spkit.regularised_period_estimation": [[271, "spkit-regularised-period-estimation"]], "Examples using spkit.regularised_period_estimation": [[271, "examples-using-spkit-regularised-period-estimation"]], "spkit.show_compass": [[272, "spkit-show-compass"]], "spkit.show_farmulas": [[273, "spkit-show-farmulas"]], "spkit.signal_delayed_space": [[274, "spkit-signal-delayed-space"]], "spkit.signal_diff": [[275, "spkit-signal-diff"]], "spkit.simplify_signal": [[276, "spkit-simplify-signal"]], "spkit.sinc_dirichlet": [[277, "spkit-sinc-dirichlet"]], "spkit.sinc_interp": [[278, "spkit-sinc-interp"]], "spkit.sineModel_analysis": [[279, "spkit-sinemodel-analysis"]], "Examples using spkit.sineModel_analysis": [[279, "examples-using-spkit-sinemodel-analysis"]], "spkit.sineModel_synthesis": [[280, "spkit-sinemodel-synthesis"]], "Examples using spkit.sineModel_synthesis": [[280, "examples-using-spkit-sinemodel-synthesis"]], "spkit.sine_spectrum": [[281, "spkit-sine-spectrum"]], "spkit.sine_tracking": [[282, "spkit-sine-tracking"]], "spkit.sinetracks_cleaning": [[283, "spkit-sinetracks-cleaning"]], "spkit.spatial_filter_adj": [[284, "spkit-spatial-filter-adj"]], "spkit.spatial_filter_dist": [[285, "spkit-spatial-filter-dist"]], "spkit.stats.get_stats": [[286, "spkit-stats-get-stats"]], "spkit.stats.outliers": [[287, "spkit-stats-outliers"]], "spkit.stats.plot_groups_boxes": [[288, "spkit-stats-plot-groups-boxes"]], "Examples using spkit.stats.plot_groups_boxes": [[288, "examples-using-spkit-stats-plot-groups-boxes"]], "spkit.stats.quick_stats": [[289, "spkit-stats-quick-stats"]], "spkit.stats.test_2groups": [[290, "spkit-stats-test-2groups"]], "Examples using spkit.stats.test_2groups": [[290, "examples-using-spkit-stats-test-2groups"]], "spkit.stats.test_groups": [[291, "spkit-stats-test-groups"]], "spkit.stft_analysis": [[292, "spkit-stft-analysis"]], "Examples using spkit.stft_analysis": [[292, "examples-using-spkit-stft-analysis"]], "spkit.stft_synthesis": [[293, "spkit-stft-synthesis"]], "Examples using spkit.stft_synthesis": [[293, "examples-using-spkit-stft-synthesis"]], "spkit.total_variation": [[294, "spkit-total-variation"]], "spkit.total_variation_win": [[295, "spkit-total-variation-win"]], "spkit.transfer_entropy": [[296, "spkit-transfer-entropy"]], "spkit.transfer_entropy_cond": [[297, "spkit-transfer-entropy-cond"]], "spkit.utils.ProgBar": [[298, "spkit-utils-progbar"]], "spkit.utils.ProgBar_JL": [[299, "spkit-utils-progbar-jl"]], "Examples using spkit.utils.ProgBar_JL": [[299, "examples-using-spkit-utils-progbar-jl"]], "spkit.utils.bcolors": [[300, "spkit-utils-bcolors"]], "spkit.utils.pretty_print": [[301, "spkit-utils-pretty-print"]], "Examples using spkit.utils.pretty_print": [[301, "examples-using-spkit-utils-pretty-print"]], "spkit.utils.txcolors": [[302, "spkit-utils-txcolors"]], "spkit.utils.view_hierarchical_order": [[303, "spkit-utils-view-hierarchical-order"]], "spkit.wavelet_decomposed_signals": [[304, "spkit-wavelet-decomposed-signals"]], "Examples using spkit.wavelet_decomposed_signals": [[304, "examples-using-spkit-wavelet-decomposed-signals"]], "spkit.wavelet_filtering": [[305, "spkit-wavelet-filtering"]], "Examples using spkit.wavelet_filtering": [[305, "examples-using-spkit-wavelet-filtering"]], "spkit.wavelet_filtering_win": [[306, "spkit-wavelet-filtering-win"]], "spkit.wpa_coeff": [[307, "spkit-wpa-coeff"]], "spkit.wpa_coeff_win": [[308, "spkit-wpa-coeff-win"]], "IO Read/Write": [[310, "io-read-write"]], "Read HDF/EDF file": [[310, "read-hdf-edf-file"]], "Read BDF file": [[310, "read-bdf-file"]], "Read Surf file": [[310, "read-surf-file"]], "Read VTK file": [[310, "read-vtk-file"]], "Write VTK File": [[310, "write-vtk-file"]], "Applications": [[311, "applications"]], "Transfer Entropy  TE_{X \\rightarrow Y}": [[311, "transfer-entropy-te-x-rightarrow-y"]], "Partial Transfer Entropy  TE_{X \\rightarrow Y | Z}": [[311, "partial-transfer-entropy-te-x-rightarrow-y-z"]], "Granger Causality  GC_{X \\rightarrow Y}": [[311, "granger-causality-gc-x-rightarrow-y"]], "Connectivity Analysis  {X \\rightarrow Y}": [[311, "connectivity-analysis-x-rightarrow-y"]], "Dispersion and Differential Entropy": [[312, "dispersion-and-differential-entropy"]], "Dispersion Entropy H_{de}(X)": [[312, "dispersion-entropy-h-de-x"]], "Background": [[312, "background"]], "An Example": [[312, "an-example"]], "Embedding dimension 4": [[312, "embedding-dimension-4"]], "Dispersion Entropy with sliding window": [[312, "dispersion-entropy-with-sliding-window"]], "Multi-scale Dispersion Entropy": [[312, "multi-scale-dispersion-entropy"]], "Dispersion Entropy multiscale": [[312, "dispersion-entropy-multiscale"]], "Dispersion Entropy & Shannon Entropy": [[312, "dispersion-entropy-shannon-entropy"]], "Dispersion Entropy & Sample Entropy": [[312, "dispersion-entropy-sample-entropy"]], "Differential Entropy Functions H_{\\partial}(\\cdot)": [[312, "differential-entropy-functions-h-partial-cdot"]], "Differential Entropy H_{\\partial}(X)": [[312, "differential-entropy-h-partial-x"]], "Self-Conditional Entropy H_{\\partial}(X_{i+1}|X_{i})": [[312, "self-conditional-entropy-h-partial-x-i-1-x-i"]], "Conditional Entropy H_{\\partial}(X_{i+1}|X_{i},Y_{i})": [[312, "conditional-entropy-h-partial-x-i-1-x-i-y-i"]], "Joint Entropy H_{\\partial}(X,Y)": [[312, "joint-entropy-h-partial-x-y"]], "Self-Mutual Information I_{\\partial}(X_{i+1}|X_{i})": [[312, "self-mutual-information-i-partial-x-i-1-x-i"]], "Mutual Information I_{\\partial}(X,Y)": [[312, "mutual-information-i-partial-x-y"]], "References:": [[312, null], [313, null], [313, null]], "Entropy": [[313, "entropy"]], "Entropy with discreet source": [[313, "entropy-with-discreet-source"]], "Change of base": [[313, "change-of-base"]], "R\u00e9nyi entropy of order \\alpha": [[313, "renyi-entropy-of-order-alpha"]], "Entropy for real-valued source": [[313, "entropy-for-real-valued-source"]], "Shannon Entropy H(X)": [[313, "shannon-entropy-h-x"]], "Mutual Information I(X;Y)": [[313, "mutual-information-i-x-y"]], "Joint-Entropy H(X;Y)": [[313, "joint-entropy-h-x-y"]], "Conditional Entropy H(X|Y)": [[313, "conditional-entropy-h-x-y"]], "Cross Entropy H_{xy}(X,Y)": [[313, "cross-entropy-h-xy-x-y"]], "Cross Entropy: KL-Divergence H_{kl}(X,Y)": [[313, "cross-entropy-kl-divergence-h-kl-x-y"]], "Approximate Entropy H_{ae}(X)": [[313, "approximate-entropy-h-ae-x"]], "Sample Entropy H_{se}(X)": [[313, "sample-entropy-h-se-x"]], "Spectral Entropy H_{f}(X)": [[313, "spectral-entropy-h-f-x"]], "SVD Entropy H_{\\Sigma}(X)": [[313, "svd-entropy-h-sigma-x"]], "Permutation Entropy H_{\\pi}(X)": [[313, "permutation-entropy-h-pi-x"]], "Sample Entropy &  Approximate Entropy": [[313, "sample-entropy-approximate-entropy"]], "Approximate and Sample Entropy": [[313, "id17"]], "Approximate and Sample Entropy : Time": [[313, "id18"]], "Spectral Entropy & Permutation Entropy": [[313, "spectral-entropy-permutation-entropy"]], "Decision Trees": [[315, "decision-trees"]], "Classification Trees": [[315, "classification-trees"]], "Visualising Trees": [[315, "visualising-trees"]], "Shrinking/proning Trees": [[315, "shrinking-proning-trees"]], "Tree for catogories features": [[315, "tree-for-catogories-features"]], "Regression Trees": [[315, "regression-trees"]], "Logistic Regression": [[316, "logistic-regression"]], "Classification": [[316, "classification"]], "Naive Bayes": [[317, "naive-bayes"]], "Continues Wavelet Transform": [[319, "continues-wavelet-transform"], [332, "continues-wavelet-transform"]], "Plot wavelet functions": [[319, "plot-wavelet-functions"]], "With a range of scale parameters": [[319, "with-a-range-of-scale-parameters"]], "Signal Analysis - EEG": [[319, "signal-analysis-eeg"]], "Scalogram with default parameters": [[319, "scalogram-with-default-parameters"]], "With a range of frequency and Q": [[319, "with-a-range-of-frequency-and-q"]], "With a plot of analysis wavelets": [[319, "with-a-plot-of-analysis-wavelets"]], "Speech": [[319, "speech"]], "Audio": [[319, "audio"]], "#Type 1 (n)": [[319, "type-1-n"]], "#Type 2": [[319, "type-2"]], "#Type 3 (n)": [[319, "type-3-n"]], "Maxican wavelet": [[319, "maxican-wavelet"]], "Shannon wavelet": [[319, "shannon-wavelet"]], "Discrete Fourier Transfer": [[320, "discrete-fourier-transfer"]], "Analysis": [[320, "analysis"], [330, "analysis"], [335, "analysis"], [336, "analysis"]], "Synthesis": [[320, "synthesis"], [330, "synthesis"], [335, "synthesis"], [336, "synthesis"]], "Differentiation": [[321, "differentiation"]], "Signal Gradient": [[321, "signal-gradient"]], "Discreet Wavelet Transform": [[322, "discreet-wavelet-transform"]], "Wavelet Filtering & Shrinkage": [[322, "wavelet-filtering-shrinkage"]], "Wavelet Package Analysis": [[322, "wavelet-package-analysis"]], "Wavelet decomposed signals": [[322, "wavelet-decomposed-signals"]], "Temporal analysis": [[322, "temporal-analysis"]], "Drift Removing": [[323, "drift-removing"]], "IIR Filters of Order 1": [[323, "iir-filters-of-order-1"]], "Spectral filter - IIR Filters": [[323, "spectral-filter-iir-filters"]], "Savitzky-Golay filter": [[323, "savitzky-golay-filter"], [327, "savitzky-golay-filter"]], "Graph Filtering": [[324, "graph-filtering"]], "Using Adjacency matrix": [[324, "using-adjacency-matrix"], [328, "using-adjacency-matrix"]], "Using Proximity (distance)": [[324, "using-proximity-distance"], [328, "using-proximity-distance"]], "Using Nearest Neighbours": [[324, "using-nearest-neighbours"], [328, "using-nearest-neighbours"]], "Kernel Filtering": [[325, "kernel-filtering"], [325, "id1"]], "Filtering Pipeline": [[326, "filtering-pipeline"], [326, "id2"]], "Powerline Interference removal": [[326, "powerline-interference-removal"]], "Smoothing": [[327, "smoothing"]], "Spectral Filters": [[327, "spectral-filters"]], "Gaussian Filter": [[327, "gaussian-filter"]], "Mollifier": [[327, "mollifier"]], "References": [[327, null]], "Spatial Filtering (3D)": [[328, "spatial-filtering-3d"]], "Spectral Filtering": [[329, "spectral-filtering"]], "Lowpass filtering": [[329, "lowpass-filtering"]], "Highpass filtering": [[329, "highpass-filtering"]], "Bandpass filtering": [[329, "bandpass-filtering"]], "Bandreject/bandstop filtering": [[329, "bandreject-bandstop-filtering"]], "Custom filtering": [[329, "custom-filtering"]], "Fractional Fourier Transform": [[330, "fractional-fourier-transform"]], "Signal Temporal Mapping": [[331, "signal-temporal-mapping"]], "Linear mapping": [[331, "linear-mapping"]], "Quantization": [[331, "quantization"]], "Low resolution": [[331, "low-resolution"]], "Non-linear mapping": [[331, "non-linear-mapping"]], "A-Law": [[331, "a-law"]], "\u03bc-Law": [[331, "law"]], "CDF Mapping": [[331, "cdf-mapping"]], "Period Analysis": [[333, "period-analysis"]], "Simplifying a complex signal": [[334, "simplifying-a-complex-signal"]], "Simplifying using Sinasudol Models": [[334, "simplifying-using-sinasudol-models"]], "Simplifying using DFT": [[334, "simplifying-using-dft"]], "Sinusoidal Model": [[335, "sinusoidal-model"]], "Short-Time Fourier Transform": [[336, "short-time-fourier-transform"]], "Signal Analysis": [[337, "signal-analysis"]], "Signal Filtering": [[338, "signal-filtering"]], "Statistics/Utilities": [[340, "statistics-utilities"]], "Testing Two Groups": [[341, "testing-two-groups"]], "Testing gropus": [[341, "testing-gropus"], [341, "id1"]], "Tutorials": [[346, "tutorials"]], "Data Science Programming": [[346, "data-science-programming"]], "Interactive Wigdets": [[346, "interactive-wigdets"]], "Blogs/Tutorial-sessions": [[346, "blogs-tutorial-sessions"]], "What is signal?": [[347, "what-is-signal"]], "Time and Frequency": [[347, "time-and-frequency"]], "Fourier": [[347, "fourier"]], "Convolution": [[347, "convolution"]], "Time-domain Analysis": [[347, "time-domain-analysis"]], "Frequency-domain Analysis": [[347, "frequency-domain-analysis"]], "Time-Frequency Analysis": [[347, "time-frequency-analysis"]], "User Guide": [[348, "user-guide"]], "Under Development - Install": [[348, "under-development-install"]], "Release History": [[349, "release-history"]], "Version 0.0.9.7": [[351, "version-0-0-9-7"], [353, "version-0-0-9-7"]], "Version 0.0.9.6": [[351, "version-0-0-9-6"], [352, "version-0-0-9-6"], [353, "version-0-0-9-6"]], "Version 0.0.9.5": [[351, "version-0-0-9-5"], [352, "version-0-0-9-5"], [353, "version-0-0-9-5"]], "Version 0.0.9.4": [[351, "version-0-0-9-4"], [352, "version-0-0-9-4"], [353, "version-0-0-9-4"]], "Version 0.0.9.3": [[351, "version-0-0-9-3"], [352, "version-0-0-9-3"], [353, "version-0-0-9-3"]], "Version 0.0.9.2": [[351, "version-0-0-9-2"], [352, "version-0-0-9-2"], [353, "version-0-0-9-2"]], "Version 0.0.9.1": [[351, "version-0-0-9-1"], [352, "version-0-0-9-1"], [353, "version-0-0-9-1"]], "Version 0.0.8": [[351, "version-0-0-8"], [352, "version-0-0-8"], [353, "version-0-0-8"]], "Version 0.0.7": [[351, "version-0-0-7"], [352, "version-0-0-7"], [353, "version-0-0-7"]], "Version 0.0.6": [[351, "version-0-0-6"], [352, "version-0-0-6"], [353, "version-0-0-6"]], "Version 0.0.5": [[351, "version-0-0-5"], [352, "version-0-0-5"], [353, "version-0-0-5"]], "Version 0.0.4": [[351, "version-0-0-4"], [352, "version-0-0-4"], [353, "version-0-0-4"]], "Version 0.0.2": [[351, "version-0-0-2"], [352, "version-0-0-2"], [353, "version-0-0-2"]], "Version 0.0.1": [[351, "version-0-0-1"], [352, "version-0-0-1"], [353, "version-0-0-1"]], "Experimental / Under Development": [[351, "experimental-under-development"], [353, "experimental-under-development"]], "spkit.core.infotheory": [[352, "spkit-core-infotheory"]], "spkit.geomatry": [[352, "spkit-geomatry"]], "Versions": [[55, "versions"]], "Biomedical Signal Processing": [[62, "biomedical-signal-processing"]], "Data2 Samples": [[69, "data2-samples"]], "spkit.create_dictionary": [[74, "spkit-create-dictionary"]], "spkit.wpa_plot": [[88, "spkit-wpa-plot"]], "spkit.eeg.gen_ssfi": [[143, "spkit-eeg-gen-ssfi"]], "spkit.eeg.topomap": [[146, "spkit-eeg-topomap"]], "Examples using spkit.eeg.topomap": [[146, "examples-using-spkit-eeg-topomap"]]}, "indexentries": {"module": [[67, "module-0"], [67, "module-1"], [67, "module-spkit"], [67, "module-spkit.data"], [67, "module-spkit.eeg"], [67, "module-spkit.io"], [67, "module-spkit.ml"]], "spkit": [[67, "module-0"], [67, "module-spkit"]], "spkit.data": [[67, "module-spkit.data"]], "spkit.eeg": [[67, "module-1"], [67, "module-spkit.eeg"]], "spkit.io": [[67, "module-spkit.io"]], "spkit.ml": [[67, "module-spkit.ml"]], "a_law() (in module spkit)": [[73, "spkit.A_law"]], "create_dictionary() (in module spkit)": [[74, "spkit.create_dictionary"]], "ica (class in spkit)": [[75, "spkit.ICA"]], "fit() (spkit.ica method)": [[75, "spkit.ICA.fit"]], "get_smatrix() (spkit.ica method)": [[75, "spkit.ICA.get_sMatrix"]], "get_tmatrix() (spkit.ica method)": [[75, "spkit.ICA.get_tMatrix"]], "transform() (spkit.ica method)": [[75, "spkit.ICA.transform"]], "whitening() (spkit.ica method)": [[75, "spkit.ICA.whitening"]], "mu_law() (in module spkit)": [[76, "spkit.Mu_law"]], "outliers() (in module spkit)": [[77, "spkit.OutLiers"]], "pca (class in spkit)": [[78, "spkit.PCA"]], "fit() (spkit.pca method)": [[78, "spkit.PCA.fit"]], "fit_transform() (spkit.pca method)": [[78, "spkit.PCA.fit_transform"]], "transform() (spkit.pca method)": [[78, "spkit.PCA.transform"]], "whitening() (spkit.pca method)": [[78, "spkit.PCA.whitening"]], "periodstrength() (in module spkit)": [[79, "spkit.PeriodStrength"]], "rfb() (in module spkit)": [[80, "spkit.RFB"]], "rfb_example_1() (in module spkit)": [[81, "spkit.RFB_example_1"]], "rfb_example_2() (in module spkit)": [[82, "spkit.RFB_example_2"]], "rfb_prange() (in module spkit)": [[83, "spkit.RFB_prange"]], "svd() (in module spkit)": [[84, "spkit.SVD"]], "td_embed() (in module spkit)": [[85, "spkit.TD_Embed"]], "twm_algo() (in module spkit)": [[86, "spkit.TWM_algo"]], "twm_f0() (in module spkit)": [[87, "spkit.TWM_f0"]], "wpa_plot() (in module spkit)": [[88, "spkit.wpa_plot"]], "wpa_temporal() (in module spkit)": [[89, "spkit.WPA_temporal"]], "wavelet_decompositions() (in module spkit)": [[90, "spkit.Wavelet_decompositions"]], "add_noise() (in module spkit)": [[91, "spkit.add_noise"]], "agg_angles() (in module spkit)": [[92, "spkit.agg_angles"]], "bin_width() (in module spkit)": [[93, "spkit.bin_width"]], "blackman_lobe() (in module spkit)": [[94, "spkit.blackman_lobe"]], "cdf_mapping() (in module spkit)": [[95, "spkit.cdf_mapping"]], "clean_phase() (in module spkit)": [[96, "spkit.clean_phase"]], "conv1d_fb() (in module spkit)": [[97, "spkit.conv1d_fb"]], "conv1d_fft() (in module spkit)": [[98, "spkit.conv1d_fft"]], "conv1d_nan() (in module spkit)": [[99, "spkit.conv1d_nan"]], "conv2d_nan() (in module spkit)": [[100, "spkit.conv2d_nan"]], "create_multidim_space_signal() (in module spkit)": [[101, "spkit.create_multidim_space_signal"]], "create_signal_1d() (in module spkit)": [[102, "spkit.create_signal_1d"]], "create_signal_2d() (in module spkit)": [[103, "spkit.create_signal_2d"]], "gaborwave() (in module spkit.cwt)": [[104, "spkit.cwt.GaborWave"]], "gausswave() (in module spkit.cwt)": [[105, "spkit.cwt.GaussWave"]], "morlatewave() (in module spkit.cwt)": [[106, "spkit.cwt.MorlateWave"]], "poissonwave() (in module spkit.cwt)": [[107, "spkit.cwt.PoissonWave"]], "scalogramcwt() (in module spkit.cwt)": [[108, "spkit.cwt.ScalogramCWT"]], "shannonwave() (in module spkit.cwt)": [[109, "spkit.cwt.ShannonWave"]], "wavepsd() (in module spkit.cwt)": [[110, "spkit.cwt.WavePSD"]], "cmaxicanhatwave() (in module spkit.cwt)": [[111, "spkit.cwt.cMaxicanHatWave"]], "compare_cwt_example() (in module spkit.cwt)": [[112, "spkit.cwt.compare_cwt_example"]], "create_dataset() (in module spkit.data)": [[113, "spkit.data.create_dataset"]], "ecg_sample() (in module spkit.data)": [[114, "spkit.data.ecg_sample"]], "ecg_sample_12leads() (in module spkit.data)": [[115, "spkit.data.ecg_sample_12leads"]], "eda_sample() (in module spkit.data)": [[116, "spkit.data.eda_sample"]], "eeg_sample_14ch() (in module spkit.data)": [[117, "spkit.data.eeg_sample_14ch"]], "eeg_sample_1ch() (in module spkit.data)": [[118, "spkit.data.eeg_sample_1ch"]], "eeg_sample_artifact() (in module spkit.data)": [[119, "spkit.data.eeg_sample_artifact"]], "egm_sample() (in module spkit.data)": [[120, "spkit.data.egm_sample"]], "gaussian() (in module spkit.data)": [[121, "spkit.data.gaussian"]], "gsr_sample() (in module spkit.data)": [[122, "spkit.data.gsr_sample"]], "linear() (in module spkit.data)": [[123, "spkit.data.linear"]], "linear_data() (in module spkit.data)": [[124, "spkit.data.linear_data"]], "mclass_gauss() (in module spkit.data)": [[125, "spkit.data.mclass_gauss"]], "moons() (in module spkit.data)": [[126, "spkit.data.moons"]], "optical_sample() (in module spkit.data)": [[127, "spkit.data.optical_sample"]], "ppg_sample() (in module spkit.data)": [[128, "spkit.data.ppg_sample"]], "primitive_polynomials() (in module spkit.data)": [[129, "spkit.data.primitive_polynomials"]], "sinusoidal() (in module spkit.data)": [[130, "spkit.data.sinusoidal"]], "spiral() (in module spkit.data)": [[131, "spkit.data.spiral"]], "denorm_kernel() (in module spkit)": [[132, "spkit.denorm_kernel"]], "dft_analysis() (in module spkit)": [[133, "spkit.dft_analysis"]], "dft_synthesis() (in module spkit)": [[134, "spkit.dft_synthesis"]], "direction_flow_map() (in module spkit)": [[135, "spkit.direction_flow_map"]], "dispersion_entropy() (in module spkit)": [[136, "spkit.dispersion_entropy"]], "dispersion_entropy_multiscale_refined() (in module spkit)": [[137, "spkit.dispersion_entropy_multiscale_refined"]], "dominent_freq() (in module spkit)": [[138, "spkit.dominent_freq"]], "dominent_freq_win() (in module spkit)": [[139, "spkit.dominent_freq_win"]], "atar() (in module spkit.eeg)": [[140, "spkit.eeg.ATAR"]], "atar_1ch() (in module spkit.eeg)": [[141, "spkit.eeg.ATAR_1Ch"]], "atar_mch() (in module spkit.eeg)": [[142, "spkit.eeg.ATAR_mCh"]], "gen_ssfi() (in module spkit.eeg)": [[143, "spkit.eeg.gen_ssfi"]], "ica_filtering() (in module spkit.eeg)": [[144, "spkit.eeg.ICA_filtering"]], "rhythmicdecomposition() (in module spkit.eeg)": [[145, "spkit.eeg.RhythmicDecomposition"]], "topomap() (in module spkit.eeg)": [[146, "spkit.eeg.topomap"]], "topomap_zi() (in module spkit.eeg)": [[147, "spkit.eeg.TopoMap_Zi"]], "display_topo_rgb() (in module spkit.eeg)": [[148, "spkit.eeg.display_topo_RGB"]], "rhythmic_powers() (in module spkit.eeg)": [[149, "spkit.eeg.rhythmic_powers"]], "rhythmic_powers_win() (in module spkit.eeg)": [[150, "spkit.eeg.rhythmic_powers_win"]], "s1005_get_epos2d() (in module spkit.eeg)": [[151, "spkit.eeg.s1005_get_epos2d"]], "s1010_get_epos2d() (in module spkit.eeg)": [[152, "spkit.eeg.s1010_get_epos2d"]], "s1020_get_epos2d() (in module spkit.eeg)": [[153, "spkit.eeg.s1020_get_epos2d"]], "showtopo() (in module spkit.eeg)": [[154, "spkit.eeg.showTOPO"]], "elbow_knee_point() (in module spkit)": [[155, "spkit.elbow_knee_point"]], "entropy() (in module spkit)": [[156, "spkit.entropy"]], "entropy_approx() (in module spkit)": [[157, "spkit.entropy_approx"]], "entropy_cond() (in module spkit)": [[158, "spkit.entropy_cond"]], "entropy_cross() (in module spkit)": [[159, "spkit.entropy_cross"]], "entropy_diff_cond() (in module spkit)": [[160, "spkit.entropy_diff_cond"]], "entropy_diff_cond_self() (in module spkit)": [[161, "spkit.entropy_diff_cond_self"]], "entropy_diff_joint() (in module spkit)": [[162, "spkit.entropy_diff_joint"]], "entropy_diff_joint_cond() (in module spkit)": [[163, "spkit.entropy_diff_joint_cond"]], "entropy_differential() (in module spkit)": [[164, "spkit.entropy_differential"]], "entropy_granger_causality() (in module spkit)": [[165, "spkit.entropy_granger_causality"]], "entropy_joint() (in module spkit)": [[166, "spkit.entropy_joint"]], "entropy_kld() (in module spkit)": [[167, "spkit.entropy_kld"]], "entropy_permutation() (in module spkit)": [[168, "spkit.entropy_permutation"]], "entropy_sample() (in module spkit)": [[169, "spkit.entropy_sample"]], "entropy_spectral() (in module spkit)": [[170, "spkit.entropy_spectral"]], "entropy_svd() (in module spkit)": [[171, "spkit.entropy_svd"]], "f0_detection() (in module spkit)": [[172, "spkit.f0_detection"]], "ffrft() (in module spkit)": [[173, "spkit.ffrft"]], "fill_nans_1d() (in module spkit)": [[174, "spkit.fill_nans_1d"]], "fill_nans_2d() (in module spkit)": [[175, "spkit.fill_nans_2d"]], "filterdc() (in module spkit)": [[176, "spkit.filterDC"]], "filterdc_sgolay() (in module spkit)": [[177, "spkit.filterDC_sGolay"]], "filter_x() (in module spkit)": [[178, "spkit.filter_X"]], "filter_powerline() (in module spkit)": [[179, "spkit.filter_powerline"]], "filter_smooth_gauss() (in module spkit)": [[180, "spkit.filter_smooth_gauss"]], "filter_smooth_mollifier() (in module spkit)": [[181, "spkit.filter_smooth_mollifier"]], "filter_smooth_sgolay() (in module spkit)": [[182, "spkit.filter_smooth_sGolay"]], "filter_with_kernel() (in module spkit)": [[183, "spkit.filter_with_kernel"]], "filtering_pipeline() (in module spkit)": [[184, "spkit.filtering_pipeline"]], "frft() (in module spkit)": [[185, "spkit.frft"]], "friedrichs_mollifier_kernel() (in module spkit)": [[186, "spkit.friedrichs_mollifier_kernel"]], "gaussian_kernel() (in module spkit)": [[187, "spkit.gaussian_kernel"]], "inter2dplane (class in spkit.geometry)": [[188, "spkit.geometry.Inter2DPlane"]], "triang (class in spkit.geometry)": [[189, "spkit.geometry.TriAng"]], "get_edges_deg() (spkit.geometry.triang method)": [[189, "spkit.geometry.TriAng.get_edges_deg"]], "area_tri() (in module spkit.geometry)": [[190, "spkit.geometry.area_tri"]], "car2spar() (in module spkit.geometry)": [[191, "spkit.geometry.car2spar"]], "dir_vectors() (in module spkit.geometry)": [[192, "spkit.geometry.dir_vectors"]], "divide_space() (in module spkit.geometry)": [[193, "spkit.geometry.divide_space"]], "gettrifaces() (in module spkit.geometry)": [[194, "spkit.geometry.getTriFaces"]], "gettrifaces_v2() (in module spkit.geometry)": [[195, "spkit.geometry.getTriFaces_V2"]], "get_pca() (in module spkit.geometry)": [[196, "spkit.geometry.get_PCA"]], "get_adjacency_matrix_depth() (in module spkit.geometry)": [[197, "spkit.geometry.get_adjacency_matrix_depth"]], "get_adjacency_matrix_dist() (in module spkit.geometry)": [[198, "spkit.geometry.get_adjacency_matrix_dist"]], "get_adjacency_matrix_knn() (in module spkit.geometry)": [[199, "spkit.geometry.get_adjacency_matrix_kNN"]], "get_center() (in module spkit.geometry)": [[200, "spkit.geometry.get_center"]], "get_circle() (in module spkit.geometry)": [[201, "spkit.geometry.get_circle"]], "get_circular_grid() (in module spkit.geometry)": [[202, "spkit.geometry.get_circular_grid"]], "get_ellipsoid() (in module spkit.geometry)": [[203, "spkit.geometry.get_ellipsoid"]], "get_neibours() (in module spkit.geometry)": [[204, "spkit.geometry.get_neibours"]], "get_optimal_projection() (in module spkit.geometry)": [[205, "spkit.geometry.get_optimal_projection"]], "get_plane() (in module spkit.geometry)": [[206, "spkit.geometry.get_plane"]], "get_sphare() (in module spkit.geometry)": [[207, "spkit.geometry.get_sphare"]], "get_square() (in module spkit.geometry)": [[208, "spkit.geometry.get_square"]], "get_square_grid() (in module spkit.geometry)": [[209, "spkit.geometry.get_square_grid"]], "lin_inter() (in module spkit.geometry)": [[210, "spkit.geometry.lin_inter"]], "node2c_to_adjacency_matrix() (in module spkit.geometry)": [[211, "spkit.geometry.node2C_to_adjacency_matrix"]], "opt_project() (in module spkit.geometry)": [[212, "spkit.geometry.opt_project"]], "plot_proj() (in module spkit.geometry)": [[213, "spkit.geometry.plot_proj"]], "rotation_matrix() (in module spkit.geometry)": [[214, "spkit.geometry.rotation_matrix"]], "spar2car() (in module spkit.geometry)": [[215, "spkit.geometry.spar2car"]], "surface_plot_mayavi() (in module spkit.geometry)": [[216, "spkit.geometry.surface_plot_mayavi"]], "surface_reconstruction() (in module spkit.geometry)": [[217, "spkit.geometry.surface_reconstruction"]], "getquickstats() (in module spkit)": [[218, "spkit.getQuickStats"]], "getstats() (in module spkit)": [[219, "spkit.getStats"]], "get_activation_time() (in module spkit)": [[220, "spkit.get_activation_time"]], "get_repolarisation_time() (in module spkit)": [[221, "spkit.get_repolarisation_time"]], "graph_filter_adj() (in module spkit)": [[222, "spkit.graph_filter_adj"]], "graph_filter_dist() (in module spkit)": [[223, "spkit.graph_filter_dist"]], "hist_plot() (in module spkit)": [[224, "spkit.hist_plot"]], "iffrft() (in module spkit)": [[225, "spkit.iffrft"]], "ifrft() (in module spkit)": [[226, "spkit.ifrft"]], "read_bdf() (in module spkit.io)": [[227, "spkit.io.read_bdf"]], "read_hdf() (in module spkit.io)": [[228, "spkit.io.read_hdf"]], "read_surf() (in module spkit.io)": [[229, "spkit.io.read_surf"]], "read_surf_file() (in module spkit.io)": [[230, "spkit.io.read_surf_file"]], "read_vtk() (in module spkit.io)": [[231, "spkit.io.read_vtk"]], "write_vtk() (in module spkit.io)": [[232, "spkit.io.write_vtk"]], "is_power2() (in module spkit)": [[233, "spkit.is_power2"]], "low_resolution() (in module spkit)": [[234, "spkit.low_resolution"]], "activation_repol_time_loc() (in module spkit.mea)": [[235, "spkit.mea.activation_repol_time_loc"]], "activation_time_loc() (in module spkit.mea)": [[236, "spkit.mea.activation_time_loc"]], "align_cycles() (in module spkit.mea)": [[237, "spkit.mea.align_cycles"]], "analyse_mea_file() (in module spkit.mea)": [[238, "spkit.mea.analyse_mea_file"]], "arrange_mea_grid() (in module spkit.mea)": [[239, "spkit.mea.arrange_mea_grid"]], "compute_cv() (in module spkit.mea)": [[240, "spkit.mea.compute_cv"]], "egm_features() (in module spkit.mea)": [[241, "spkit.mea.egm_features"]], "extract_egm() (in module spkit.mea)": [[242, "spkit.mea.extract_egm"]], "find_bad_channels_idx() (in module spkit.mea)": [[243, "spkit.mea.find_bad_channels_idx"]], "get_stim_loc() (in module spkit.mea)": [[244, "spkit.mea.get_stim_loc"]], "mat_1_show() (in module spkit.mea)": [[245, "spkit.mea.mat_1_show"]], "mat_list_show() (in module spkit.mea)": [[246, "spkit.mea.mat_list_show"]], "mea_feature_map() (in module spkit.mea)": [[247, "spkit.mea.mea_feature_map"]], "plot_mea_grid() (in module spkit.mea)": [[248, "spkit.mea.plot_mea_grid"]], "unarrange_mea_grid() (in module spkit.mea)": [[249, "spkit.mea.unarrange_mea_grid"]], "mean_minse() (in module spkit)": [[250, "spkit.mean_minSE"]], "minmse() (in module spkit)": [[251, "spkit.minMSE"]], "classificationtree (class in spkit.ml)": [[252, "spkit.ml.ClassificationTree"]], "dictdepth() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.DictDepth"]], "fit() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.fit"]], "getlcurve() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.getLcurve"]], "gettreedepth() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.getTreeDepth"]], "get_tree() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.get_tree"]], "plotlcurve() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.plotLcurve"]], "plottree() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.plotTree"]], "plottreepath() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.plotTreePath"]], "predict() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.predict"]], "predict_proba() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.predict_proba"]], "prunetree() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.pruneTree"]], "set_featurenames() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.set_featureNames"]], "set_xynode() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.set_xyNode"]], "showtree() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.showTree"]], "shrinktree() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.shrinkTree"]], "treedepth() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.treeDepth"]], "updatetree() (spkit.ml.classificationtree method)": [[252, "spkit.ml.ClassificationTree.updateTree"]], "decisiontree (class in spkit.ml)": [[253, "spkit.ml.DecisionTree"]], "dictdepth() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.DictDepth"]], "fit() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.fit"]], "getlcurve() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.getLcurve"]], "gettreedepth() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.getTreeDepth"]], "get_tree() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.get_tree"]], "plotlcurve() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.plotLcurve"]], "plottree() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.plotTree"]], "plottreepath() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.plotTreePath"]], "predict() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.predict"]], "predict_proba() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.predict_proba"]], "prunetree() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.pruneTree"]], "set_featurenames() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.set_featureNames"]], "set_xynode() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.set_xyNode"]], "showtree() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.showTree"]], "shrinktree() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.shrinkTree"]], "treedepth() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.treeDepth"]], "updatetree() (spkit.ml.decisiontree method)": [[253, "spkit.ml.DecisionTree.updateTree"]], "logisticregression (class in spkit.ml)": [[254, "spkit.ml.LogisticRegression"]], "loss() (spkit.ml.logisticregression method)": [[254, "spkit.ml.LogisticRegression.Loss"]], "normalize() (spkit.ml.logisticregression method)": [[254, "spkit.ml.LogisticRegression.Normalize"]], "polyfeature() (spkit.ml.logisticregression method)": [[254, "spkit.ml.LogisticRegression.PolyFeature"]], "fit() (spkit.ml.logisticregression method)": [[254, "spkit.ml.LogisticRegression.fit"]], "getweights() (spkit.ml.logisticregression method)": [[254, "spkit.ml.LogisticRegression.getWeights"]], "getweightsaslist() (spkit.ml.logisticregression method)": [[254, "spkit.ml.LogisticRegression.getWeightsAsList"]], "onehot() (spkit.ml.logisticregression method)": [[254, "spkit.ml.LogisticRegression.oneHot"]], "plot_lcurve() (spkit.ml.logisticregression method)": [[254, "spkit.ml.LogisticRegression.plot_Lcurve"]], "plot_boundries() (spkit.ml.logisticregression method)": [[254, "spkit.ml.LogisticRegression.plot_boundries"]], "plot_weights() (spkit.ml.logisticregression method)": [[254, "spkit.ml.LogisticRegression.plot_weights"]], "plot_weights2() (spkit.ml.logisticregression method)": [[254, "spkit.ml.LogisticRegression.plot_weights2"]], "predict() (spkit.ml.logisticregression method)": [[254, "spkit.ml.LogisticRegression.predict"]], "predict_proba() (spkit.ml.logisticregression method)": [[254, "spkit.ml.LogisticRegression.predict_proba"]], "regularization() (spkit.ml.logisticregression method)": [[254, "spkit.ml.LogisticRegression.regularization"]], "sigmoid() (spkit.ml.logisticregression method)": [[254, "spkit.ml.LogisticRegression.sigmoid"]], "softmax() (spkit.ml.logisticregression method)": [[254, "spkit.ml.LogisticRegression.softmax"]], "naivebayes (class in spkit.ml)": [[255, "spkit.ml.NaiveBayes"]], "vizpx() (spkit.ml.naivebayes method)": [[255, "spkit.ml.NaiveBayes.VizPx"]], "fit() (spkit.ml.naivebayes method)": [[255, "spkit.ml.NaiveBayes.fit"]], "predict() (spkit.ml.naivebayes method)": [[255, "spkit.ml.NaiveBayes.predict"]], "predict_prob() (spkit.ml.naivebayes method)": [[255, "spkit.ml.NaiveBayes.predict_prob"]], "set_class_labels() (spkit.ml.naivebayes method)": [[255, "spkit.ml.NaiveBayes.set_class_labels"]], "set_feature_names() (spkit.ml.naivebayes method)": [[255, "spkit.ml.NaiveBayes.set_feature_names"]], "dictdepth() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.DictDepth"]], "regressiontree (class in spkit.ml)": [[256, "spkit.ml.RegressionTree"]], "fit() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.fit"]], "getlcurve() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.getLcurve"]], "gettreedepth() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.getTreeDepth"]], "get_tree() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.get_tree"]], "plotlcurve() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.plotLcurve"]], "plottree() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.plotTree"]], "plottreepath() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.plotTreePath"]], "predict() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.predict"]], "predict_proba() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.predict_proba"]], "prunetree() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.pruneTree"]], "set_featurenames() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.set_featureNames"]], "set_xynode() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.set_xyNode"]], "showtree() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.showTree"]], "shrinktree() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.shrinkTree"]], "treedepth() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.treeDepth"]], "updatetree() (spkit.ml.regressiontree method)": [[256, "spkit.ml.RegressionTree.updateTree"]], "mutual_info() (in module spkit)": [[257, "spkit.mutual_info"]], "mutual_info_diff() (in module spkit)": [[258, "spkit.mutual_info_diff"]], "mutual_info_diff_self() (in module spkit)": [[259, "spkit.mutual_info_diff_self"]], "partial_transfer_entropy() (in module spkit)": [[260, "spkit.partial_transfer_entropy"]], "peak_detection() (in module spkit)": [[261, "spkit.peak_detection"]], "peak_interp() (in module spkit)": [[262, "spkit.peak_interp"]], "periodogram() (in module spkit)": [[263, "spkit.periodogram"]], "phase_map() (in module spkit)": [[264, "spkit.phase_map"]], "phase_map_reconstruction() (in module spkit)": [[265, "spkit.phase_map_reconstruction"]], "plotjointentropyxy() (in module spkit)": [[266, "spkit.plotJointEntropyXY"]], "quantize_fd() (in module spkit)": [[267, "spkit.quantize_FD"]], "quantize_signal() (in module spkit)": [[268, "spkit.quantize_signal"]], "ramanujan_filter() (in module spkit)": [[269, "spkit.ramanujan_filter"]], "ramanujan_filter_prange() (in module spkit)": [[270, "spkit.ramanujan_filter_prange"]], "regularised_period_estimation() (in module spkit)": [[271, "spkit.regularised_period_estimation"]], "show_compass() (in module spkit)": [[272, "spkit.show_compass"]], "show_farmulas() (in module spkit)": [[273, "spkit.show_farmulas"]], "signal_delayed_space() (in module spkit)": [[274, "spkit.signal_delayed_space"]], "signal_diff() (in module spkit)": [[275, "spkit.signal_diff"]], "simplify_signal() (in module spkit)": [[276, "spkit.simplify_signal"]], "sinc_dirichlet() (in module spkit)": [[277, "spkit.sinc_dirichlet"]], "sinc_interp() (in module spkit)": [[278, "spkit.sinc_interp"]], "sinemodel_analysis() (in module spkit)": [[279, "spkit.sineModel_analysis"]], "sinemodel_synthesis() (in module spkit)": [[280, "spkit.sineModel_synthesis"]], "sine_spectrum() (in module spkit)": [[281, "spkit.sine_spectrum"]], "sine_tracking() (in module spkit)": [[282, "spkit.sine_tracking"]], "sinetracks_cleaning() (in module spkit)": [[283, "spkit.sinetracks_cleaning"]], "spatial_filter_adj() (in module spkit)": [[284, "spkit.spatial_filter_adj"]], "spatial_filter_dist() (in module spkit)": [[285, "spkit.spatial_filter_dist"]], "get_stats() (in module spkit.stats)": [[286, "spkit.stats.get_stats"]], "outliers() (in module spkit.stats)": [[287, "spkit.stats.outliers"]], "plot_groups_boxes() (in module spkit.stats)": [[288, "spkit.stats.plot_groups_boxes"]], "quick_stats() (in module spkit.stats)": [[289, "spkit.stats.quick_stats"]], "test_2groups() (in module spkit.stats)": [[290, "spkit.stats.test_2groups"]], "test_groups() (in module spkit.stats)": [[291, "spkit.stats.test_groups"]], "stft_analysis() (in module spkit)": [[292, "spkit.stft_analysis"]], "stft_synthesis() (in module spkit)": [[293, "spkit.stft_synthesis"]], "total_variation() (in module spkit)": [[294, "spkit.total_variation"]], "total_variation_win() (in module spkit)": [[295, "spkit.total_variation_win"]], "transfer_entropy() (in module spkit)": [[296, "spkit.transfer_entropy"]], "transfer_entropy_cond() (in module spkit)": [[297, "spkit.transfer_entropy_cond"]], "progbar() (in module spkit.utils)": [[298, "spkit.utils.ProgBar"]], "progbar_jl() (in module spkit.utils)": [[299, "spkit.utils.ProgBar_JL"]], "bcolors (class in spkit.utils)": [[300, "spkit.utils.bcolors"]], "pretty_print() (in module spkit.utils)": [[301, "spkit.utils.pretty_print"]], "txcolors (class in spkit.utils)": [[302, "spkit.utils.txcolors"]], "view_hierarchical_order() (in module spkit.utils)": [[303, "spkit.utils.view_hierarchical_order"]], "wavelet_decomposed_signals() (in module spkit)": [[304, "spkit.wavelet_decomposed_signals"]], "wavelet_filtering() (in module spkit)": [[305, "spkit.wavelet_filtering"]], "wavelet_filtering_win() (in module spkit)": [[306, "spkit.wavelet_filtering_win"]], "wpa_coeff() (in module spkit)": [[307, "spkit.wpa_coeff"]], "wpa_coeff_win() (in module spkit)": [[308, "spkit.wpa_coeff_win"]]}})