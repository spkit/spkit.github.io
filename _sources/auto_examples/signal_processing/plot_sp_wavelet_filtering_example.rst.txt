
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/signal_processing/plot_sp_wavelet_filtering_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_signal_processing_plot_sp_wavelet_filtering_example.py>`
        to download the full example code or to run this example in your browser via JupyterLite or Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_signal_processing_plot_sp_wavelet_filtering_example.py:


===============================
Wavelet Filtering
===============================

**Background**

Other than classical spectral filtering, Wavelet filtering is one of common techniques used in signal processing. 
It allows to filter out short-time duration patterns captured by used wavelet. The patterns to be filtered out depends 
on the wavelet family (e.g. *db3*) used and number of level of decomposition.
Algorithmically, it is very straightforward. Decompose a signal :math:`x(n)`, into wavelet coefficients :math:`X(k):math:`, 
where each coefficient represents the strength of wavelet pattern at particular time. With some threshold, 
remove the coefficients by zeroing out and reconstruct the signal back.

The machanism to choose a threshold on the strength of wavelet coefficient depends on the application and objective. 
To remove the noise and compress the signal, a widely used approach is to filter out all the wavelet coefficients with 
smaller strength.

Literature [1] suggest the **Optimal threshold** on the wavelet coeffiecient is

.. math::
    
    \theta = \tilde{\sigma} \sqrt{2log(N)}


where :math:`\tilde{\sigma}` is estimation of noise variance and :math:`N` length of signal

.. :math::
    
    \tilde{\sigma} = median(|X(k)|)/0.6745

and :math:`X(k)` are wavelet coeffients of :math:`x(n)`

There are other methods to choose threshold too. One can choose a

    * :math:`\theta =1.5\times SD(X(k))` or 
    * :math:`\theta =IQR(X(k))` 

as to select the outliers, by standard deviation and interquartile range, respectively.

According to the theory, the **optimal threshold** should be applied by zeroing out the coefficients 
below with magnitude lower than threshold :math:`|X(k)|<\theta`, and for later two methods of thresholds,
standard deviation and interquartile range, the coefficients outside of the threshold should be zeroing out, 
since they reprepresent the outliers. However, some of the (weired) articles use these thresholds in other-way round.

A simple block-diagram shown below is the procedure of wavelet filtering.


.. figure:: https://raw.githubusercontent.com/spkit/spkit.github.io/master/assets/images/wavelet_filtering_block_dia_1.png
   :align: center
   :scale: 80%


**References:**
    * [1] D.L. Donoho, J.M. Johnstone, **Ideal spatial adaptation by wavelet shrinkage** Biometrika, 81 (1994), pp. 425-455


**API**

    * **spkit.wavelet_filtering(...)**
    * **spkit.wavelet_filtering_win(...)**

In ***spkit***, we have implemented all three methods for threshold computing, can be chosen by *threshold = 'optimal', 
'sd' or 'iqr'* or can be passed as a float value for a fixed threshold, e.g. *threshold = 0.5*. It also support to choose,
if you want to zero out coefficient below the threshold or above by setting *filter_out_below* True or False. 
However, default setting is *threshold='optimal'* and *filter_out_below=True*.

There are a few more options to tune threshold and mode of filtering. 
For more details see doc section or run :func:`sp.wavelet_filtering`

.. GENERATED FROM PYTHON SOURCE LINES 71-85

.. code-block:: Python



    import numpy as np
    import matplotlib.pyplot as plt
    import spkit as sp
    sp.__version__

    # ## Example with EEG sample signal

    x,fs = sp.data.eeg_sample_1ch(ch=0)
    x = x[fs*2:fs*8]
    t = np.arange(len(x))/fs









.. GENERATED FROM PYTHON SOURCE LINES 86-88

Wavelet filtering with optimal threshold ans db3
--------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 88-92

.. code-block:: Python



    xf = sp.wavelet_filtering(x.copy(),wv='db3',threshold='optimal',verbose=1,WPD=False,show=True,fs=fs)




.. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_wavelet_filtering_example_001.png
   :alt: plot sp wavelet filtering example
   :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_wavelet_filtering_example_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    WPD: False  wv: db3  threshold: optimal  k: 1.5  mode: elim  filter_out_below?: True




.. GENERATED FROM PYTHON SOURCE LINES 93-95

With SD threshold
-------------------

.. GENERATED FROM PYTHON SOURCE LINES 95-99

.. code-block:: Python



    xf = sp.wavelet_filtering(x.copy(),wv='db3',threshold='sd',verbose=1,WPD=False,show=True,fs=fs)




.. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_wavelet_filtering_example_002.png
   :alt: plot sp wavelet filtering example
   :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_wavelet_filtering_example_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    WPD: False  wv: db3  threshold: sd  k: 1.5  mode: elim  filter_out_below?: True




.. GENERATED FROM PYTHON SOURCE LINES 100-102

With IQR
----------

.. GENERATED FROM PYTHON SOURCE LINES 102-106

.. code-block:: Python



    xf = sp.wavelet_filtering(x.copy(),wv='db3',threshold='iqr',verbose=1,WPD=False,show=True,fs=fs)




.. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_wavelet_filtering_example_003.png
   :alt: plot sp wavelet filtering example
   :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_wavelet_filtering_example_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    WPD: False  wv: db3  threshold: iqr  k: 1.5  mode: elim  filter_out_below?: True




.. GENERATED FROM PYTHON SOURCE LINES 107-109

Limit the number of levels for decomposition to 2
---------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 109-113

.. code-block:: Python



    xf = sp.wavelet_filtering(x.copy(),wv='db3',threshold='optimal',wpd_maxlevel=2,verbose=1,WPD=False,show=True,fs=fs)




.. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_wavelet_filtering_example_004.png
   :alt: plot sp wavelet filtering example
   :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_wavelet_filtering_example_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    WPD: False  wv: db3  threshold: optimal  k: 1.5  mode: elim  filter_out_below?: True




.. GENERATED FROM PYTHON SOURCE LINES 114-116

With *db12*
-------------------

.. GENERATED FROM PYTHON SOURCE LINES 116-120

.. code-block:: Python



    xf = sp.wavelet_filtering(x.copy(),wv='db12',threshold='optimal',verbose=1,WPD=False,show=True,fs=fs)




.. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_wavelet_filtering_example_005.png
   :alt: plot sp wavelet filtering example
   :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_wavelet_filtering_example_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    WPD: False  wv: db12  threshold: optimal  k: 1.5  mode: elim  filter_out_below?: True




.. GENERATED FROM PYTHON SOURCE LINES 121-123

With Symlet - *sym4*
-------------------

.. GENERATED FROM PYTHON SOURCE LINES 123-127

.. code-block:: Python



    xf = sp.wavelet_filtering(x.copy(),wv='sym4',threshold='optimal',verbose=1,WPD=False,show=True,fs=fs)




.. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_wavelet_filtering_example_006.png
   :alt: plot sp wavelet filtering example
   :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_wavelet_filtering_example_006.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    WPD: False  wv: sym4  threshold: optimal  k: 1.5  mode: elim  filter_out_below?: True




.. GENERATED FROM PYTHON SOURCE LINES 128-130

With Coiflet - *coif4*
-------------------

.. GENERATED FROM PYTHON SOURCE LINES 130-132

.. code-block:: Python


    xf = sp.wavelet_filtering(x.copy(),wv='coif4',threshold='optimal',verbose=1,WPD=False,show=True,fs=fs)



.. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_wavelet_filtering_example_007.png
   :alt: plot sp wavelet filtering example
   :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_wavelet_filtering_example_007.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    WPD: False  wv: coif4  threshold: optimal  k: 1.5  mode: elim  filter_out_below?: True





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.611 seconds)


.. _sphx_glr_download_auto_examples_signal_processing_plot_sp_wavelet_filtering_example.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/spkit/spkit/0.9.X?urlpath=lab/tree/notebooks/auto_examples/signal_processing/plot_sp_wavelet_filtering_example.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: lite-badge

      .. image:: images/jupyterlite_badge_logo.svg
        :target: ../../lite/lab/?path=auto_examples/signal_processing/plot_sp_wavelet_filtering_example.ipynb
        :alt: Launch JupyterLite
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_sp_wavelet_filtering_example.ipynb <plot_sp_wavelet_filtering_example.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_sp_wavelet_filtering_example.py <plot_sp_wavelet_filtering_example.py>`


.. include:: plot_sp_wavelet_filtering_example.recommendations


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
