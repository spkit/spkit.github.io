
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/signal_processing/plot_sp_RFB_for_period_estimation_from_signal.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_signal_processing_plot_sp_RFB_for_period_estimation_from_signal.py>`
        to download the full example code or to run this example in your browser via JupyterLite or Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_signal_processing_plot_sp_RFB_for_period_estimation_from_signal.py:


===============================
 Ramanujan Filter Banks Example  
===============================

.. GENERATED FROM PYTHON SOURCE LINES 9-18

.. code-block:: Python

    import numpy as np
    import matplotlib.pyplot as plt
    from mpl_toolkits.axes_grid1 import make_axes_locatable
    import spkit as sp


    # # Example with Ramanujan Filter Banks









.. GENERATED FROM PYTHON SOURCE LINES 19-21

Signal with period 10 and SNR = 0
-----------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 21-89

.. code-block:: Python


    period = 10
    SNR = 0
    x0 = np.zeros(30)
    x1 = np.random.randn(period)
    x1 = np.tile(x1,10)
    x  = np.r_[x0,x1,x0]

    x_noise = sp.add_noise(x,snr_db=SNR)

    # ## Period Estimation

    Pmax = 40  # Maximum period expected
    Rcq  = 10  # Number of repeats in each Ramanujan filter
    Rav  = 2   # Number of repeats in each averaging filter
    Th   = 0.2 # Threshold zero out the output
 
    y,FR, FA = sp.ramanujan_filter(x_noise,Pmax=Pmax, Rcq=Rcq, Rav=Rav, Th=Th,return_filters=True)


    fig, ax = plt.subplots(2,1,figsize=(15,8),height_ratios=[1, 3])
    ax[0].plot(x,label='signal: x')
    ax[0].plot(x_noise, label='signal+noise: x_noise')
    ax[0].set_xlabel('sample (n)')
    ax[0].legend(ncol=2)

    divider = make_axes_locatable(ax[1])
    cax = divider.append_axes('right', size='2%', pad=0.05)

    im = ax[1].imshow(y.T,aspect='auto',cmap='jet',extent=[1,len(x_noise),Pmax,1])
    #ax[1].set_colorbar(im)
    ax[1].set_xlabel('sample (n)')
    ax[1].set_ylabel('period (in samples)')
    fig.colorbar(im, cax=cax, orientation='vertical')
    plt.show()

    plt.figure()
    plt.stem(np.arange(1,y.shape[1]+1),np.sum(y,0))
    plt.xlabel('period (in samples)')
    plt.ylabel('strength')
    plt.show()

    print('top 10 periods: ',np.argsort(np.sum(y,0))[::-1][:10]+1)


    # ## Ramanujan filter

    plt.figure(figsize=(15,5))
    for i in range(10):
        plt.plot(FR[i] - i*1)
    
    plt.xlim([0,len(FR[i])])
    plt.yticks(-np.arange(10), np.arange(1,10+1))
    plt.show()


    # ###  30-40 filters


    plt.figure(figsize=(15,5))
    for i in range(30,40):
        plt.plot(FR[i] - (i-30)*1)
    
    plt.xlim([0,len(FR[i])])
    plt.yticks(-np.arange(10), np.arange(1,10+1)+30)
    plt.show()





.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_RFB_for_period_estimation_from_signal_001.png
         :alt: plot sp RFB for period estimation from signal
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_RFB_for_period_estimation_from_signal_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_RFB_for_period_estimation_from_signal_002.png
         :alt: plot sp RFB for period estimation from signal
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_RFB_for_period_estimation_from_signal_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_RFB_for_period_estimation_from_signal_003.png
         :alt: plot sp RFB for period estimation from signal
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_RFB_for_period_estimation_from_signal_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_RFB_for_period_estimation_from_signal_004.png
         :alt: plot sp RFB for period estimation from signal
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_RFB_for_period_estimation_from_signal_004.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    top 10 periods:  [10 39 18 17 16 15 14 13 12 11]




.. GENERATED FROM PYTHON SOURCE LINES 90-92

Period Estimation from specific range of period
-----------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 92-138

.. code-block:: Python


    # ## Signal with period 30

    period = 30
    SNR = 0

    x0 = np.zeros(30)
    x1 = np.random.randn(period)
    x1 = np.tile(x1,10)
    x  = np.r_[x0,x1,x0]

    x_noise = sp.add_noise(x,snr_db=SNR)


    # ## Period estimation with range


    y,Plist = sp.ramanujan_filter_prange(x=x_noise,Pmin=20,Pmax=40, Rcq=10, Rav=2, thr=0.2,return_filters=False)

    fig, ax = plt.subplots(2,1,figsize=(15,8),height_ratios=[1, 3])
    ax[0].plot(x,label='signal: x')
    ax[0].plot(x_noise, label='signal+noise: x_noise')
    ax[0].set_xlabel('sample (n)')
    ax[0].legend(ncol=2)

    divider = make_axes_locatable(ax[1])
    cax = divider.append_axes('right', size='2%', pad=0.05)

    im = ax[1].imshow(y.T,aspect='auto',cmap='jet',extent=[1,len(x_noise),Pmax,1])
    #ax[1].set_colorbar(im)
    ax[1].set_xlabel('sample (n)')
    ax[1].set_ylabel('period (in samples)')
    fig.colorbar(im, cax=cax, orientation='vertical')
    plt.show()

    Penrgy = np.sum(y,0)

    plt.figure()
    plt.stem(Plist,Penrgy)
    plt.xlabel('period (in samples)')
    plt.ylabel('strength')
    plt.show()

    print('top 10 periods: ',Plist[np.argsort(Penrgy)[::-1]][:10])





.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_RFB_for_period_estimation_from_signal_005.png
         :alt: plot sp RFB for period estimation from signal
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_RFB_for_period_estimation_from_signal_005.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_RFB_for_period_estimation_from_signal_006.png
         :alt: plot sp RFB for period estimation from signal
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_RFB_for_period_estimation_from_signal_006.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    top 10 periods:  [30 32 28 29 26 31 34 27 21 22]




.. GENERATED FROM PYTHON SOURCE LINES 139-141

Multiple Periods
------------------

.. GENERATED FROM PYTHON SOURCE LINES 141-183

.. code-block:: Python



    periods    = [10,14,18]
    signal_length = 200
    SNR = 10

    x = np.zeros(signal_length)

    for period in periods:
        x_temp  = np.random.randn(period)
        x_temp  = np.tile(x_temp,int(np.ceil(signal_length/period))) 
        x_temp  = x_temp[:signal_length]
        x += x_temp
    
    x_noise = sp.add_noise(x,snr_db=SNR)


    y,Plist = sp.ramanujan_filter_prange(x=x_noise,Pmin=5,Pmax=30, Rcq=10, Rav=2, thr=0.2,return_filters=False)

    fig, ax = plt.subplots(2,1,figsize=(15,8),height_ratios=[1, 3])
    ax[0].plot(x,label='signal: x')
    ax[0].plot(x_noise, label='signal+noise: x_noise')
    ax[0].set_xlabel('sample (n)')
    ax[0].legend(ncol=2)

    divider = make_axes_locatable(ax[1])
    cax = divider.append_axes('right', size='2%', pad=0.05)

    im = ax[1].imshow(y.T,aspect='auto',cmap='jet',extent=[1,len(x_noise),Pmax,1])
    #ax[1].set_colorbar(im)
    ax[1].set_xlabel('sample (n)')
    ax[1].set_ylabel('period (in samples)')
    fig.colorbar(im, cax=cax, orientation='vertical')
    plt.show()

    Penrgy = np.sum(y,0)
    plt.figure()
    plt.stem(Plist,Penrgy)
    plt.xlabel('period (in samples)')
    plt.ylabel('strength')
    plt.show()

    print('top 10 periods: ',Plist[np.argsort(Penrgy)[::-1]][:10])


.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_RFB_for_period_estimation_from_signal_007.png
         :alt: plot sp RFB for period estimation from signal
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_RFB_for_period_estimation_from_signal_007.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_RFB_for_period_estimation_from_signal_008.png
         :alt: plot sp RFB for period estimation from signal
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_RFB_for_period_estimation_from_signal_008.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    top 10 periods:  [10 14  9 18  5  7  6 16  8 11]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.859 seconds)


.. _sphx_glr_download_auto_examples_signal_processing_plot_sp_RFB_for_period_estimation_from_signal.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/spkit/spkit/0.9.X?urlpath=lab/tree/notebooks/auto_examples/signal_processing/plot_sp_RFB_for_period_estimation_from_signal.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: lite-badge

      .. image:: images/jupyterlite_badge_logo.svg
        :target: ../../lite/lab/?path=auto_examples/signal_processing/plot_sp_RFB_for_period_estimation_from_signal.ipynb
        :alt: Launch JupyterLite
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_sp_RFB_for_period_estimation_from_signal.ipynb <plot_sp_RFB_for_period_estimation_from_signal.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_sp_RFB_for_period_estimation_from_signal.py <plot_sp_RFB_for_period_estimation_from_signal.py>`


.. include:: plot_sp_RFB_for_period_estimation_from_signal.recommendations


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
