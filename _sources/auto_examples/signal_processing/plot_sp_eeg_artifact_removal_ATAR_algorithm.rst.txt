
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/signal_processing/plot_sp_eeg_artifact_removal_ATAR_algorithm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_signal_processing_plot_sp_eeg_artifact_removal_ATAR_algorithm.py>`
        to download the full example code or to run this example in your browser via JupyterLite or Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_signal_processing_plot_sp_eeg_artifact_removal_ATAR_algorithm.py:


===============================
EEG Artifact removal using ATAR
===============================

ATAR: Automatic and Tunable Artifact Removal Algorithm

**ATAR Algorithm -  Automatic and Tunable Artifact Removal Algorithm for EEG Signal.** 

The algorithm is based on wavelet packet decomposion (WPD), the full description of algorithm can be 
found here [Automatic and Tunable Artifact Removal Algorithm for EEG](https://doi.org/10.1016/j.bspc.2019.101624) 
from the article [1]. Figure 1 shows the the block diagram and operating mode of filtering.


.. figure:: https://raw.githubusercontent.com/spkit/spkit.github.io/master/assets/images/ATAR_BD_FilteringMode_1.png
  :align: center

The algorithm is applied on the given multichannel signal X (n,nch), window wise and reconstructed 
with overall add method. The defualt window size is set to 1 sec (128 samples). For each window, 
the threshold :math:`   heta_lpha` is computed and applied to filter the wavelet coefficients.

There is manily one parameter that can be tuned :math:`eta` with different operating modes and other settings.
Here is the list of parameters and there simplified meaning given:

Parameters:
* :math:`eta:` This is a main parameter to tune, highher the value, more aggressive the algorithm to 
remove the artifacts. By default it is set to 0.1. :math:`eta` is postive float value.

* ***OptMode***: This sets the mode of operation, which decides hoe to remove the artifact. By default 
it is set to 'soft', which means Soft Thresholding, in this mode, rather than removing 
the pressumed artifact, it is suppressed to the threshold, softly. `OptMode='linAtten'`, 
suppresses the pressumed artifact depending on how far it is from threshold. Finally, 
the most common mode - Elimination (OptMode='elim'), which remove the pressumed artifact.

    * Soft Thresholding and Linear Attenuation require addition parameters to set 
    the associated thresholds which are by default set to bf=2, gf=0.8. 

* ***wv=db3***: Wavelet funtion, by default set to db3, could be any of 
  ['db3'.....'db38', 'sym2.....sym20', 'coif1.....coif17', 'bior1.1....bior6.8', 'rbio1.1...rbio6.8', 'dmey']

* *$k_1$*, *$k_2$*: Lower and upper bounds on threshold :math:` heta_lpha.
* ***IPR=[25,75]***: interpercentile range, range used to compute threshold

.. GENERATED FROM PYTHON SOURCE LINES 45-67

.. code-block:: Python


    # Importing libraries/spkit
    import numpy as np
    import matplotlib.pyplot as plt
    import warnings
    warnings.filterwarnings("ignore")

    import spkit as sp
    from spkit.data import load_data
    print('spkit version :', sp.__version__)



    # 14 channel EEG sample signas

    X,ch_names = load_data.eegSample()
    fs = 128

    Xf = sp.filter_X(X,band=[0.5], btype='highpass',fs=fs,verbose=0)
    print(Xf.shape)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    spkit version : 0.0.9.7
    /Users/nikeshbajaj/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/Github/GIT3/Dev/SPKIT_Dev/SPKIT_DOC_7/examples/signal_processing/plot_sp_eeg_artifact_removal_ATAR_algorithm.py:60: DeprecationWarning: function eegSample will be deprecated in future version, due to naming convension, please use 'eeg_sample_14ch' for updated/improved functionality [spkit-0.0.9.7].
    /Users/nikeshbajaj/anaconda3/envs/SPHX/lib/python3.10/site-packages/scipy/signal/_filter_design.py:2899: DeprecationWarning: Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)
    (2048, 14)




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Artifact removal using ATAR

.. GENERATED FROM PYTHON SOURCE LINES 69-105

.. code-block:: Python


    XR = sp.eeg.ATAR(Xf.copy(),verbose=0)
    print(XR.shape)

    t = np.arange(Xf.shape[0])/fs
    plt.figure(figsize=(12,8))
    plt.subplot(211)
    plt.plot(t,XR+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('XR: Corrected Signal')
    plt.subplot(212)
    plt.plot(t,(Xf-XR)+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('Xf - XR: Difference (removed signal)')
    plt.suptitle('ATAR: Soft Thresholding (default mode)')
    plt.tight_layout()
    plt.show()

    plt.figure(figsize=(12,5))
    plt.plot(t,Xf+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('Xf: 14 channel - EEG Signal (filtered)')
    plt.tight_layout()
    plt.show()






.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_001.png
         :alt: ATAR: Soft Thresholding (default mode), XR: Corrected Signal, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_002.png
         :alt: Xf: 14 channel - EEG Signal (filtered)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_002.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (2048, 14)




.. GENERATED FROM PYTHON SOURCE LINES 106-107

Artifact removal using ATAR -  Linear Attenuation Mode

.. GENERATED FROM PYTHON SOURCE LINES 107-132

.. code-block:: Python


    XR = sp.eeg.ATAR(Xf.copy(),verbose=0,OptMode='linAtten')
    print(XR.shape)

    t = np.arange(Xf.shape[0])/fs
    plt.figure(figsize=(15,5))
    plt.subplot(121)
    plt.plot(t,XR+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('XR: Corrected Signal')
    plt.subplot(122)
    plt.plot(t,(Xf-XR)+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('Xf - XR: Difference (removed signal)')
    plt.suptitle('ATAR: Linear Attenuation Mode')
    plt.tight_layout()
    plt.show()





.. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_003.png
   :alt: ATAR: Linear Attenuation Mode, XR: Corrected Signal, Xf - XR: Difference (removed signal)
   :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (2048, 14)




.. GENERATED FROM PYTHON SOURCE LINES 133-134

Artifact removal using ATAR - Elimination Mode

.. GENERATED FROM PYTHON SOURCE LINES 134-160

.. code-block:: Python


    XR = sp.eeg.ATAR(Xf.copy(),verbose=0,OptMode='elim')
    print(XR.shape)

    t = np.arange(Xf.shape[0])/fs
    plt.figure(figsize=(15,5))
    plt.subplot(121)
    plt.plot(t,XR+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('XR: Corrected Signal')
    plt.subplot(122)
    plt.plot(t,(Xf-XR)+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('Xf - XR: Difference (removed signal)')
    plt.suptitle('ATAR: Elimination Mode')
    plt.tight_layout()
    plt.show()






.. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_004.png
   :alt: ATAR: Elimination Mode, XR: Corrected Signal, Xf - XR: Difference (removed signal)
   :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (2048, 14)




.. GENERATED FROM PYTHON SOURCE LINES 161-162

Tuning $\beta$ with 'soft' : Controlling the aggressiveness

.. GENERATED FROM PYTHON SOURCE LINES 162-192

.. code-block:: Python


    betas = np.r_[np.arange(0.01,0.1,0.02), np.arange(0.1,1, 0.1)].round(2)

    t = np.arange(Xf.shape[0])/fs

    for b in betas:
        XR = sp.eeg.ATAR(Xf.copy(),verbose=0,beta=b,OptMode='soft')
        XR.shape

        plt.figure(figsize=(15,5))
        plt.subplot(121)
        plt.plot(t,XR+np.arange(-7,7)*200)
        plt.xlim([t[0],t[-1]])
        plt.xlabel('time (sec)')
        plt.yticks(np.arange(-7,7)*200,ch_names)
        plt.grid()
        plt.title('XR: Corrected Signal: '+r'$\beta=$' + f'{b}')
        plt.subplot(122)
        plt.plot(t,(Xf-XR)+np.arange(-7,7)*200)
        plt.xlim([t[0],t[-1]])
        plt.xlabel('time (sec)')
        plt.yticks(np.arange(-7,7)*200,ch_names)
        plt.grid()
        plt.title('Xf - XR: Difference (removed signal)')
        plt.suptitle('ATAR: ' +r'$\beta=$' + f'{b}')
        plt.tight_layout()
        plt.show()






.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_005.png
         :alt: ATAR: $\beta=$0.01, XR: Corrected Signal: $\beta=$0.01, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_005.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_006.png
         :alt: ATAR: $\beta=$0.03, XR: Corrected Signal: $\beta=$0.03, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_006.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_007.png
         :alt: ATAR: $\beta=$0.05, XR: Corrected Signal: $\beta=$0.05, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_007.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_008.png
         :alt: ATAR: $\beta=$0.07, XR: Corrected Signal: $\beta=$0.07, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_008.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_009.png
         :alt: ATAR: $\beta=$0.09, XR: Corrected Signal: $\beta=$0.09, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_009.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_010.png
         :alt: ATAR: $\beta=$0.1, XR: Corrected Signal: $\beta=$0.1, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_010.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_011.png
         :alt: ATAR: $\beta=$0.2, XR: Corrected Signal: $\beta=$0.2, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_011.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_012.png
         :alt: ATAR: $\beta=$0.3, XR: Corrected Signal: $\beta=$0.3, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_012.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_013.png
         :alt: ATAR: $\beta=$0.4, XR: Corrected Signal: $\beta=$0.4, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_013.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_014.png
         :alt: ATAR: $\beta=$0.5, XR: Corrected Signal: $\beta=$0.5, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_014.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_015.png
         :alt: ATAR: $\beta=$0.6, XR: Corrected Signal: $\beta=$0.6, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_015.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_016.png
         :alt: ATAR: $\beta=$0.7, XR: Corrected Signal: $\beta=$0.7, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_016.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_017.png
         :alt: ATAR: $\beta=$0.8, XR: Corrected Signal: $\beta=$0.8, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_017.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_018.png
         :alt: ATAR: $\beta=$0.9, XR: Corrected Signal: $\beta=$0.9, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_018.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 193-194

On smaller segment

.. GENERATED FROM PYTHON SOURCE LINES 194-231

.. code-block:: Python


    Xf1 = Xf[128*10:128*14].copy()

    t = np.arange(Xf1.shape[0])/fs
    plt.figure(figsize=(12,5))
    plt.plot(t,Xf1+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('Xf: 14 channel - EEG Signal (filtered)')
    plt.tight_layout()
    plt.show()


    XR1 = sp.eeg.ATAR(Xf1.copy(),verbose=0)
    print(XR1.shape)


    plt.figure(figsize=(15,5))
    plt.subplot(121)
    plt.plot(t,XR1+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('XR: Corrected Signal')

    plt.subplot(122)
    plt.plot(t,(Xf1-XR1)+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('Xf - XR: Difference (removed signal)')
    plt.tight_layout()
    plt.show()



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_019.png
         :alt: Xf: 14 channel - EEG Signal (filtered)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_019.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_020.png
         :alt: XR: Corrected Signal, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/signal_processing/images/sphx_glr_plot_sp_eeg_artifact_removal_ATAR_algorithm_020.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (512, 14)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 8.095 seconds)


.. _sphx_glr_download_auto_examples_signal_processing_plot_sp_eeg_artifact_removal_ATAR_algorithm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/spkit/spkit/0.9.X?urlpath=lab/tree/notebooks/auto_examples/signal_processing/plot_sp_eeg_artifact_removal_ATAR_algorithm.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: lite-badge

      .. image:: images/jupyterlite_badge_logo.svg
        :target: ../../lite/lab/?path=auto_examples/signal_processing/plot_sp_eeg_artifact_removal_ATAR_algorithm.ipynb
        :alt: Launch JupyterLite
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_sp_eeg_artifact_removal_ATAR_algorithm.ipynb <plot_sp_eeg_artifact_removal_ATAR_algorithm.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_sp_eeg_artifact_removal_ATAR_algorithm.py <plot_sp_eeg_artifact_removal_ATAR_algorithm.py>`


.. include:: plot_sp_eeg_artifact_removal_ATAR_algorithm.recommendations


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
