
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/electroencephalogram/plot_sp_ATAR_algorithm_tuning.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_electroencephalogram_plot_sp_ATAR_algorithm_tuning.py>`
        to download the full example code or to run this example in your browser via JupyterLite or Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_electroencephalogram_plot_sp_ATAR_algorithm_tuning.py:


======================================================
ATAR: Automatic and Tunable Artifact Removal Algorithm
======================================================


**ATAR: Automatic and Tunable Artifact Removal Algorithm -  Tuning**

The algorithm is based on wavelet packet decomposion (WPD), the full description of algorithm can be found here 
`Automatic and Tunable Artifact Removal Algorithm for EEG <https://doi.org/10.1016/j.bspc.2019.101624>`_ from the article [1]. 
Figure 1 shows the the block diagram and operating mode of filtering.

.. figure:: https://raw.githubusercontent.com/spkit/spkit.github.io/master/assets/images/ATAR_BD_FilteringMode_1.png
    :align: center

    Figure 1: ATAR Algorithm


The algorithm is applied on the given multichannel signal X (n,nch), window wise and reconstructed with 
overall add method. The defualt window size is set to 1 sec (128 samples). For each window, the threshold 
:math:`\theta_\alpha` is computed and applied to filter the wavelet coefficients.

There is manily one parameter that can be tuned :math:`\beta` with different operating modes and other 
settings. Here is the list of parameters and there simplified meaning given:

Parameters:

    * :math:`\beta` : This is a main parameter to tune, highher the value, more aggressive the algorithm to 
      remove the artifacts. By default it is set to 0.1. :math:`\beta` is postive float value.

    * ***OptMode***: This sets the mode of operation, which decides hoe to remove the artifact. By default 
      it is set to 'soft', which means Soft Thresholding, in this mode, rather than removing the pressumed artifact, 
      it is suppressed to the threshold, softly. `OptMode='linAtten'`, suppresses the pressumed artifact depending 
      on how far it is from threshold. 
      Finally, the most common mode - Elimination (OptMode='elim'), which remove the pressumed artifact.

      Soft Thresholding and Linear Attenuation require addition parameters to set the associated thresholds which 
      are by default set to bf=2, gf=0.8. 

    * ***wv=db3***: Wavelet funtion, by default set to db3, could be any of ['db3'.....'db38', 'sym2.....sym20', 'coif1.....coif17', 'bior1.1....bior6.8', 'rbio1.1...rbio6.8', 'dmey']

    * :math:`k_1`, :math:`k_2`: Lower and upper bounds on threshold :math:`\theta_\alpha`.

    * ***IPR=[25,75]***: interpercentile range, range used to compute threshold

Figure below, shows the affect of :math:`\beta` on a segment of signal with three different modes.

.. figure:: https://raw.githubusercontent.com/Nikeshbajaj/spkit/master/figures/atar_beta_tune.gif
    :align: center 
    :width: 700


**Reference:**

    * [1] Bajaj, Nikesh, et al. "Automatic and tunable algorithm for EEG artifact removal using 
       wavelet decomposition with applications in predictive modeling during auditory tasks." 
       Biomedical Signal Processing and Control 55 (2020): 101624.


There are three functions in **spkit.eeg** for **ATAR algorithm**

    * **spkit.eeg.ATAR(...)**  
    * spkit.eeg.ATAR_1Ch(...)
    * spkit.eeg.ATAR_mCh(...)

***spkit.eeg.ATAR_1Ch*** is for single channel input signal x of shape (n,), where as, ***spkit.eeg.ATAR_mCh*** 
is for multichannel signal X with shape (n,ch), which uses joblib for parallel processing of multi channels. 
For some OS, joblib raise an error of ***BrokenProcessPool***, in that case use  ***spkit.eeg.ATAR_mCh_noParallel***, 
which is same as ***spkit.eeg.ATAR_mCh***, except parallel processing. Alternatively, use ***spkit.eeg.ATAR_1Ch*** 
with for loop for each channel.

***spkit.eeg.ATAR*** is generalized function, this will call ***spkit.eeg.ATAR_1Ch*** is single channel 
is passed else ***spkit.eeg.ATAR_mCh*** and with *use_joblib* agrument, 
it can be set to try parallel processing, else will process each channel individually. 

We recommed to use ***spkit.eeg.ATAR***.

.. GENERATED FROM PYTHON SOURCE LINES 78-109

.. code-block:: Python




    # Importing libraries/spkit
    import numpy as np
    import matplotlib.pyplot as plt
    import warnings
    warnings.filterwarnings("ignore")

    import spkit as sp
    print('spkit version :', sp.__version__)


    # # Import EEG sample data
    X, fs, ch_names = sp.data.eeg_sample_14ch()
    #X = sp.filterDC_sGolay(X, window_length=fs//3+1)

    # ## Filter with highpass

    Xf = sp.filter_X(X.copy(),fs=fs, band=[0.5], btype='highpass',ftype='SOS')

    t = np.arange(Xf.shape[0])/fs
    plt.figure(figsize=(12,5))
    plt.plot(t,Xf+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('Xf: 14 channel - EEG Signal (filtered)')
    plt.show()




.. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_001.png
   :alt: Xf: 14 channel - EEG Signal (filtered)
   :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    spkit version : 0.0.9.7




.. GENERATED FROM PYTHON SOURCE LINES 110-112

Applying ATAR Algorithm
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 114-116

Soft Thresholding: 
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 116-142

.. code-block:: Python


    # default is set to: OptMode='soft' and :math:`\beta=0.1`


    XR = sp.eeg.ATAR(Xf.copy(),verbose=0)
    XR.shape


    plt.figure(figsize=(12,5))
    plt.plot(t,XR+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('XR: Corrected Signal')
    plt.show()

    plt.figure(figsize=(12,5))
    plt.plot(t,(Xf-XR)+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('Xf - XR: Difference (removed signal)')
    plt.show()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_002.png
         :alt: XR: Corrected Signal
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_003.png
         :alt: Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_003.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 143-145

Linear Attenuation:
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 145-169

.. code-block:: Python



    XR = sp.eeg.ATAR(Xf.copy(),verbose=0,OptMode='linAtten')
    print(XR.shape)


    plt.figure(figsize=(12,5))
    plt.plot(t,XR+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('XR: Corrected Signal')
    plt.show()

    plt.figure(figsize=(12,5))
    plt.plot(t,(Xf-XR)+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('Xf - XR: Difference (removed signal)')
    plt.show()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_004.png
         :alt: XR: Corrected Signal
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_004.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_005.png
         :alt: Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_005.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (2048, 14)




.. GENERATED FROM PYTHON SOURCE LINES 170-172

Elimination:
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 172-196

.. code-block:: Python



    XR = sp.eeg.ATAR(Xf.copy(),verbose=0,OptMode='elim')
    XR.shape


    plt.figure(figsize=(12,5))
    plt.plot(t,XR+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('XR: Corrected Signal')
    plt.show()

    plt.figure(figsize=(12,5))
    plt.plot(t,(Xf-XR)+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('Xf - XR: Difference (removed signal)')
    plt.show()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_006.png
         :alt: XR: Corrected Signal
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_006.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_007.png
         :alt: Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_007.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 197-199

Tuning :math:`\beta` with 'soft' : Controlling the aggressiveness
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 199-225

.. code-block:: Python



    betas = np.r_[np.arange(0.01,0.1,0.02), np.arange(0.1,1, 0.1)].round(2)

    for b in betas:
        XR = sp.eeg.ATAR(Xf.copy(),verbose=0,beta=b,OptMode='soft')
        XR.shape

        plt.figure(figsize=(15,5))
        plt.subplot(121)
        plt.plot(t,XR+np.arange(-7,7)*200)
        plt.xlim([t[0],t[-1]])
        plt.xlabel('time (sec)')
        plt.yticks(np.arange(-7,7)*200,ch_names)
        plt.grid()
        plt.title('XR: Corrected Signal: '+r'$\beta=$' + f'{b}')
    
        plt.subplot(122)
        plt.plot(t,(Xf-XR)+np.arange(-7,7)*200)
        plt.xlim([t[0],t[-1]])
        plt.xlabel('time (sec)')
        plt.yticks(np.arange(-7,7)*200,ch_names)
        plt.grid()
        plt.title('Xf - XR: Difference (removed signal)')
        plt.show()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_008.png
         :alt: XR: Corrected Signal: $\beta=$0.01, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_008.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_009.png
         :alt: XR: Corrected Signal: $\beta=$0.03, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_009.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_010.png
         :alt: XR: Corrected Signal: $\beta=$0.05, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_010.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_011.png
         :alt: XR: Corrected Signal: $\beta=$0.07, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_011.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_012.png
         :alt: XR: Corrected Signal: $\beta=$0.09, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_012.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_013.png
         :alt: XR: Corrected Signal: $\beta=$0.1, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_013.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_014.png
         :alt: XR: Corrected Signal: $\beta=$0.2, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_014.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_015.png
         :alt: XR: Corrected Signal: $\beta=$0.3, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_015.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_016.png
         :alt: XR: Corrected Signal: $\beta=$0.4, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_016.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_017.png
         :alt: XR: Corrected Signal: $\beta=$0.5, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_017.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_018.png
         :alt: XR: Corrected Signal: $\beta=$0.6, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_018.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_019.png
         :alt: XR: Corrected Signal: $\beta=$0.7, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_019.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_020.png
         :alt: XR: Corrected Signal: $\beta=$0.8, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_020.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_021.png
         :alt: XR: Corrected Signal: $\beta=$0.9, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_021.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 226-228

Tuning :math:`\beta` with 'elim'
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 228-254

.. code-block:: Python



    betas = np.r_[np.arange(0.01,0.1,0.02), np.arange(0.1,1, 0.1)].round(2)

    for b in betas:
        XR = sp.eeg.ATAR(Xf.copy(),verbose=0,beta=b,OptMode='elim')
        XR.shape

        plt.figure(figsize=(15,5))
        plt.subplot(121)
        plt.plot(t,XR+np.arange(-7,7)*200)
        plt.xlim([t[0],t[-1]])
        plt.xlabel('time (sec)')
        plt.yticks(np.arange(-7,7)*200,ch_names)
        plt.grid()
        plt.title('XR: Corrected Signal: '+r'$\beta=$' + f'{b}')
    
        plt.subplot(122)
        plt.plot(t,(Xf-XR)+np.arange(-7,7)*200)
        plt.xlim([t[0],t[-1]])
        plt.xlabel('time (sec)')
        plt.yticks(np.arange(-7,7)*200,ch_names)
        plt.grid()
        plt.title('Xf - XR: Difference (removed signal)')
        plt.show()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_022.png
         :alt: XR: Corrected Signal: $\beta=$0.01, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_022.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_023.png
         :alt: XR: Corrected Signal: $\beta=$0.03, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_023.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_024.png
         :alt: XR: Corrected Signal: $\beta=$0.05, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_024.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_025.png
         :alt: XR: Corrected Signal: $\beta=$0.07, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_025.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_026.png
         :alt: XR: Corrected Signal: $\beta=$0.09, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_026.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_027.png
         :alt: XR: Corrected Signal: $\beta=$0.1, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_027.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_028.png
         :alt: XR: Corrected Signal: $\beta=$0.2, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_028.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_029.png
         :alt: XR: Corrected Signal: $\beta=$0.3, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_029.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_030.png
         :alt: XR: Corrected Signal: $\beta=$0.4, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_030.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_031.png
         :alt: XR: Corrected Signal: $\beta=$0.5, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_031.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_032.png
         :alt: XR: Corrected Signal: $\beta=$0.6, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_032.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_033.png
         :alt: XR: Corrected Signal: $\beta=$0.7, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_033.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_034.png
         :alt: XR: Corrected Signal: $\beta=$0.8, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_034.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_035.png
         :alt: XR: Corrected Signal: $\beta=$0.9, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_035.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 255-257

Other settings
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 259-261

Changing wavelet function
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 261-306

.. code-block:: Python



    XR = sp.eeg.ATAR(Xf.copy(),wv='db8',beta=0.01,OptMode='elim',verbose=0,)
    XR.shape

    plt.figure(figsize=(15,5))
    plt.subplot(121)
    plt.plot(t,XR+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('XR: Corrected Signal: '+r'$wv=db8$')

    plt.subplot(122)
    plt.plot(t,(Xf-XR)+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('Xf - XR: Difference (removed signal)')
    plt.show()


    XR = sp.eeg.ATAR_mCh_noParallel(Xf.copy(),wv='db32',beta=0.01,OptMode='elim',verbose=0,)
    XR.shape

    plt.figure(figsize=(15,5))
    plt.subplot(121)
    plt.plot(t,XR+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('XR: Corrected Signal: '+r'$wv=db32$')

    plt.subplot(122)
    plt.plot(t,(Xf-XR)+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('Xf - XR: Difference (removed signal)')
    plt.show()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_036.png
         :alt: XR: Corrected Signal: $wv=db8$, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_036.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_037.png
         :alt: XR: Corrected Signal: $wv=db32$, Xf - XR: Difference (removed signal)
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_037.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 307-309

Changing upper and lower bounds: :math:`k_1`, :math:`k_2`
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 309-336

.. code-block:: Python


    # :math:`k_1` and :math:`k_2` are lower and upper bound on the threshold :math:`\theta_\alpha`. :math:`k_1` is set to 10, 
    # which means, the lowest threshold value will be 10, this helps to prevent the removal of entire signal (zeroing out) due 
    # to present of high magnitute of artifact. :math:`k_2` is largest threshold value, which in terms set 
    # the decaying curve of threshold :math:`\theta_\alpha`. Increasing k2 will make the removal less aggressive

    XR = sp.eeg.ATAR(Xf.copy(),wv='db3',beta=0.1,OptMode='elim',verbose=0,k1=10, k2=200)
    XR.shape

    plt.figure(figsize=(15,5))
    plt.subplot(121)
    plt.plot(t,XR+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('XR: Corrected Signal: '+r'$k_2=200$')

    plt.subplot(122)
    plt.plot(t,(Xf-XR)+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('Xf - XR: Difference (removed signal)')
    plt.show()




.. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_038.png
   :alt: XR: Corrected Signal: $k_2=200$, Xf - XR: Difference (removed signal)
   :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_038.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 337-339

Changing IPR -  Interpercentile range
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 339-364

.. code-block:: Python


    # **IPR is interpercentile range**, which is set to 50% (IPR=[25,75]) as default (inter-quartile range), incresing the range increses the aggressiveness of removing artifacts. 



    XR = sp.eeg.ATAR(Xf.copy(),wv='db3',beta=0.1,OptMode='elim',verbose=0,k1=10, k2=200, IPR=[15,85])

    plt.figure(figsize=(15,5))
    plt.subplot(121)
    plt.plot(t,XR+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('XR: Corrected Signal: '+r'$IPR=[15,85]$~ 70%')

    plt.subplot(122)
    plt.plot(t,(Xf-XR)+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('Xf - XR: Difference (removed signal)')
    plt.show()




.. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_039.png
   :alt: XR: Corrected Signal: $IPR=[15,85]$~ 70%, Xf - XR: Difference (removed signal)
   :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_039.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 365-367

Using the fix threshold :math:`\theta_\alpha`
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 367-390

.. code-block:: Python


    # Using the fix threshold $\theta_\alpha=300$,  to all the windows

    XR = sp.eeg.ATAR(Xf.copy(),wv='db3',thr_method=None,theta_a=300,OptMode='elim',verbose=0)

    plt.figure(figsize=(15,5))
    plt.subplot(121)
    plt.plot(t,XR+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('XR: Corrected Signal: '+r'$\theta_\alpha=300$')

    plt.subplot(122)
    plt.plot(t,(Xf-XR)+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('Xf - XR: Difference (removed signal)')
    plt.show()




.. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_040.png
   :alt: XR: Corrected Signal: $\theta_\alpha=300$, Xf - XR: Difference (removed signal)
   :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_040.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 391-393

Changing window length (5 sec)
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 393-419

.. code-block:: Python


    # **winsize** is be default set to 128 (1 sec), assuming 128 sampling rate, which can be changed as needed. In following example it is changed to 5 sec.


    XR = sp.eeg.ATAR(Xf.copy(),winsize=128*5,beta=0.01,OptMode='elim',verbose=0,)

    plt.figure(figsize=(15,5))
    plt.subplot(121)
    plt.plot(t,XR+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('XR: Corrected Signal: '+r'$winsize=5sec$')

    plt.subplot(122)
    plt.plot(t,(Xf-XR)+np.arange(-7,7)*200)
    plt.xlim([t[0],t[-1]])
    plt.xlabel('time (sec)')
    plt.yticks(np.arange(-7,7)*200,ch_names)
    plt.grid()
    plt.title('Xf - XR: Difference (removed signal)')
    plt.show()






.. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_041.png
   :alt: XR: Corrected Signal: $winsize=5sec$, Xf - XR: Difference (removed signal)
   :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_ATAR_algorithm_tuning_041.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 14.873 seconds)


.. _sphx_glr_download_auto_examples_electroencephalogram_plot_sp_ATAR_algorithm_tuning.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/spkit/spkit/0.9.X?urlpath=lab/tree/notebooks/auto_examples/electroencephalogram/plot_sp_ATAR_algorithm_tuning.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: lite-badge

      .. image:: images/jupyterlite_badge_logo.svg
        :target: ../../lite/lab/?path=auto_examples/electroencephalogram/plot_sp_ATAR_algorithm_tuning.ipynb
        :alt: Launch JupyterLite
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_sp_ATAR_algorithm_tuning.ipynb <plot_sp_ATAR_algorithm_tuning.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_sp_ATAR_algorithm_tuning.py <plot_sp_ATAR_algorithm_tuning.py>`


.. include:: plot_sp_ATAR_algorithm_tuning.recommendations


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
