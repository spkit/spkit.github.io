
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/electroencephalogram/plot_sp_eeg_topomaps.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_electroencephalogram_plot_sp_eeg_topomaps.py>`
        to download the full example code or to run this example in your browser via JupyterLite or Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_electroencephalogram_plot_sp_eeg_topomaps.py:


===============================
EEG Topographic Map
===============================

.. GENERATED FROM PYTHON SOURCE LINES 7-17

.. code-block:: Python




    import numpy as np
    import matplotlib.pyplot as plt
    #from spkit import ICA
    import spkit as sp
    print('spkit version :', sp.__version__)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    spkit version : 0.0.9.7




.. GENERATED FROM PYTHON SOURCE LINES 18-20

Load and filter EEG Signal
----------------------------

.. GENERATED FROM PYTHON SOURCE LINES 20-32

.. code-block:: Python


    # Load sample EEG Data ( 16 sec, 128 smapling rate, 14 channel)
    # Filter signal (with IIR highpass 0.5Hz)

    X, fs, ch_names = sp.data.eeg_sample_14ch()


    Xf = sp.filter_X(X.copy(),fs=128.0, band=[0.5], btype='highpass',ftype='SOS')

    XR = sp.eeg.ATAR(Xf.copy(),wv='db3', winsize=128, thr_method='ipr',beta=0.2, k1=10, k2=100,OptMode='elim')









.. GENERATED FROM PYTHON SOURCE LINES 33-35

Rhythmic Powers, 
------------------

.. GENERATED FROM PYTHON SOURCE LINES 35-48

.. code-block:: Python


    # Total

    Pm = sp.eeg.rhythmic_powers(X=XR.copy(),fs=fs,fBands=[[8,14], [15,32]],Sum=True,Mean=False,SD =True)[0]
    Pm = 20*np.log10(Pm)

    # in windows

    Pmt = sp.eeg.rhythmic_powers_win(X=XR.copy(),winsize=128*2,overlap=64,fs=fs,
                                     fBands=[[8,14], [15,32]],Sum=True,Mean=False,SD =True)[0]
    Pmt = 20*np.log10(Pmt)









.. GENERATED FROM PYTHON SOURCE LINES 49-51

Topomap of Total power
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 51-75

.. code-block:: Python


    fig,ax = plt.subplots(1,2,figsize=(10,4))
    Z1,im1 = sp.eeg.topomap(data=Pm[0],ch_names=ch_names,shownames=False,axes=ax[0],return_im=True)
    Z2,im2 =sp.eeg.topomap(data=Pm[1],ch_names=ch_names,shownames=False,axes=ax[1],return_im=True)

    ax[0].set_title(r'$\alpha$ : [8-14] Hz')
    ax[1].set_title(r'$\beta$ : [15-32] Hz')
    plt.colorbar(im1, ax=ax[0],label='dB')
    plt.colorbar(im2, ax=ax[1],label='dB')
    plt.suptitle('Spkit-style')
    plt.show()

    fig,ax = plt.subplots(1,2,figsize=(10,4))
    Z1,im1 = sp.eeg.topomap(data=Pm[0],ch_names=ch_names,shownames=False,axes=ax[0],return_im=True,style='eeglab-mne')
    Z2,im2 =sp.eeg.topomap(data=Pm[1],ch_names=ch_names,shownames=False,axes=ax[1],return_im=True,style='eeglab-mne')

    ax[0].set_title(r'$\alpha$ : [8-14] Hz')
    ax[1].set_title(r'$\beta$ : [15-32] Hz')
    plt.colorbar(im1, ax=ax[0],label='dB')
    plt.colorbar(im2, ax=ax[1],label='dB')
    plt.suptitle('eeglab/mne-style')
    plt.show()





.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_eeg_topomaps_001.png
         :alt: Spkit-style, $\alpha$ : [8-14] Hz, $\beta$ : [15-32] Hz
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_eeg_topomaps_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_eeg_topomaps_002.png
         :alt: eeglab/mne-style, $\alpha$ : [8-14] Hz, $\beta$ : [15-32] Hz
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_eeg_topomaps_002.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 76-78

Topomap for specific time-windows
----------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 78-124

.. code-block:: Python


    t1,t2 = 7,18

    plt.figure(figsize=(10,4))
    plt.subplot(211)
    plt.plot(Pmt[:,0,:])
    plt.xlim([0,Pmt.shape[0]-1])
    plt.vlines([t1,t2],ymin=Pmt[:,0,:].min()-5,ymax=Pmt[:,0,:].max(),color='k')
    plt.grid()
    plt.ylabel(r'$\alpha$ (dB)')
    plt.subplot(212)
    plt.plot(Pmt[:,1,:])
    plt.xlim([0,Pmt.shape[0]-1])
    plt.vlines([t1,t2],ymin=Pmt[:,0,:].min()-5,ymax=Pmt[:,0,:].max(),color='k')
    plt.grid()
    plt.ylabel(r'$\beta$ (dB)')
    plt.xlabel('window #')
    plt.text(t1,0,'t1',fontsize=15,ha='center')
    plt.text(t2,0,'t2',fontsize=15,ha='center')
    plt.subplots_adjust(hspace=0)
    plt.show()

    fig,ax = plt.subplots(1,2,figsize=(10,4))
    Z1,im1 = sp.eeg.topomap(data=Pmt[t1,0,:],ch_names=ch_names,vmin=Pmt[t1].min(),vmax=Pmt[t1].max(),
                            shownames=False,axes=ax[0],return_im=True)
    Z2,im2 =sp.eeg.topomap(data=Pmt[t1,1,:],ch_names=ch_names,vmin=Pmt[t1].min(),vmax=Pmt[t1].max(),
                           shownames=False,axes=ax[1],return_im=True)

    ax[0].set_title(r'$\alpha$ : [8-14] Hz')
    ax[1].set_title(r'$\beta$ : [15-32] Hz')
    #plt.colorbar(im1, ax=ax[0],label='dB')
    plt.colorbar(im2, ax=ax[1],label='dB')
    plt.suptitle('t1')
    plt.show()

    fig,ax = plt.subplots(1,2,figsize=(10,4))
    Z1,im1 = sp.eeg.topomap(data=Pmt[t2,0,:],ch_names=ch_names,vmin=Pmt[t2].min(),vmax=Pmt[t2].max(),
                            shownames=False,axes=ax[0],return_im=True)
    Z2,im2 =sp.eeg.topomap(data=Pmt[t2,1,:],ch_names=ch_names,vmin=Pmt[t2].min(),vmax=Pmt[t2].max(),
                           shownames=False,axes=ax[1],return_im=True)

    ax[0].set_title(r'$\alpha$ : [8-14] Hz')
    ax[1].set_title(r'$\beta$ : [15-32] Hz')
    #plt.colorbar(im1, ax=ax[0],label='dB')
    plt.colorbar(im2, ax=ax[1],label='dB')
    plt.suptitle('t2')
    plt.show()


.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_eeg_topomaps_003.png
         :alt: plot sp eeg topomaps
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_eeg_topomaps_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_eeg_topomaps_004.png
         :alt: t1, $\alpha$ : [8-14] Hz, $\beta$ : [15-32] Hz
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_eeg_topomaps_004.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_eeg_topomaps_005.png
         :alt: t2, $\alpha$ : [8-14] Hz, $\beta$ : [15-32] Hz
         :srcset: /auto_examples/electroencephalogram/images/sphx_glr_plot_sp_eeg_topomaps_005.png
         :class: sphx-glr-multi-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.829 seconds)


.. _sphx_glr_download_auto_examples_electroencephalogram_plot_sp_eeg_topomaps.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/spkit/spkit/0.9.X?urlpath=lab/tree/notebooks/auto_examples/electroencephalogram/plot_sp_eeg_topomaps.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: lite-badge

      .. image:: images/jupyterlite_badge_logo.svg
        :target: ../../lite/lab/?path=auto_examples/electroencephalogram/plot_sp_eeg_topomaps.ipynb
        :alt: Launch JupyterLite
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_sp_eeg_topomaps.ipynb <plot_sp_eeg_topomaps.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_sp_eeg_topomaps.py <plot_sp_eeg_topomaps.py>`


.. include:: plot_sp_eeg_topomaps.recommendations


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
