
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/wavelet_analysis/plot_sp_wavelet_filtering.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_wavelet_analysis_plot_sp_wavelet_filtering.py>`
        to download the full example code or to run this example in your browser via JupyterLite or Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_wavelet_analysis_plot_sp_wavelet_filtering.py:


===============================
Wavelet Filtering
===============================

Other than classical frequency filtering, Wavelet filtering is one of common techniques used in signal processing. It allows to filter out short-time duration patterns captured by used wavelet. The patterns to be filtered out depends on the wavelet family (e.g. db3) used and number of level of decomposition.

Algorithmically, it is very straightforward. Decompose a signal x(n), into wavelet coefficients X(k), where each coefficient represents the strength of wavelet pattern at particular time. With some threshold, remove the coefficients by zeroing out and reconstruct the signal back.

The machanism to choose a threshold on the strength of wavelet coefficient depends on the application and objective. To remove the noise and compress the signal, a widely used approach is to filter out all the wavelet coefficients with smaller strength.
Literature [1] suggest the optimal threshold on the wavelet coeffiecient is theta = sigmaxsqrt{2log(N)}, where sigma = median(|X(k)|)/0.6745

There are other methods to choose threshold too. One can choose a (theta =1.5xSD(X(k))) or (theta =IQR(X(k))) as to select the outliers, by standard deviation and interquartile range, respectively.

According to the theory, the optimal threshold should be applied by zeroing out the coefficients below with magnitude lower than threshold (abs(X(k))< theta), and for later two methods of thresholds,standard deviation and interquartile range, the coefficients outside of the threshold should be zeroing out, since they reprepresent the outliers. However, some of the (weired) articles use these thresholds in other-way round.

[1] D.L. Donoho, J.M. Johnstone, Ideal spatial adaptation by wavelet shrinkage Biometrika, 81 (1994), pp. 425-455

For more details, check the Wavelet Analysis Section.

.. GENERATED FROM PYTHON SOURCE LINES 22-57



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/wavelet_analysis/images/sphx_glr_plot_sp_wavelet_filtering_001.png
         :alt: plot sp wavelet filtering
         :srcset: /auto_examples/wavelet_analysis/images/sphx_glr_plot_sp_wavelet_filtering_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/wavelet_analysis/images/sphx_glr_plot_sp_wavelet_filtering_002.png
         :alt: plot sp wavelet filtering
         :srcset: /auto_examples/wavelet_analysis/images/sphx_glr_plot_sp_wavelet_filtering_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/wavelet_analysis/images/sphx_glr_plot_sp_wavelet_filtering_003.png
         :alt: plot sp wavelet filtering
         :srcset: /auto_examples/wavelet_analysis/images/sphx_glr_plot_sp_wavelet_filtering_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/wavelet_analysis/images/sphx_glr_plot_sp_wavelet_filtering_004.png
         :alt: plot sp wavelet filtering
         :srcset: /auto_examples/wavelet_analysis/images/sphx_glr_plot_sp_wavelet_filtering_004.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/wavelet_analysis/images/sphx_glr_plot_sp_wavelet_filtering_005.png
         :alt: plot sp wavelet filtering
         :srcset: /auto_examples/wavelet_analysis/images/sphx_glr_plot_sp_wavelet_filtering_005.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/wavelet_analysis/images/sphx_glr_plot_sp_wavelet_filtering_006.png
         :alt: plot sp wavelet filtering
         :srcset: /auto_examples/wavelet_analysis/images/sphx_glr_plot_sp_wavelet_filtering_006.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    spkit-version  0.0.9.7
    WPD: False  wv: db3  threshold: optimal  k: 1.5  mode: elim  filter_out_below?: True
    WPD: False  wv: db3  threshold: sd  k: 1.5  mode: elim  filter_out_below?: True
    WPD: False  wv: db3  threshold: iqr  k: 1.5  mode: elim  filter_out_below?: True
    WPD: False  wv: db3  threshold: optimal  k: 1.5  mode: elim  filter_out_below?: True
    WPD: False  wv: coif4  threshold: optimal  k: 1.5  mode: elim  filter_out_below?: True






|

.. code-block:: Python


    import numpy as np
    import matplotlib.pyplot as plt
    import spkit as sp
    print('spkit-version ', sp.__version__)

    import spkit as sp
    x = sp.create_signal_1d(n=1000,seed=1)
    x = x + 0.1*np.random.randn(len(x))
    fs=100
    t = np.arange(len(x))/fs

    # Wavelet filtering with optimal threshold and db3
    xf = sp.wavelet_filtering(x.copy(),wv='db3',threshold='optimal',verbose=1,WPD=False,show=True,fs=fs)


    # with SD (Standard Deviation) as threshold criteria
    xf = sp.wavelet_filtering(x.copy(),wv='db3',threshold='sd',verbose=1,WPD=False,show=True,fs=fs)

    # with IQR (Inter-Quatile range) as threshold criteria
    xf = sp.wavelet_filtering(x.copy(),wv='db3',threshold='iqr',verbose=1,WPD=False,show=True,fs=fs)

    # Limiting the number of decompositions to 2
    xf = sp.wavelet_filtering(x.copy(),wv='db3',threshold='optimal',wpd_maxlevel=2,verbose=1,WPD=False,show=True,fs=fs)

    # With Coif4 wavelet
    xf = sp.wavelet_filtering(x.copy(),wv='coif4',threshold='optimal',verbose=1,WPD=False,show=True,fs=fs)


    plt.figure(figsize=(12,3))
    plt.plot(t,x)
    plt.xlim([t[0],t[-1]])
    plt.grid()
    plt.xlabel('time (s)')
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.475 seconds)


.. _sphx_glr_download_auto_examples_wavelet_analysis_plot_sp_wavelet_filtering.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/spkit/spkit/0.9.X?urlpath=lab/tree/notebooks/auto_examples/wavelet_analysis/plot_sp_wavelet_filtering.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: lite-badge

      .. image:: images/jupyterlite_badge_logo.svg
        :target: ../../lite/lab/?path=auto_examples/wavelet_analysis/plot_sp_wavelet_filtering.ipynb
        :alt: Launch JupyterLite
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_sp_wavelet_filtering.ipynb <plot_sp_wavelet_filtering.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_sp_wavelet_filtering.py <plot_sp_wavelet_filtering.py>`


.. include:: plot_sp_wavelet_filtering.recommendations


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
