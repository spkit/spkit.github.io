.. _installation-instructions:

=======================
Installing spkit
=======================

There are different ways to install spkit:

  * :ref:`Install the latest release <install_official_release>`. This  most 
    updated and stable way to install spkit. Spkit is built for cross-plateform support
    installing with `pip` should work for all the platforms and envrionments.

  * Installing instructions ara standard as for most of python libraries.

  .. * Install the version of spkit provided by your
  ..   :ref:`operating system or Python distribution <install_by_distribution>`.
  ..   This is a quick option for those who have operating systems or Python
  ..   distributions that distribute scikit-learn.
  ..   It might not provide the latest release version.

  .. * :ref:`Building the package from source
  ..   <install_bleeding_edge>`. This is best for users who want the
  ..   latest-and-greatest features and aren't afraid of running
  ..   brand-new code. This is also needed for users who wish to contribute to the
  ..   project.


.. _install_official_release:

Installing the latest release
=============================

.. This quickstart installation is a hack of the awesome
   https://spacy.io/usage/#quickstart page.
   See the original javascript implementation
   https://github.com/ines/quickstart






          <input type="radio" name="packager" id="quickstart-conda">
          <label for="quickstart-conda">conda</label><br />
          <input type="checkbox" name="config" id="quickstart-venv">
          <label for="quickstart-venv"></label>


.. raw:: html

  <div class="install">
       <strong>Operating System</strong>
          <input type="radio" name="os" id="quickstart-win" checked>
          <label for="quickstart-win">Windows</label>
          <input type="radio" name="os" id="quickstart-mac">
          <label for="quickstart-mac">macOS</label>
          <input type="radio" name="os" id="quickstart-lin">
          <label for="quickstart-lin">Linux</label><br />
       <strong>Packager</strong>
          <input type="radio" name="packager" id="quickstart-pip" checked>
          <label for="quickstart-pip">pip</label>
       </span>

.. raw:: html

       <div>
         <span class="spk-expandable" data-packager="pip" data-os="windows">Install the 64bit version of Python 3, for instance from <a href="https://www.python.org/">https://www.python.org</a>.</span
         ><span class="spk-expandable" data-packager="pip" data-os="mac">Install Python 3 using <a href="https://brew.sh/">homebrew</a> (<code>brew install python</code>) or by manually installing the package from <a href="https://www.python.org">https://www.python.org</a>.</span
         ><span class="spk-expandable" data-packager="pip" data-os="linux">Install python3 and python3-pip using the package manager of the Linux Distribution.</span
         ><span class="spk-expandable" data-packager="conda"
            >Install conda using the <a href="https://docs.conda.io/projects/conda/en/latest/user-guide/install/">Anaconda or miniconda</a>
             installers or the <a href="https://github.com/conda-forge/miniforge#miniforge">miniforge</a> installers
             (no administrator permission required for any of those).</span>
       </div>

Then run:

.. raw:: html

  <div class="highlight">
    <pre class="spk-expandable" data-packager="pip" data-os="linux" data-venv="no"
    ><span>pip3 install -U spkit</span></pre>

    <pre class="spk-expandable" data-packager="pip" data-os="windows" data-venv="no"
    ><span>pip install -U spkit</span></pre>

    <pre class="spk-expandable" data-packager="pip" data-os="mac" data-venv="no"
    ><span>pip install -U spkit</span></pre>

    <pre class="spk-expandable" data-packager="pip" data-os="linux" data-venv=""
    ><span>python3 -m venv spkit-venv</span>
  <span>source spkit-venv/bin/activate</span>
  <span>pip3 install -U spkit</span></pre>

    <pre class="spk-expandable" data-packager="pip" data-os="windows" data-venv=""
    ><span>python -m venv spkit-venv</span>
  <span>spkit-venv\Scripts\activate</span>
  <span>pip install -U spkitn</span></pre>

    <pre class="spk-expandable" data-packager="pip" data-os="mac" data-venv=""
    ><span>python -m venv spkit-venv</span>
  <span>source spkit-venv/bin/activate</span>
  <span>pip install -U spkit</span></pre>

    <pre class="spk-expandable" data-packager="conda"
    ><span>conda create -n spkit-env -c conda-forge spkit</span>
  <span>conda activate spkit-env</span></pre>
  </div>

In order to check your installation you can use

.. raw:: html

  <div class="highlight">
    <pre class="spk-expandable" data-packager="pip" data-os="linux" data-venv="no"
    ><span>python3 -m pip show spkit  # to see which version and where spkit is installed</span>
  <span>python3 -m pip freeze  # to see all packages installed in the active virtualenv</span>
  <span>python3 -c "import spkit; spkit.__version__"</span></pre>

    <pre class="spk-expandable" data-packager="pip" data-os="windows" data-venv="no"
    ><span>python -m pip show spkit  # to see which version and where spkit is installed</span>
  <span>python -m pip freeze  # to see all packages installed in the active virtualenv</span>
  <span>python -c "import spkit; spkit.__version__"</span></pre>

    <pre class="spk-expandable" data-packager="pip" data-os="mac" data-venv="no"
    ><span>python -m pip show spkit  # to see which version and where spkit is installed</span>
  <span>python -m pip freeze  # to see all packages installed in the active virtualenv</span>
  <span>python -c "import spkit; spkit.__version__"</span></pre>

    <pre class="spk-expandable" data-packager="pip" data-venv=""
    ><span>python -m pip show spkit  # to see which version and where spkit is installed</span>
  <span>python -m pip freeze  # to see all packages installed in the active virtualenv</span>
  <span>python -c "import spkit; spkit.__version__"</span></pre>

    <pre class="spk-expandable" data-packager="conda"
    ><span>conda list spkit  # to see which spkit version is installed</span>
  <span>conda list  # to see all packages installed in the active conda environment</span>
  <span>python -c "import spkit; spkit.__version__"</span></pre>
  </div>


Installing with **conda** or **conda-forge** is in pipeline. Once that is comleted, the instructions
will be shared here.



.. Note that in order to avoid potential conflicts with other packages it is
.. strongly recommended to use a `virtual environment (venv)
.. <https://docs.python.org/3/tutorial/venv.html>`_ or a `conda environment
.. <https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html>`_.

.. Using such an isolated environment makes it possible to install a specific
.. version of spkit with pip or conda and its dependencies independently of
.. any previously installed Python packages. In particular under Linux is it
.. discouraged to install pip packages alongside the packages managed by the
.. package manager of the distribution (apt, dnf, pacman...).

.. Note that you should always remember to activate the environment of your choice
.. prior to running any Python command whenever you start a new terminal session.

.. If you have not installed NumPy or SciPy yet, you can also install these using
.. conda or pip. When using pip, please ensure that *binary wheels* are used,
.. and NumPy and SciPy are not recompiled from source, which can happen when using
.. particular configurations of operating system and hardware (such as Linux on
.. a Raspberry Pi).


.. spkit plotting capabilities (i.e., functions with keywords/arguments as "show" or classes with "plot") require Matplotlib. The examples require
.. Matplotlib and some examples require spkit, pandas, or seaborn. The
.. minimum version of spkit dependencies are listed below along with its
.. purpose.

.. .. include:: min_dependency_table.rst

.. .. warning::

..     spkit 0.0.9.0 was the last version to support Python 2.7 and Python 3.4.
..     spkit 0.0.9.3 supported Python 3.4-3.7.
..     spkit 0.0.9.4 supported Python 3.4-3.8.
..     spkit 0.0.9.6 and later requires Python 3.4 or newer.


.. .. _install_by_distribution:




Troubleshooting
===============

In some cases, installing spkit might show the conflicts in dependencies. For this reason, 
one of the requirement is `scikit-learn`. Installing `scikit-learn` prior to spkit resolves
may of the possible conflicts.

In case, you are not using `scikit-learn`, install following required libraries that will set-up 
the prerequites

* numpy>1.8
* pandas
* scipy
* scikit-learn
* python-picard
* matplotlib
* PyWavelets
* pylfsr
* h5py
* seaborn
* joblib
* phyaat


**Optional**
===============

There are a very few functions that require other libraries they are not included in requirements.
Here is a list of additional libraries for all the functions.

* pyedflib for :func:`spkit.io.read_bdf`
* cvxpy for  :func:`spkit.regularised_period_estimation` only if argument `cvxsol=True`







.. .. _windows_longpath:

.. Error caused by file path length limit on Windows
.. -------------------------------------------------

.. It can happen that pip fails to install packages when reaching the default path
.. size limit of Windows if Python is installed in a nested location such as the
.. `AppData` folder structure under the user home directory, for instance

..     C:\Users\username>C:\Users\username\AppData\Local\Microsoft\WindowsApps\python.exe -m pip install scikit-learn
..     Collecting scikit-learn
..     ...
..     Installing collected packages: scikit-learn
..     ERROR: Could not install packages due to an OSError: [Errno 2] No such file or directory: 'C:\\Users\\username\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.7_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python37\\site-packages\\sklearn\\datasets\\tests\\data\\openml\\292\\api-v1-json-data-list-data_name-australian-limit-2-data_version-1-status-deactivated.json.gz'

.. In this case it is possible to lift that limit in the Windows registry by
.. using the ``regedit`` tool:

.. #. Type "regedit" in the Windows start menu to launch ``regedit``.

.. #. Go to the
..    ``Computer\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem``
..    key.

.. #. Edit the value of the ``LongPathsEnabled`` property of that key and set
..    it to 1.

.. #. Reinstall scikit-learn (ignoring the previous broken installation):

.. .. prompt:: bash $

..     pip install --exists-action=i scikit-learn
